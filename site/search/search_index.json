{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u8fd9\u91cc\u662f@lhmd\u7684\u7b14\u8bb0\u7a7a\u95f4","text":""},{"location":"about/","title":"\u5173\u4e8e\u6211","text":"<p>\u8ba1\u7b97\u673a\u5b66\u9662\u672c\u79d1\u751f@ZJU</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/","title":"\u8bb0\u5f55\u4e86\u5b66\u4e60\u7684CS\u8bfe\u7a0b\u5185\u5bb9","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/","title":"\u8ba1\u7b97\u673a\u89c6\u89c9\u5bfc\u8bba","text":"<p>\u63a5\u89e6\u8ba1\u7b97\u673a\u89c6\u89c9\u76f8\u5173\u7684\u7b2c\u4e00\u95e8\u8bfe\u7a0b\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#lec-1-introduction","title":"Lec 1 Introduction","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#1-cv\u4e3b\u8981\u4efb\u52a1","title":"1 CV\u4e3b\u8981\u4efb\u52a1\uff1a","text":"<ul> <li>\u4e09\u7ef4\u91cd\u5efa</li> <li>\u56fe\u50cf\u7406\u89e3</li> <li>\u56fe\u50cf\u5408\u6210</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#2-review-of-linear-algebra","title":"2 Review of Linear Algebra","text":"<p>\u7701\u7565\u3002\u3002\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#lec-2-image-formation","title":"Lec 2 Image formation","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#1-camera-and-lens","title":"1 Camera and lens","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#pinhole-camera","title":"Pinhole camera","text":"<p>Add a barrier to block off most of the rays, the opening known as the aperture(\u5149\u5708).</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#lens","title":"Lens","text":"<p>Focal length:</p> \\[\\frac{1}{i}+\\frac{1}{o}=\\frac{1}{f}\\] <p>Image Magnification:</p> \\[m=\\frac{h_i}{h_o}\\] <p>Field of View (FOV):</p> <p></p> <ul> <li>Longer focal length = Narrower angle of view</li> <li>Shorter focal length = Wider angle of view </li> <li>FOV also depends on sensor size</li> </ul> <p>Aperture: control image brightness</p> <p>F-number: represent aperture as a fraction of focal length</p> <p>Depth of Field: range of object distances over which the image is sufficiently well focused</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#2-geometric-image-formation","title":"2 Geometric image formation","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#pinhole-camera-model-perspective-projection","title":"Pinhole camera model: Perspective Projection","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#homogeneous-coordinates","title":"Homogeneous coordinates","text":"<ul> <li>Converting from Cartesian to Homogeneous coordinates(add an extra dimension)</li> <li>Converting from Homogeneous to Cartesian(remove the last dimension by dividing a number)</li> </ul> <p>Homogeneous coordinates are invariant to scaling. </p> <p>Each point has an infinite set of homogeneous coordinates. </p> <p>The point in the 2D plane is projection of a ray in 3D space:</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#perspective-projection","title":"Perspective Projection","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#orthographic-projection","title":"Orthographic projection","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#3-photometric-image-formation","title":"3 Photometric image formation","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#shutter-speed","title":"Shutter speed","text":"<p>Shutter speed controls exposure time. The pixel value is equal to the integral of the light intensity within the exposure time.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#rolling-shutter-effect","title":"Rolling shutter effect","text":"<p>Exposing the image line by line.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#color-spaces","title":"Color spaces","text":"<ul> <li>RGB </li> <li>HSV (Hue / Value / Saturation)</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#color-sensing-bayer-filter","title":"Color Sensing: Bayer filter","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#lec-3-image-processing","title":"Lec 3 Image processing","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#1-image-processing-basics","title":"1 Image processing basics","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#convolution","title":"Convolution","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#2d-convolution","title":"2D convolution","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#discrete-2d-convolution","title":"Discrete 2D convolution","text":"<p>This can also be the same with the vector/matrix dot product.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#padding","title":"Padding","text":"<p>Adding pixels around the image border.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#blur","title":"Blur","text":"<p>box\u6ee4\u6ce2\uff1a\u5377\u79ef\u6838\u5168\u4e3a1</p> <p>\u9ad8\u65af\u6ee4\u6ce2\uff1a\u7279\u5b9a\u51fd\u6570</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#sharpen","title":"Sharpen","text":"<p>Sharpening is adding high frequencies. </p> <ul> <li>Let be the original image. </li> <li>High frequencies in image is J-blur(I), blur(I) is the low frequencied in image. </li> <li>Sharpened image is I+(I-blur(I)).</li> </ul> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#gradient-detection-filter","title":"Gradient detection filter","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#bilateral-filter","title":"Bilateral filter","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#2-image-sampling","title":"2 Image sampling","text":"<p>Change image size / resolution. resolution: pixel / inch</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#reducing-image-size","title":"Reducing image size","text":"<p>\u964d\u91c7\u6837\uff0c\u53bb\u6389\u65c1\u8fb9\u7684\u50cf\u7d20\u6216\u8005\u53d6\u5747\u503c</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#aliasing","title":"Aliasing","text":"<p>Aliasing - artifacts due to sampling </p> <p>Signals are changing too fast but sampled too slow.</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#anti-aliasing","title":"Anti-aliasing","text":"<p>How to do anti-aliasing </p> <ul> <li>Convolve the image with low-pass filters (e.g. Gaussian). </li> <li>Sample it with a Nyquist rate.</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#fourier-transform","title":"Fourier Transform","text":"<p>Represent a function as a weighted sum of sines and cosines.</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#3-image-magnification","title":"3 Image magnification","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#interpolation","title":"Interpolation","text":"<ul> <li> <p>Nearest-neighbor interpolation </p> </li> <li> <p>Linear interpolation </p> </li> <li> <p>Cubic spline interpolation (Polynomial interpolation) </p> </li> </ul> <p>Each interval of function has different parameters</p> <ul> <li>Bilinear Interpolation (2D) Bilinear Interpolation is good enough.</li> </ul> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#seam-carving","title":"Seam Carving","text":"<p>A method to change aspect ratio. </p> <p>Find connected path of pixels from top to bottom of which the edge energy is minimal, removing unnoticeable pixels.</p> <p>Algorithm: DP</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#lec-4-model-fitting-and-optimization","title":"Lec 4 Model Fitting and Optimization","text":"<p>\u672c\u8bb2\u4e0e\u6570\u503c\u5206\u6790\u8bfe\u7a0b\u9ad8\u5ea6\u91cd\u5408</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#1-optimization","title":"1 Optimization","text":"<p>minimize f<sub>0</sub>(x)</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#model-fitting","title":"Model fitting","text":"<p>Mean Square Error (MSE)</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#2-numerical-methods","title":"2 Numerical methods","text":"<p>Find a solution path: F (x<sub>0</sub>) &gt; F (x<sub>1</sub>) &gt; \u2026 &gt; F (x<sub>k</sub>) &gt; \u2026</p> <p>\u4e0e\u6570\u503c\u5206\u6790\u8bfe\u4e0a\u5185\u5bb9\u7c7b\u4f3c\uff0c\u6cf0\u52d2\u5c55\u5f00\uff0c\u8fdb\u884c\u8fed\u4ee3\uff0c\u505a\u4e00\u9636\u3001\u4e8c\u9636\u8fd1\u4f3c</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u68af\u5ea6\u4e0b\u964d\u6cd5\u8fed\u4ee3\u6cd5\u7684\u4e00\u79cd","title":"\u68af\u5ea6\u4e0b\u964d\u6cd5\uff1a\u8fed\u4ee3\u6cd5\u7684\u4e00\u79cd","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#newton-method\u89c1\u6570\u503c\u5206\u6790\u8bfe\u7a0b","title":"Newton method\uff1a\u89c1\u6570\u503c\u5206\u6790\u8bfe\u7a0b","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u9ad8\u65af-\u725b\u987f\u8fed\u4ee3","title":"\u9ad8\u65af-\u725b\u987f\u8fed\u4ee3","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#3-robust-estimation","title":"3 Robust estimation","text":"<p>Use other loss functions to replace MSE\uff0c\u53bb\u6389\u5f71\u54cd\u5f88\u5927\u7684\u566a\u70b9</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#random-sample-concensus-ransac","title":"Random Sample Concensus (RANSAC)","text":"<p>Key ideas </p> <ul> <li>The distribution of inliers is similar  while outliers differ a lot </li> <li>Use data point pairs to vote</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#4-interpolation","title":"4 Interpolation","text":"<p>\u5177\u4f53\u8bf7\u53c2\u8003\u6570\u503c\u5206\u6790</p> <p>\u7ebf\u6027\u63d2\u503c</p> <p>\u4e09\u6b21\u6837\u6761\u63d2\u503c</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#5-graphcut","title":"5 Graphcut","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#images-as-graphs","title":"Images as Graphs","text":"<p>A vertex for each pixel, an edge between each pair, each edge is weighted by the affinity or similarity between its two vertices.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#normalized-cut","title":"Normalized cut","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#markov-random-field-mrf","title":"Markov Random Field (MRF)","text":"<p>\u9a6c\u5c14\u79d1\u592b\u968f\u673a\u573a\uff0c\u6ca1\u770b\u61c2</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#lec-5-image-matching-and-motion-estimation","title":"Lec 5 Image Matching and Motion Estimation","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#1-image-matching","title":"1 Image matching","text":"<p>Finding point-to-point correspondences between two images.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#steps","title":"Steps","text":"<ul> <li>Detection: Identify the interest points (key points). </li> <li>Description: Extract vector feature descriptor surrounding each interest point. </li> <li>Matching: Determine correspondence between descriptors in two views.</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#detection","title":"detection","text":"<p>Principal Component Analysis (PCA)</p> <p>\u89d2\u70b9\u68c0\u6d4b</p> <ul> <li>Compute the covariance matrix at each point</li> </ul> <p></p> <ul> <li>Compute eigenvalues</li> </ul> <p></p> <ul> <li>Classify points using eigenvalues of H:</li> </ul> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#blob-detector","title":"Blob detector","text":"<p>Blobs are have large second derivatives in image intensity.</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#description","title":"Description","text":"<p>SIFT descriptor\uff1aScale Invariant Feature Transform descriptor, use histogram of oriented gradients.</p> <p>SIFT Algorithm</p> <ul> <li>Run DoG detector to find maximum in location/scale space.</li> <li>Find dominate orientation and normalize the orientation.</li> <li>For each (x, y, scale, orientation), create the only descriptor.</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#matching","title":"Matching","text":"<p>Define the difference between two features f1 , f2, distance L2 = ||f1 \u2212 f2 ||</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#2-motion-estimation","title":"2 Motion estimation","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#problem","title":"Problem","text":"<p>Both feature matching and motion estimation are called correspondence problems.</p> <p>\u7279\u5f81\u8ffd\u8e2a\uff1a</p> <p>Extract feature (interest) points and \"track\" them over multiple frames. </p> <p>Output: displacement of sparse points</p> <p>\u5149\u6d41\u6cd5\uff1a</p> <p>Recover image motion at each pixel </p> <p>Output: dense displacement field (optical flow filed)</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#lucas-kanade-method","title":"Lucas-Kanade Method","text":"<p>Key assumptions\uff1a</p> <ul> <li>Small motion: points do not move very far </li> <li>Brightness constancy: same point looks the same(in brightness) in every frame </li> <li>Spatial coherence: points move like their neighbors</li> </ul> <p>\u672c\u8bb2\u5c0f\u603b\u7ed3\uff1a</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#lec-6-image-stitching","title":"Lec 6 Image stitching","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#1-image-warping","title":"1 Image Warping","text":"<p>Change shape of image</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#linear-transformmation","title":"Linear Transformmation","text":"<p>Linear map = Matrices</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#affine-transformation","title":"Affine Transformation","text":"<p>Affine map = linear map + translation</p> <p></p> <p>Using homogenous coordinates</p> <p></p> <ul> <li> <p>6 unknowns in equations </p> </li> <li> <p>2 equations for each match </p> </li> <li> <p>we need at least 3 matches to solve a affine transformation </p> </li> <li> <p>for n matches, solve with least squares</p> </li> </ul> <p></p> <p>The result of solution must be remembered. </p> <p>the last row with matrix must be [0 0 1]</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#projective-transformation-homography","title":"Projective Transformation (Homography)","text":"<ul> <li> <p>8 unknowns in equations </p> </li> <li> <p>Homography matrix is up to scale (can be multiplied by a scalar), which means the degree of freedom is 8 . </p> </li> <li> <p>2 equations for each match </p> </li> <li> <p>we need at least 4 matches to solve the homography </p> </li> <li> <p>for n matches, solve with ||h|| = 1</p> </li> </ul> <p>h = eigenvector of A<sup>T</sup>A with smallest eigenvalue</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#dof","title":"DoF","text":"<ul> <li>Translation: The degree of freedom is 2 </li> <li>Affine: The degree of freedom is 6 </li> <li>Projective: The degree of freedom is 8</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#forward-warping","title":"Forward Warping","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#inverse-warping","title":"Inverse Warping","text":"<p>if pixel lands between pixels, we interpolate color values from neighboring pixels.</p> <ul> <li>nearest neighbor </li> <li>bilinear (usually this method is enough) </li> <li>bicubic</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#2-image-stitching","title":"2 Image Stitching","text":"<p>Algorithm:</p> <ul> <li>Input images </li> <li>Feature matching </li> <li>Compute transformation matrix with RANSAC </li> <li>Fix image 1 and warp image 2</li> </ul> <p>Cylindrical projection:</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#lec-7-structure-from-motion","title":"Lec 7 Structure from Motion","text":"<p>Target: recover camera poses and 3D structure of a scene from its images</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#1-camera-calibration","title":"1 Camera calibration","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u56fe\u50cf\u5904\u7406","title":"\u56fe\u50cf\u5904\u7406","text":"<p>\u53c2\u8003\u6587\u732e\uff1a\u56fe\u50cf\u5904\u7406\u2014\u2014\u76f8\u673a\u6807\u5b9a</p> <p>\u4e16\u754c\u5750\u6807\u7cfb\uff08world coordinate\uff09(xw,yw,zw)\uff0c\u4e5f\u79f0\u4e3a\u6d4b\u91cf\u5750\u6807\u7cfb\uff0c\u662f\u4e00\u4e2a\u4e09\u7ef4\u76f4\u89d2\u5750\u6807\u7cfb\uff0c\u4ee5\u5176\u4e3a\u57fa\u51c6\u53ef\u4ee5\u63cf\u8ff0\u76f8\u673a\u548c\u5f85\u6d4b\u7269\u4f53\u7684\u7a7a\u95f4\u4f4d\u7f6e\u3002\u4e16\u754c\u5750\u6807\u7cfb\u7684\u4f4d\u7f6e\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u81ea\u7531\u786e\u5b9a\u3002\u4e16\u754c\u5750\u6807\u7cfb\u7684\u6700\u5c0f\u5355\u4f4d\u4e3amm\u3002</p> <p>\u76f8\u673a\u5750\u6807\u7cfb\uff08camera coordinate\uff09(xc,yc,zc)\uff0c\u4e5f\u662f\u4e00\u4e2a\u4e09\u7ef4\u76f4\u89d2\u5750\u6807\u7cfb\uff0c\u539f\u70b9\u4f4d\u4e8e\u955c\u5934\u5149\u5fc3\u5904\uff0cxc\u3001yc\u8f74\u5206\u522b\u4e0e\u50cf\u9762\u7684\u4e24\u8fb9\u5e73\u884c\uff0czc\u8f74\u4e3a\u955c\u5934\u5149\u8f74\uff0c\u4e0e\u50cf\u5e73\u9762\u5782\u76f4\u3002\u76f8\u673a\u5750\u6807\u7cfb\u7684\u6700\u5c0f\u5355\u4f4d\u4e3amm\u3002</p> <p>\u56fe\u50cf\u5750\u6807\u7cfb\uff08image coordinate\uff09(x,y)\uff0c\u662f\u50cf\u5e73\u9762\u4e0a\u7684\u4e8c\u7ef4\u76f4\u89d2\u5750\u6807\u7cfb\u3002\u56fe\u50cf\u5750\u6807\u7cfb\u7684\u539f\u70b9\u4e3a\u955c\u5934\u5149\u8f74\u4e0e\u50cf\u5e73\u9762\u7684\u4ea4\u70b9\uff08\u4e5f\u79f0\u4e3b\u70b9\uff0cprincipal point\uff09\uff0c\u5b83\u7684x\u8f74\u4e0e\u76f8\u673a\u5750\u6807\u7cfb\u7684xc\u8f74\u5e73\u884c\uff0c\u5b83\u7684y\u8f74\u4e0e\u76f8\u673a\u5750\u6807\u7cfb\u7684yc\u8f74\u5e73\u884c\u3002\u56fe\u50cf\u5750\u6807\u7cfb\u7684\u6700\u5c0f\u5355\u4f4d\u4e3amm\u3002</p> <p>\u50cf\u7d20\u5750\u6807\u7cfb\uff08pixel coordinate\uff09(u,v)\uff0c\u662f\u56fe\u50cf\u5904\u7406\u5de5\u4f5c\u4e2d\u5e38\u7528\u7684\u4e8c\u7ef4\u76f4\u89d2\u5750\u6807\u7cfb\uff0c\u53cd\u6620\u4e86\u76f8\u673aCCD/CMOS\u82af\u7247\u4e2d\u50cf\u7d20\u7684\u6392\u5217\u60c5\u51b5\u3002\u5b83\u7684\u539f\u70b9\u4f4d\u4e8e\u56fe\u50cf\u5de6\u4e0a\u89d2\uff0c\u6a2a\u5750\u6807u\u8868\u793a\u50cf\u7d20\u6240\u5728\u7684\u5217\uff0c\u7eb5\u5750\u6807v\u8868\u793a\u50cf\u7d20\u6240\u5728\u7684\u884c\u3002\u50cf\u7d20\u5750\u6807\u7cfb\u4e0e\u56fe\u50cf\u5750\u6807\u7cfb\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u5e73\u79fb\u5173\u7cfb\uff0c\u5b83\u4eec\u540c\u5904\u4e8e\u50cf\u5e73\u9762\u3002\u50cf\u7d20\u5750\u6807\u7cfb\u7684x\u8f74\u4e0e\u56fe\u50cf\u5750\u6807\u7cfb\u7684u\u8f74\u5e73\u884c\uff0c\u50cf\u7d20\u5750\u6807\u7cfb\u7684y\u8f74\u4e0e\u56fe\u50cf\u5750\u6807\u7cfb\u7684v\u8f74\u5e73\u884c\u3002\u50cf\u7d20\u5750\u6807\u7cfb\u7684\u6700\u5c0f\u5355\u4f4d\u4e3a\u50cf\u7d20\u3002</p> <p>\u53d8\u6362\u8fc7\u7a0b\uff1a</p> <p>\u4e16\u754c=\u300b\u76f8\u673a=\u300b\u56fe\u50cf=\u300b\u50cf\u7d20</p> <p></p> <p></p> <p></p> <p>so, it is similar to lab2.</p> <p></p> <p>\u4e16\u754c\u76f4\u63a5\u8f6c\u6362\u4e3a\u50cf\u7d20\uff1a</p> <p></p> <p>\u89e3\u65b9\u7a0b\u65f6\uff1a</p> <ul> <li>\u627e\u7279\u5f81\u70b9\uff0c\u5efa\u7acb\u65b9\u7a0b\u6c42\u89e3\u672a\u77e5\u6570\\(p\\)</li> </ul> <p>\u5177\u4f53\u67e5\u770b\u53c2\u8003\u6587\u732e\u548c\u8bfe\u7a0bPPT</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#pnp\u95ee\u9898","title":"PnP\u95ee\u9898","text":"<p>\u53c2\u8003\u6587\u732e\uff1aPnP\u95ee\u9898\u5404\u79cd\u7b97\u6cd5\u603b\u7ed3\u5206\u6790</p> <p>\u95ee\u9898\u63cf\u8ff0\uff1a\u5df2\u77e5n\u4e2a3D\u70b9\u7684\u5750\u6807(\u76f8\u5bf9\u4e16\u754c\u5750\u6807\u7cfb)\u4ee5\u53ca\u8fd9\u4e9b\u70b9\u7684\u50cf\u7d20\u5750\u6807\u65f6\uff0c\u5982\u4f55\u4f30\u8ba1\u76f8\u673a\u7684\u4f4d\u59ff</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#direct-linear-transform-dlt","title":"Direct Linear Transform (DLT)","text":"<p>\u524d\u9762\u6211\u4eec\u901a\u8fc7\u89e3\u65b9\u7a0b\u7684\u5f62\u5f0f\u89e3\u51fa\u4e86\u8fd9\u4e2a\u65b9\u7a0b\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5c31\u53eb\u505aDLT\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#p3p","title":"P3P","text":"<p>\u81f3\u5c11\u4e09\u4e2a\u5bf9\u5e94\u5173\u7cfb\u53ef\u4ee5\u89e3\u51fa\u76f8\u673a\u5750\u6807\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a\u5bf9\u5e94\u5173\u7cfb\u4f7f\u8fd9\u4e2a\u89e3\u662f\u7279\u89e3\u3002</p> <p></p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#epnp","title":"EPnP","text":"<p>Main steps: </p> <ol> <li>Represent each point as the linear combination of 4 control points c<sub>i</sub>. </li> <li> <p>Construct a linear system in the control-point coordinate.</p> </li> <li> <p>Solve the equation.</p> </li> </ol>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#2-two-frame-structure-from-motion","title":"2 Two-frame structure from motion","text":"<ol> <li>Assume Camera Matrix \ud835\udc3e is known for each camera </li> <li>Find a few Reliable Corresponding Points</li> <li>Find Relative Camera Position \ud835\udc2d and Orientation \ud835\udc45</li> <li>Find 3D position of scene points</li> </ol> <p>\u8be6\u7ec6\u8bb2\u89e3\uff1a\u5bf9\u6781\u51e0\u4f55--\u77e5\u4e4e</p> <p>\u200b                   \u5bf9\u6781\u51e0\u4f55--github</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#3-multi-frame-structure-from-motion","title":"3 Multi-frame structure from motion","text":"<ol> <li>Initialize camera motion and scene structure </li> <li>For each additional view - Determine projection matrix of new camera using all the     known 3D points that are visible in its image - Refine and extend structure: compute new 3D points, reoptimize existing points that are also seen by this camera</li> <li>Refine structure and motion: Bundle Adjustment</li> </ol>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#4-a-modern-sfm-system-colmap","title":"4 A modern SfM system: COLMAP","text":"<p>sfM: Structure-from-Motion</p> <p>MVS: Multi-View Stereo</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#lec-8-depth-estimation-and-3d-reconstruction","title":"Lec 8 Depth estimation and 3D reconstruction","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#1-depth-estimation","title":"1 Depth estimation","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#11-introduction","title":"1.1 Introduction","text":"<p>\u200b   \u6df1\u5ea6\u4f20\u611f\u5668\u987e\u540d\u601d\u4e49\u662f\u7528\u6765\u63a2\u6d4b\u73af\u5883\u7269\u4f53\u4e0e\u4f20\u611f\u5668\u4e4b\u95f4\u7684\u8ddd\u79bb\u7684\u3002\u5b83\u7684\u8f93\u51fa\u4e3b\u8981\u53ef\u4ee5\u8868\u793a\u4e3a\u6df1\u5ea6\u56fe(depth map)\u548c\u70b9\u4e91(point cloud)\u8fd9\u4e24\u79cd\u5f62\u5f0f\u3002</p> <p>\u200b   \u6df1\u5ea6\u56fe\u50cf\uff08depth image)\u4e5f\u88ab\u79f0\u4e3a\u8ddd\u79bb\u5f71\u50cf\uff08range image\uff09\uff0c\u662f\u6307\u5c06\u4ece\u56fe\u50cf\u91c7\u96c6\u5668\u5230\u573a\u666f\u4e2d\u5404\u70b9\u7684\u8ddd\u79bb\uff08\u6df1\u5ea6\uff09\u4f5c\u4e3a\u50cf\u7d20\u503c\u7684\u56fe\u50cf\uff0c\u5b83\u76f4\u63a5\u53cd\u6620\u4e86\u666f\u7269\u53ef\u89c1\u8868\u9762\u7684\u51e0\u4f55\u5f62\u72b6\u3002\u6df1\u5ea6\u56fe\u50cf\u7ecf\u8fc7\u5750\u6807\u8f6c\u6362\u53ef\u4ee5\u8ba1\u7b97\u4e3a\u70b9\u4e91\u6570\u636e\uff0c\u6709\u89c4\u5219\u53ca\u5fc5\u8981\u4fe1\u606f\u7684\u70b9\u4e91\u6570\u636e\u4e5f\u53ef\u4ee5\u53cd\u7b97\u4e3a\u6df1\u5ea6\u56fe\u50cf\u6570\u636e\u3002 \u6df1\u5ea6\u6570\u636e\u6d41\u6240\u63d0\u4f9b\u7684\u56fe\u50cf\u5e27\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u50cf\u7d20\u70b9\u4ee3\u8868\u7684\u662f\u5728\u6df1\u5ea6\u611f\u5e94\u5668\u7684\u89c6\u91ce\u4e2d\uff0c\u8be5\u7279\u5b9a\u7684\uff08x, y\uff09\u5750\u6807\u5904\u7269\u4f53\u5230\u79bb\u6444\u50cf\u5934\u5e73\u9762\u6700\u8fd1\u7684\u7269\u4f53\u5230\u8be5\u5e73\u9762\u7684\u8ddd\u79bb\uff08\u4ee5\u6beb\u7c73\u4e3a\u5355\u4f4d\uff09\u3002</p> <ul> <li>\u88ab\u52a8\u6d4b\u8ddd\u4f20\u611f(Passive depth sensing)</li> </ul> <p>\u88ab\u52a8\u6d4b\u8ddd\u4f20\u611f=\u4e24\u4e2a\u76f8\u9694\u4e00\u5b9a\u8ddd\u79bb\u7684\u76f8\u673a\u83b7\u5f97\u4e24\u5e45\u56fe\u50cf+\u7acb\u4f53\u5339\u914d+\u4e09\u89d2\u539f\u7406\u8ba1\u7b97\u89c6\u5dee\uff08disparity\uff09</p> <p>\u200b       \u4e24\u4e2a\u76f8\u9694\u4e00\u5b9a\u8ddd\u79bb\u7684\u6444\u50cf\u673a\u540c\u65f6\u83b7\u53d6\u540c\u4e00\u573a\u666f\u7684\u4e24\u5e45\u56fe\u50cf\uff0c\u901a\u8fc7\u7acb\u4f53\u5339\u914d\u7b97\u6cd5\u627e\u5230\u4e24\u5e45\u56fe\u50cf\u4e2d\u5bf9\u5e94\u7684\u50cf\u7d20\u70b9\uff0c\u968f\u540e\u6839\u636e\u4e09\u89d2\u539f\u7406\u8ba1\u7b97\u51fa\u89c6\u5dee\u4fe1\u606f\uff0c\u800c\u89c6\u5dee\u4fe1\u606f\u901a\u8fc7\u8f6c\u6362\u53ef\u7528\u4e8e\u8868\u5f81\u573a\u666f\u4e2d\u7269\u4f53\u7684\u6df1\u5ea6\u4fe1\u606f\u3002\u57fa\u4e8e\u7acb\u4f53\u5339\u914d\u7b97\u6cd5\uff0c\u8fd8\u53ef\u901a\u8fc7\u62cd\u6444\u540c\u4e00\u573a\u666f\u4e0b\u4e0d\u540c\u89d2\u5ea6\u7684\u4e00\u7ec4\u56fe\u50cf\u6765\u83b7\u5f97\u8be5\u573a\u666f\u7684\u6df1\u5ea6\u56fe\u50cf\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u573a\u666f\u6df1\u5ea6\u4fe1\u606f\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5bf9\u56fe\u50cf\u7684\u5149\u5ea6\u7279\u5f81\u3001\u660e\u6697\u7279\u5f81\u7b49\u7279\u5f81\u8fdb\u884c\u5206\u6790\u95f4\u63a5\u4f30\u7b97\u5f97\u5230\u3002</p> <ul> <li>\u4e3b\u52a8\u6d4b\u8ddd\u4f20\u611f(Active depth sensing)</li> </ul> <p>\u200b       \u4e3b\u52a8\u6d4b\u8ddd\u4f20\u611f\u76f8\u6bd4\u8f83\u4e8e\u88ab\u52a8\u6d4b\u8ddd\u4f20\u611f\u6700\u660e\u663e\u7684\u7279\u5f81\u662f\uff1a\u8bbe\u5907\u672c\u8eab\u9700\u8981\u53d1\u5c04\u80fd\u91cf\u6765\u5b8c\u6210\u6df1\u5ea6\u4fe1\u606f\u7684\u91c7\u96c6\u3002\u8fd9\u4e5f\u5c31\u4fdd\u8bc1\u4e86\u6df1\u5ea6\u56fe\u50cf\u7684\u83b7\u53d6\u72ec\u7acb\u4e8e\u5f69\u8272\u56fe\u50cf\u7684\u83b7\u53d6\u3002\u8fd1\u5e74\u6765\uff0c\u4e3b\u52a8\u6df1\u5ea6\u4f20\u611f\u5728\u5e02\u9762\u4e0a\u7684\u5e94\u7528\u6108\u52a0\u4e30\u5bcc\u3002\u4e3b\u52a8\u6df1\u5ea6\u4f20\u611f\u7684\u65b9\u6cd5\u4e3b\u8981\u5305\u62ec\u4e86TOF\uff08Time of Flight\uff09\u3001\u7ed3\u6784\u5149\u3001\u6fc0\u5149\u626b\u63cf\u7b49\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#12-stereo-matching","title":"1.2 Stereo matching","text":"<p>\u53c2\u8003\u8d44\u65993D\u89c6\u89c9\u4e4b\u7acb\u4f53\u5339\u914d</p> <p>\u7acb\u4f53\u5339\u914d\u7b97\u6cd5</p> <p>\u6700\u7b80\u5355\u7684\u7b97\u6cd5\uff1a</p> <ul> <li>For each pixel in the first image </li> <li>Find corresponding epipolar line in the right image</li> <li>Search along epipolar line and pick the best match</li> <li>Simplest case: epipolar lines are horizontal scanlines</li> </ul> <p></p> <p>\u8fd9\u6837\u5c31\u627e\u5230\u4e86\u4e24\u4e2a\u76f8\u540c\u7684\u70b9\uff0c\u7136\u540e\u8ba1\u7b97\u6df1\u5ea6\u3002</p> <p></p> <p>\u5982\u679c\u89c6\u89d2\u4e0d\u5728\u540c\u4e00\u6c34\u5e73\u7ebf\u4e0a\uff0c\u5c31\u5148\u628a\u4ed6\u4eec\u8f6c\u5230\u540c\u4e00\u6c34\u5e73\u7ebf\u3002</p> <p></p> <p>Stereo as energy minimization\uff1a\u8ba9\u5f53\u524d\u50cf\u7d20\u7684\u4ee3\u4ef7\u805a\u5408\u8fc7\u7a0b\u53d7\u591a\u4e2a\u65b9\u5411(\u6216\u8def\u5f84)\u4e0a\u6240\u6709\u50cf\u7d20\u7684\u5f71\u54cd\uff0c\u65b9\u5411\u8d8a\u591a\u53c2\u4e0e\u5f71\u54cd\u5f53\u524d\u50cf\u7d20\u7684\u90bb\u57df\u50cf\u7d20\u5c31\u8d8a\u591a</p> <p>\u52a8\u6001\u89c4\u5212\uff1a</p> <p></p> <p>Choosing the stereo baseline\uff1a</p> <ul> <li>Too small: large depth error </li> <li>Too large: difficult search problem</li> </ul> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#13-multi-view-stereo","title":"1.3 Multi-view stereo","text":"<p>Plane-Sweep: \u5e73\u9762\u626b\u63cf\u7b97\u6cd5</p> <p>PatchMatch: PatchMatch</p> <ol> <li>Initialize pixels with random patch offsets</li> <li>Check if neighbors have better patch offsets</li> <li>Search in concentric radius around the current offset for better better patch offsets</li> <li>Go to Step 2 until converge.</li> </ol>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#2-3d-reconstruction","title":"2 3D reconstruction","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#21-3d-representations","title":"2.1 3D representations","text":"<ul> <li> <p>\u70b9\u4e91</p> </li> <li> <p>mesh \u7528G(E, V)\u8868\u793a</p> </li> <li> <p>voxel</p> </li> </ul> <p></p> <ul> <li> <p>SDF(Signed Distance Function)</p> </li> <li> <p>The distance of a point to the shape boundary</p> </li> <li>The distance is defined by a metric, usually the Euclidean distance</li> </ul> <p>Truncated Signed Distance Function (TSDF): Truncation SDF\u2019s distance value to [\u22121, 1]</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#22-3d-surface-reconstruction","title":"2.2 3D surface reconstruction","text":"<p>KinectFusion</p> <p></p> <p>\u6cca\u677e\u91cd\u5efa</p> <p>Marching Cubes\u7b97\u6cd5</p> <p>\u89c6\u9891\u4ecb\u7ecdMarching Cubes\u7b97\u6cd5: </p> <p>Marching Squares \u57fa\u672c\u548cMarching cubes \u7c7b\u4f3c\u3002</p> <p></p> <p>COLMAP: \u4e00\u79cd\u901a\u7528\u7684\u8fd0\u52a8\u7ed3\u6784 (SfM) \u548c\u591a\u89c6\u56fe\u7acb\u4f53 (MVS) \u7ba1\u9053\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#23-texture-mapping","title":"2.3 Texture mapping","text":"<p>Surface lives in 3D world space</p> <p>Every 3D surface point also has a place where it goes in the 2D image (texture).</p> <p>\u7eb9\u7406\u6620\u5c04(Texture mapping)</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#lec-9-deep-learning","title":"Lec 9 Deep Learning","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#1-machine-learning","title":"1 Machine learning","text":"<p>\u4f20\u7edf\u7a0b\u5e8f\u662f\u7ed9\u7535\u8111\u8f93\u5165\u548c\u7a0b\u5e8f\uff0c\u7535\u8111\u7ed9\u51fa\u8f93\u51fa\u3002</p> <p>\u673a\u5668\u5b66\u4e60\u662f\u7ed9\u7535\u8111\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u7535\u8111\u7ed9\u51fa\u7a0b\u5e8f\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u6982\u5ff5","title":"\u6982\u5ff5","text":"<ul> <li> <p>Model: \\(x\\)\u548c\\(y\\)\u4e4b\u95f4\u5173\u7cfb\u7684\u6570\u5b66\u8868\u793a</p> </li> <li> <p>Supervised learning(\u76d1\u7763\u5b66\u4e60): \u53ef\u4ee5\u7531\u8bad\u7ec3\u8d44\u6599\u4e2d\u5b66\u5230\u6216\u5efa\u7acb\u4e00\u4e2a\u6a21\u5f0f\uff08\u51fd\u6570/learning model\uff09\uff0c\u5e76\u4e14\u4f9d\u6b21\u6a21\u5f0f\u63a8\u6d4b\u51fa\u65b0\u7684\u5b9e\u4f8b\u3002</p> </li> </ul> <p>labeled data: exisitng (x,y) pairs, called training data.</p> <ul> <li> <p>\u673a\u5668\u5b66\u4e60\u7684\u4e24\u4e2a\u9636\u6bb5\uff1a</p> </li> <li> <p>\u8bad\u7ec3(Training)</p> </li> <li>\u6d4b\u8bd5(Testing)</li> </ul> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#2-linear-classifier","title":"2 Linear classifier","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#classification-model","title":"CLassification model","text":"<p>\u8f93\u5165\u662f\u4e00\u5f20\u56fe\u7247</p> <p>\u8f93\u51fa\u662f\u6bcf\u4e2a\u5206\u7c7b\u7684\u5bf9\u5e94\u5206\u6570</p> <p>\u6709\u4e24\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>\u8bc4\u5206\u51fd\u6570</li> <li>\u635f\u5931\u51fd\u6570</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#linear-classifier","title":"Linear classifier","text":"<p>\u5c06\u4e00\u5f20\u7167\u7247\u91cc\u9762\u7684\u6240\u6709\u50cf\u7d20\u53d8\u6210\u4e00\u4e2a\u5411\u91cf\u3002</p> <p>\\(f(x_i,W,b) = Wx_i + b\\)</p> <p>\u53c2\u6570W\u88ab\u79f0\u4e3a\u6743\u91cd\uff08weights\uff09\uff0cb\u88ab\u79f0\u4e3a\u504f\u5dee\u5411\u91cf\uff08bias vector\uff09\u3002</p> <ul> <li>\u9996\u5148\uff0c\u4e00\u4e2a\u5355\u72ec\u7684\u77e9\u9635\u4e58\u6cd5\\(Wx_i\\)\u5c31\u9ad8\u6548\u5730\u5e76\u884c\u8bc4\u4f3010\u4e2a\u4e0d\u540c\u7684\u5206\u7c7b\u5668\uff08\u6bcf\u4e2a\u5206\u7c7b\u5668\u9488\u5bf9\u4e00\u4e2a\u5206\u7c7b\uff09\uff0c\u5176\u4e2d\u6bcf\u4e2a\u7c7b\u7684\u5206\u7c7b\u5668\u5c31\u662fW\u7684\u4e00\u4e2a\u884c\u5411\u91cf\u3002</li> <li>\u8bad\u7ec3\u6570\u636e\u7528\u6765\u5b66\u4e60\\(W\\)\u548c\\(b\\)</li> <li>\u4e00\u5f20\u56fe\u50cf\u53ef\u770b\u505a\u9ad8\u7ef4\u7a7a\u95f4\u7684\u4e00\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u5206\u7c7b\u5c31\u662f\u628a\u8fd9\u4e9b\u70b9\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u533a\u57df\u3002</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#loss-function","title":"Loss function","text":"<p>\u5224\u65ad\u4e00\u4e2a\u6743\u91cd\u77e9\u9635\u662f\u5426\u8db3\u591f\u597d</p> <p>\u56de\u5f52\u95ee\u9898\u4f7f\u7528\u5747\u65b9\u8bef\u5dee(MSE)</p> <p>\u5206\u7c7b\u95ee\u9898\u4f7f\u7528\u4ea4\u53c9\u71b5(Cross Entropy Loss)</p> <p>\u53c2\u8003\u8d44\u6599\uff1a\u7b80\u5355\u8c08\u8c08Cross Entropy Loss</p> <p></p> <p>Softmax: \u628aK\u4e2a\u5b9e\u503c\u8f6c\u6362\u4e3a\u53e6\u5916K\u4e2a\u5b9e\u503c\u5e76\u4f7fK\u4e2a\u5b9e\u503c\u4e4b\u548c\u4e3a1\u7684\u51fd\u6570\u3002</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#3-neural-networks","title":"3 Neural networks","text":"<p>\u53c2\u8003\u8d44\u6599\uff1a\u6fc0\u6d3b\u51fd\u6570\uff08Activation Function\uff09</p> <p>\u200b   \u6fc0\u6d3b\u51fd\u6570\uff1a\u4e0d\u4f7f\u7528\u6fc0\u6d3b\u51fd\u6570\u7684\u8bdd\uff0c\u795e\u7ecf\u7f51\u7edc\u7684\u6bcf\u5c42\u90fd\u53ea\u662f\u505a\u7ebf\u6027\u53d8\u6362\uff0c\u591a\u5c42\u8f93\u5165\u53e0\u52a0\u540e\u4e5f\u8fd8\u662f\u7ebf\u6027\u53d8\u6362\u3002\u56e0\u4e3a\u7ebf\u6027\u6a21\u578b\u7684\u8868\u8fbe\u80fd\u529b\u901a\u5e38\u4e0d\u591f\uff0c\u6240\u4ee5\u8fd9\u65f6\u5019\u5c31\u4f53\u73b0\u4e86\u6fc0\u6d3b\u51fd\u6570\u7684\u4f5c\u7528\u4e86\uff0c\u6fc0\u6d3b\u51fd\u6570\u53ef\u4ee5\u5f15\u5165\u975e\u7ebf\u6027\u56e0\u7d20\u3002</p> <p>\u200b   \u5728\u795e\u7ecf\u7f51\u7edc\u6bcf\u4e00\u5c42\u795e\u7ecf\u5143\u505a\u5b8c\u7ebf\u6027\u53d8\u6362\u540e\uff0c\u52a0\u4e0a\u4e00\u4e2a\u975e\u7ebf\u6027\u6fc0\u52b1\u51fd\u6570\u5bf9\u7ebf\u6027\u53d8\u6362\u7684\u7ed3\u679c\u8fdb\u884c\u8f6c\u6362\uff0c\u8f93\u51fa\u5c31\u53ef\u4ee5\u53d8\u6210\u4e00\u4e2a\u975e\u7ebf\u6027\u7684\u51fd\u6570\u3002</p> <p></p> <p>\u591a\u5c42\u611f\u77e5\u5668</p> <p></p> <p>\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#4-convolutional-neural-networks--\u5377\u79ef\u795e\u7ecf\u7f51\u7edc","title":"4 Convolutional neural networks--\u5377\u79ef\u795e\u7ecf\u7f51\u7edc","text":"<p>\u53c2\u8003\u8d44\u6599\uff1a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8d85\u8be6\u7ec6\u4ecb\u7ecd</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#convolution--local-connectivity--weight-sharing","title":"Convolution = local connectivity + weight sharing","text":"<p>\u4e24\u8005\u7684\u5173\u952e\u4f5c\u7528\u5c31\u662f\u51cf\u5c11\u53c2\u6570\u6570\u91cf\uff0c\u4f7f\u8fd0\u7b97\u53d8\u5f97\u7b80\u6d01\u3001\u9ad8\u6548\uff0c\u80fd\u591f\u5728\u8d85\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e0a\u8fd0\u7b97</p> <p>local connectivity(\u5c40\u90e8\u8fde\u63a5): \u5bf9\u4e8e\u5c40\u90e8\u8fde\u63a5\u800c\u8a00\uff1a\u5c42\u95f4\u795e\u7ecf\u53ea\u6709\u5c40\u90e8\u8303\u56f4\u5185\u7684\u8fde\u63a5\uff0c\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u91c7\u7528\u5168\u8fde\u63a5\u7684\u65b9\u5f0f\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u8303\u56f4\u7684\u795e\u7ecf\u5143\u5219\u6ca1\u6709\u8fde\u63a5\uff1b\u8fde\u63a5\u4e0e\u8fde\u63a5\u4e4b\u95f4\u72ec\u7acb\u53c2\u6570\uff0c\u76f8\u6bd4\u4e8e\u53bb\u5168\u8fde\u63a5\u51cf\u5c11\u4e86\u611f\u53d7\u57df\u5916\u7684\u8fde\u63a5\uff0c\u6709\u6548\u51cf\u5c11\u53c2\u6570\u89c4\u6a21\u3002</p> <p>weight sharing(\u6743\u503c\u5171\u4eab): \u4ece\u56fe\u50cf\u5c40\u90e8\u5b66\u4e60\u5230\u7684\u4fe1\u606f\u5e94\u7528\u5230\u56fe\u50cf\u7684\u5176\u4ed6\u90e8\u4f4d\u53bb\u3002\u6743\u503c\u5171\u4eab\u610f\u5473\u7740\u6bcf\u4e00\u4e2a\u8fc7\u6ee4\u5668\u5728\u904d\u5386\u6574\u4e2a\u56fe\u50cf\u7684\u65f6\u5019\uff0c\u8fc7\u6ee4\u5668\u7684\u53c2\u6570(\u5373\u8fc7\u6ee4\u5668\u7684\u53c2\u6570\u7684\u503c)\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684</p> <p>\u53c2\u8003\uff1aweight sharing</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u611f\u53d7\u91cereceptive-fields","title":"\u611f\u53d7\u91ce(Receptive fields)","text":"<ul> <li>\u82e5\u76ee\u6807\u76f8\u5bf9\u611f\u53d7\u91ce\u8fc7\u5c0f\uff0c\u90a3\u8bad\u7ec3\u53c2\u6570\u53ea\u6709\u5c11\u90e8\u5206\u662f\u5bf9\u5e94\u4e8e\u8bad\u7ec3\u76ee\u6807\u7684\uff0c\u5219\u5728\u6d4b\u8bd5\u73af\u8282\uff0c\u4e5f\u5f88\u96be\u68c0\u6d4b\u51fa\u7c7b\u4f3c\u7684\u76ee\u6807\uff1b</li> <li>\u82e5\u76ee\u6807\u76f8\u5bf9\u611f\u53d7\u91ce\u8fc7\u5927\uff0c\u90a3\u8bad\u7ec3\u7684\u53c2\u6570\u90fd\u662f\u5bf9\u5e94\u4e8e\u6574\u4e2a\u5bf9\u8c61\u7684\u5c40\u90e8\u4fe1\u606f\uff0c\u662f\u4e0d\u591f\u5229\u4e8e\u68c0\u6d4b\u5c0f\u76ee\u6807\u7684\u3002</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u6c60\u5316\u5c42pooling-layer","title":"\u6c60\u5316\u5c42(Pooling layer)","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u603b\u4f53\u6846\u67b6","title":"\u603b\u4f53\u6846\u67b6","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#5-training-neural-networks","title":"5 Training neural networks","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u68af\u5ea6\u4e0b\u964d\u8bad\u7ec3cnn","title":"\u68af\u5ea6\u4e0b\u964d\u8bad\u7ec3CNN","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u53cd\u5411\u4f20\u64ad","title":"\u53cd\u5411\u4f20\u64ad","text":"<p>\u53c2\u8003\uff1a\u53cd\u5411\u4f20\u64ad-cs231n</p> <ol> <li>Forward data through the network, get loss</li> <li>Backprop to calculate the gradients</li> <li>Update the parameters using the gradient</li> <li>Go to step 1 if not converged</li> </ol>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5sgd","title":"\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5(SGD)","text":"<p>\u53c2\u8003\uff1a\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u8be6\u89e3</p> <p>\u4ec5\u8ba1\u7b97\u4e00\u6279\u968f\u673a\u91c7\u6837\u56fe\u50cf\u4e0a\u7684\u635f\u5931\u548c\u68af\u5ea6\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u8d85\u53c2\u6570hyper-parameters","title":"\u8d85\u53c2\u6570(hyper-parameters)","text":"<p>\u7b97\u6cd5\u8fd0\u884c\u524d\u9700\u8981\u51b3\u5b9a\u7684\u53c2\u6570\u3002</p> <p>\u9009\u62e9\u4f9d\u636e\uff1a</p> <ol> <li>Train for original model</li> <li>Validate to find hyperparameters</li> <li>Test to understand generalizability</li> </ol>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u8fc7\u62df\u5408overfitting","title":"\u8fc7\u62df\u5408(overfitting)","text":"<p>\u628a\u566a\u97f3\u70b9\u4e5f\u62df\u5408\u4e0a\u4e86\uff0c\u8fc7\u5206\u4f9d\u8d56\u6570\u636e\u96c6\u3002</p> <p>\u9632\u6b62\uff1a</p> <ol> <li> <p>Cross validation(\u9a8c\u8bc1) and early stop</p> </li> <li> <p>Regularization(\u6b63\u5219\u5316) or dropout</p> </li> </ol> <p>\u6b63\u5219\u5316\uff1a\u5728\u635f\u5931\u51fd\u6570\u4e2d\u7ed9\u6bcf\u4e2a\u53c2\u6570 w \u52a0\u4e0a\u6743\u91cd\uff0c\u5f15\u5165\u6a21\u578b\u590d\u6742\u5ea6\u6307\u6807\uff0c\u4ece\u800c\u6291\u5236\u6a21\u578b\u566a\u58f0\uff0c\u51cf\u5c0f\u8fc7\u62df\u5408\u3002 </p> <p>dropout\uff1a\u5728\u524d\u5411\u4f20\u64ad\u7684\u65f6\u5019\uff0c\u8ba9\u67d0\u4e2a\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u503c\u4ee5\u4e00\u5b9a\u7684\u6982\u7387p\u505c\u6b62\u5de5\u4f5c\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u6a21\u578b\u6cdb\u5316\u6027\u66f4\u5f3a\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u592a\u4f9d\u8d56\u67d0\u4e9b\u5c40\u90e8\u7684\u7279\u5f81</p> <ol> <li>Data augmentation(\u6570\u636e\u589e\u5f3a)</li> </ol> <p>\u53c2\u8003\uff1a\u6570\u636e\u589e\u5f3a(Data Augmentation)</p> <p>\u200b    \u4e3a\u4e86\u83b7\u5f97\u66f4\u591a\u7684\u6570\u636e\uff0c\u6211\u4eec\u53ea\u8981\u5bf9\u73b0\u6709\u7684\u6570\u636e\u96c6\u8fdb\u884c\u5fae\u5c0f\u7684\u6539\u53d8\u3002\u6bd4\u5982\u65cb\u8f6c\uff08flips\uff09\u3001\u79fb\u4f4d\uff08translations\uff09\u3001\u65cb\u8f6c\uff08rotations\uff09\u7b49\u5fae\u5c0f\u7684\u6539\u53d8\u3002\u6211\u4eec\u7684\u7f51\u7edc\u4f1a\u8ba4\u4e3a\u8fd9\u662f\u4e0d\u540c\u7684\u56fe\u7247\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u6279\u6807\u51c6\u5316batch-normalization","title":"\u6279\u6807\u51c6\u5316(Batch Normalization)","text":"<p>\u53c2\u8003\u6df1\u5165\u7406\u89e3BN</p> <p>\u200b   \u76ee\u7684\uff1aReduce internal covariate shift(\u5185\u90e8\u534f\u53d8\u91cf\u504f\u79fb)</p> <p>\u200b   \u795e\u7ecf\u7f51\u7edc\u7684\u6df1\u5ea6\u589e\u52a0\uff0c\u6bcf\u5c42\u7279\u5f81\u503c\u5206\u5e03\u4f1a\u9010\u6e10\u7684\u5411\u6fc0\u6d3b\u51fd\u6570\u7684\u8f93\u51fa\u533a\u95f4\u7684\u4e0a\u4e0b\u4e24\u7aef\uff08\u6fc0\u6d3b\u51fd\u6570\u9971\u548c\u533a\u95f4\uff09\u9760\u8fd1\uff0c\u8fd9\u6837\u7ee7\u7eed\u4e0b\u53bb\u5c31\u4f1a\u5bfc\u81f4\u68af\u5ea6\u6d88\u5931\u3002BN\u5c31\u662f\u901a\u8fc7\u65b9\u6cd5\u5c06\u8be5\u5c42\u7279\u5f81\u503c\u5206\u5e03\u91cd\u65b0\u62c9\u56de\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u7279\u5f81\u503c\u5c06\u843d\u5728\u6fc0\u6d3b\u51fd\u6570\u5bf9\u4e8e\u8f93\u5165\u8f83\u4e3a\u654f\u611f\u7684\u533a\u95f4\uff0c\u8f93\u5165\u7684\u5c0f\u53d8\u5316\u53ef\u5bfc\u81f4\u635f\u5931\u51fd\u6570\u8f83\u5927\u7684\u53d8\u5316\uff0c\u4f7f\u5f97\u68af\u5ea6\u53d8\u5927\uff0c\u907f\u514d\u68af\u5ea6\u6d88\u5931\uff0c\u540c\u65f6\u4e5f\u53ef\u52a0\u5feb\u6536\u655b\u3002</p> <p>\u200b   \u8bad\u7ec3\u65f6\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a\u5bf9\u6bcf\u4e2a\u9690\u5c42\u52a0\u4e0a\u4e00\u5c42BN\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#6-network-architectures","title":"6 Network architectures","text":"<p>\u4ee5\u524d\u53d1\u5c55\u4e0d\u597d\uff1a</p> <ul> <li>\u6570\u636e\u96c6\u8fc7\u5c0f\u5bfc\u81f4\u8fc7\u62df\u5408</li> <li>\u8ba1\u7b97\u80fd\u529b\u4e0d\u591f</li> </ul> <p>AlexNet</p> <p>ResNet</p> <p>DenseNet\uff1a\u4e92\u76f8\u8fde\u63a5\u6240\u6709\u7684\u5c42</p> <p></p> <p>MobileNets</p> <p>Neural Architecture Search(\u795e\u7ecf\u67b6\u6784\u641c\u7d22)</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#lec-10-recognition","title":"Lec 10 Recognition","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#1-semantic-segmentation\u8bed\u4e49\u5206\u5272","title":"1 Semantic segmentation(\u8bed\u4e49\u5206\u5272)","text":"<p>\u5728\u56fe\u50cf\u9886\u57df\uff0c\u8bed\u4e49\u6307\u7684\u662f\u56fe\u50cf\u7684\u5185\u5bb9\uff0c\u5bf9\u56fe\u7247\u610f\u601d\u7684\u7406\u89e3\uff0c\u6bd4\u5982\u5de6\u56fe\u7684\u8bed\u4e49\u5c31\u662f\u4e09\u4e2a\u4eba\u9a91\u7740\u4e09\u8f86\u81ea\u884c\u8f66\uff1b\u5206\u5272\u7684\u610f\u601d\u662f\u4ece\u50cf\u7d20\u7684\u89d2\u5ea6\u5206\u5272\u51fa\u56fe\u7247\u4e2d\u7684\u4e0d\u540c\u5bf9\u8c61\uff0c\u5bf9\u539f\u56fe\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\u90fd\u8fdb\u884c\u6807\u6ce8\u3002</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u540d\u8bcd\u89e3\u91ca","title":"\u540d\u8bcd\u89e3\u91ca","text":"<p>\u6ed1\u52a8\u7a97\u53e3\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u9ad8\uff0c\u6709\u9650\u7684\u611f\u53d7\u91ce\u3002</p> <p>\u5168\u8fde\u63a5\u5377\u79ef\u7f51\u7edc\uff1a\u4e00\u6b21\u505a\u51fa\u9884\u6d4b\uff0c\u635f\u5931\u51fd\u6570\u662f\u6bcf\u4e2a\u50cf\u7d20\u7684\u4ea4\u53c9\u71b5\u3002</p> <p>Unpolling\uff1a\u4e00\u79cd\u4e0a\u91c7\u6837\u65b9\u6cd5\uff0c\u6709\u5f88\u591a\u79cd\u5177\u4f53\u6848\u4f8b\u3002</p> <p></p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#u-net","title":"U-Net","text":"<p>Skip Connection: \u8df3\u8fc7\u4e2d\u95f4\u8fde\u63a5\uff0c\u4f7f\u6df1\u5c42\u548c\u6d45\u5c42\u8fde\u63a5\u8d77\u6765\u3002</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#deeplab","title":"DeepLab","text":"<p>\u53c2\u8003: \u56fe\u50cf\u8bed\u4e49\u5206\u5272\u4e4bFCN\u548cCRF</p> <p>\u56fe\u50cf\u8bed\u4e49\u5206\u5272\u6b65\u9aa4\uff1a</p> <ul> <li>FCN - \u5168\u5377\u79ef\u7f51\u7edc</li> <li>CRF - \u6761\u4ef6\u968f\u673a\u573a(Conditional random field)</li> <li>MRF - \u9a6c\u5c14\u79d1\u592b\u968f\u673a\u573a</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u8bc4\u4f30\u6307\u6807","title":"\u8bc4\u4f30\u6307\u6807","text":"<p>Per-pixel Intersection-over-union</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#2-object-detection\u76ee\u6807\u68c0\u6d4b","title":"2 Object detection(\u76ee\u6807\u68c0\u6d4b)","text":"<p>\u8f93\u5165\uff1a\u4e00\u5f20RGB\u56fe\u7247</p> <p>\u8f93\u51fa\uff1a\u8868\u793a\u5bf9\u8c61\u7684\u4e00\u7ec4\u8fb9\u754c\u6846(\u7c7b\u522b\u6807\u7b7e\u3001\u6846\u7684\u4f4d\u7f6e\uff0c\u6846\u7684\u5927\u5c0f)</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u5355\u4e2a\u7269\u4f53\u68c0\u6d4b","title":"\u5355\u4e2a\u7269\u4f53\u68c0\u6d4b","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u591a\u4e2a\u7269\u4f53\u68c0\u6d4b","title":"\u591a\u4e2a\u7269\u4f53\u68c0\u6d4b","text":"<p>\u4e00\u5f20\u7167\u7247\u7ecf\u8fc7\u5404\u79cd\u4e0d\u540c\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5f97\u51fa\u7ed3\u679c\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u6ed1\u52a8\u7a97\u53e3","title":"\u6ed1\u52a8\u7a97\u53e3","text":"<p>Apply a CNN to many different crops of the image, CNN classifies each crop as object or background.</p> <p>\u4e00\u5f20\u56fe\u7247\u53ef\u4ee5\u88ab\u62c6\u5206\u6210\u5f88\u591aboxes\uff0c\u6211\u4eec\u4e0d\u80fd\u68c0\u6d4b\u6240\u6709\u8fd9\u4e9b\u56fe\u7247\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#region-proposals\u5019\u9009\u533a\u57df","title":"Region proposals(\u5019\u9009\u533a\u57df)","text":"<p>\u7528\u56fe\u50cf\u5206\u5272\u7b97\u6cd5\u5148\u5206\u5272\u56fe\u50cf\uff0c\u7136\u540e\u518d\u8fdb\u884c\u76ee\u6807\u68c0\u6d4b\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#r-cnn","title":"R-CNN","text":"<ol> <li>\u9009\u5efa\u8bae\u6846\u5e76\u8c03\u6574\u5c3a\u5bf8</li> <li>\u5bf9\u6bcf\u4e2a\u7c7b\u522b\u4f7f\u7528SVM\u5206\u7c7b\u5668\u8fdb\u884c\u6253\u5206</li> <li>\u8fdb\u884c\u7b5b\u9009</li> <li>\u635f\u5931\u51fd\u6570\uff1a\\(loU=\\frac {Area Of Overlap}{Area Of Union}\\)</li> </ol> <p>Mean Average Precision (mAP)\uff1a</p> <ol> <li>Run object detector on all test images </li> <li> <p>For each category, compute Average Precision (AP) = area under Precision vs Recall Curve </p> </li> <li> <p>For each detection (highest score to lowest score) </p> <ol> <li> <p>If it matches some GT box with IoU &gt; 0.5, mark it as positive and eliminate the GT</p> </li> <li> <p>Otherwise mark it as negative </p> </li> <li> <p>Plot a point on PR Curve</p> </li> <li>Average Precision (AP) = area under PR curve</li> <li>Mean Average Precision (mAP) = average of AP for each category</li> <li>For \u201cCOCO mAP\u201d: Compute mAP@thresh for each IoU threshold (0.5, 0.55, 0.6, \u2026, 0.95) and take average</li> </ol> </li> </ol> <p>\u975e\u6700\u5927\u6291\u5236(Non-Max Suppression):</p> <ol> <li>Select the highest-scoring box </li> <li>Eliminate lower-scoring boxes with IoU &gt; threshold </li> <li>If any boxes remain, goto 1</li> </ol>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#fast-r-cnn","title":"Fast R-CNN:","text":"<p>A two-stage object detector</p> <ul> <li>First stage: run once per image</li> <li>Backbone network</li> <li>RPN</li> <li>Second stage: run once per region</li> <li>Crop features: RoI pool / align</li> <li>Predict object class</li> <li>Predict bbox offset</li> </ul> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#rol-pool","title":"Rol Pool","text":"<p>R-CNN\u4e2d\u7684ROIPool\u3001ROIAlign</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#rpn","title":"RPN","text":"<p>\u53c2\u8003\uff1a\u8be6\u89e3RPN\u7f51\u7edc</p> <p>RPN\uff08Region Proposal Network\uff09\u662fFaster-RCNN\u7f51\u7edc\u7528\u4e8e\u63d0\u53d6\u9884\u9009\u6846\uff08\u4e5f\u5c31\u662fRCNN\u4e2d\u4f7f\u7528selective search\u7b97\u6cd5\u8fdb\u884cRegion Proposal\u7684\u90e8\u5206\uff09\uff0cR-CNN\u53caFast-RCNN\u4e2d\u4e00\u4e2a\u6027\u80fd\u74f6\u9888\u5c31\u662f\u63d0\u53d6\u9884\u9009\u6846\u7684\u90e8\u5206\uff0c\u800cRPN\u5f88\u597d\u5730\u5bf9\u8fd9\u4e2a\u90e8\u5206\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u539f\u56e0\u5728\u4e8e\u5b83\u5c06\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5f15\u5165\u4e86\u8fdb\u6765\uff0c\u4f7f\u7528\u7279\u5f81\u63d0\u53d6\u7684\u5f62\u5f0f\u751f\u6210\u51fa\u9884\u9009\u6846\u7684\u4f4d\u7f6e\u4ece\u800c\u964d\u4f4e\u4e86selective search\u7b97\u6cd5\u5e26\u6765\u7684\u8ba1\u7b97\u65f6\u95f4\u4e0a\u7684\u5f00\u9500\u3002</p> <p>\u200b   \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u5f20\u5927\u5c0f\u4e3a600\u00d7800\u7684\u56fe\u50cf\uff0c\u5728\u901a\u8fc7\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u5757\u540e\uff0c\u8fd9\u5e45\u8f93\u5165\u56fe\u50cf\u7f29\u5c0f\u4e3a38\u00d756\u7684\u7279\u5f81\u56fe\uff0c\u7279\u5f81\u56fe\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u67099\u4e2a\u951a\u70b9\u76d2\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u670938 * 56 * 9=1192\u4e2a\u5efa\u8bae\u6216\u951a\u7bb1\u9700\u8981\u8003\u8651\u3002\u800c\u6bcf\u4e2a\u951a\u7bb1\u90fd\u6709\u4e24\u4e2a\u53ef\u80fd\u7684\u6807\u7b7e\uff08\u524d\u666f\u6216\u80cc\u666f\uff09\u3002\u5982\u679c\u6211\u4eec\u628a\u7279\u5f81\u56fe\u7684\u6df1\u5ea6\u5b9a\u4e3a18\uff089\u4e2a\u951a\u70b9x 2\u4e2a\u6807\u7b7e\uff09\uff0c\u6211\u4eec\u5c06\u4f7f\u6bcf\u4e2a\u951a\u70b9\u90fd\u6709\u4e00\u4e2a\u6709\u4e24\u4e2a\u503c\u7684\u5411\u91cf\uff08\u901a\u5e38\u79f0\u4e3a\u9884\u6d4b\u503c\uff09\uff0c\u4ee3\u8868\u524d\u666f\u548c\u80cc\u666f\u3002\u5982\u679c\u6211\u4eec\u5c06\u9884\u6d4b\u503c\u9001\u5165softmax/logistic\u56de\u5f52\u6fc0\u6d3b\u51fd\u6570\uff0c\u5b83\u5c06\u9884\u6d4b\u6807\u7b7e\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#3-instance-segmentation\u5b9e\u4f8b\u5206\u5272","title":"3 Instance segmentation(\u5b9e\u4f8b\u5206\u5272)","text":"<ol> <li>\u8bed\u4e49\u5206\u5272\u7684\u8bdd\u53ea\u9700\u8981\u5206\u51fa\u4e0d\u540c\u7c7b\u5c31\u884c\uff0c\u540c\u7c7b\u7684\u4e0d\u540c\u4e2a\u4f53\u4e0d\u9700\u8981\u5206\uff0c\u4f46\u662fInstance Segmentation\u8fd9\u91cc\u5728\u8bed\u4e49\u5206\u5272\u7684\u57fa\u7840\u4e0a\u53c8\u628a\u4e0d\u540c\u7684\u7c7b\u8fdb\u884c\u4e86\u5206\u5272</li> <li>\u76ee\u6807\u68c0\u6d4b\u540e\uff0c\u9700\u8981\u5bf9\u68c0\u6d4b\u7684\u90e8\u5206\u505a\u8fdb\u4e00\u6b65\u7684\u8bed\u4e49\u5206\u5272</li> </ol> <p>Mask R-CNN:</p> <p>\u5728Faster R-CNN\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u9884\u6d4b\u5206\u5272mask\u7684\u5206\u652f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u5176\u4e2d\u9ed1\u8272\u90e8\u5206\u4e3a\u539f\u6765\u7684Faster-RCNN\uff0c\u7ea2\u8272\u90e8\u5206\u4e3a\u5728Faster-RCNN\u7f51\u7edc\u4e0a\u7684\u4fee\u6539\u3002\u5c06RoI Pooling \u5c42\u66ff\u6362\u6210\u4e86RoIAlign\u5c42\uff1b\u6dfb\u52a0\u4e86\u5e76\u5217\u7684FCN\u5c42\uff08mask\u5c42\uff09\u3002</p> <p></p> <p>DeepSnake: \u901a\u8fc7\u6df1\u5ea6\u5b66\u4e60\u7ed9\u51fa\u8f93\u5165\u521d\u59cb\u8f6e\u5ed3\u9876\u70b9\u9700\u8981\u8c03\u6574\u7684\u504f\u79fb\u91cf\uff0c\u4ee5\u5f97\u5230\u66f4\u4e3a\u51c6\u786e\u7684\u5b9e\u4f8b\u5206\u5272\u7ed3\u679c\u3002</p> <p>Panoptic segmentation: \u5bf9\u6bcf\u4e00\u4e2a\u50cf\u7d20\u90fd\u5206\u51fa\u7c7b\u522b</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#4-human-pose-estimation\u4eba\u4f53\u59ff\u6001\u4f30\u8ba1","title":"4 Human pose estimation(\u4eba\u4f53\u59ff\u6001\u4f30\u8ba1)","text":"<p>\u901a\u8fc7\u5b9a\u4f4d\u4e00\u7ec4\u5173\u952e\u70b9\u6765\u8868\u793a\u4eba\u7684\u59ff\u52bf</p> <p>\u5355\u4eba\uff1aRepresent joint location as the heatmap(\u73b0\u5728\u628a\u5173\u952e\u70b9\u7528\u70ed\u529b\u56fe(heat map)\u8868\u793a\uff0c\u4e0d\u9700\u8981\u5168\u8fde\u63a5\u5c42\uff0c\u52a0\u901f\u7b97\u6cd5\u51cf\u5c11\u53c2\u6570\u91cf\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5173\u952e\u70b9\u8f93\u51fa\u4e00\u5f20heat map)</p> <p>\u591a\u4eba\uff1a</p> <ul> <li>Top-down(\u51c6\u786e)\uff1a\u628a\u591a\u4eba\u8f6c\u6210\u5355\u4eba\uff0c\u56fe\u50cf\u5206\u5272</li> <li>Bottom-up(\u5feb)\uff1a\u5148\u68c0\u6d4b\u51fa\u56fe\u4e2d\u6240\u6709\u4eba\u7684\u6240\u6709\u5173\u952e\u70b9\uff0c\u518d\u5bf9\u5173\u952e\u70b9\u8fdb\u884c\u5206\u7ec4\uff0c\u8fdb\u800c\u7ec4\u88c5\u6210\u591a\u4e2a\u4eba</li> </ul> <p>\u4eba\u4f53\u59ff\u6001\u4f30\u8ba1(Human Pose Estimation)\u7ecf\u5178\u65b9\u6cd5\u6574\u7406</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#5-optical-flow\u5149\u6d41","title":"5 Optical flow(\u5149\u6d41)","text":"<p>\u53c2\u8003\uff1a\u8ba1\u7b97\u673a\u89c6\u89c9--\u5149\u6d41\u6cd5(optical flow)\u7b80\u4ecb</p> <p>\u5149\u6d41(optical flow)\u662f\u7a7a\u95f4\u8fd0\u52a8\u7269\u4f53\u5728\u89c2\u5bdf\u6210\u50cf\u5e73\u9762\u4e0a\u7684\u50cf\u7d20\u8fd0\u52a8\u7684\u77ac\u65f6\u901f\u5ea6\u3002\u5728\u65f6\u95f4\u95f4\u9694\u5f88\u5c0f\uff08\u6bd4\u5982\u89c6\u9891\u7684\u8fde\u7eed\u524d\u540e\u4e24\u5e27\u4e4b\u95f4\uff09\u65f6\uff0c\u4e5f\u7b49\u540c\u4e8e\u76ee\u6807\u70b9\u7684\u4f4d\u79fb\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#\u5149\u6d41\u573a","title":"\u5149\u6d41\u573a\uff1a","text":"<p>\u200b   \u5149\u6d41\u573a\u662f\u4e00\u4e2a\u4e8c\u7ef4\u77e2\u91cf\u573a\uff0c\u5b83\u53cd\u6620\u4e86\u56fe\u50cf\u4e0a\u6bcf\u4e00\u70b9\u7070\u5ea6\u7684\u53d8\u5316\u8d8b\u52bf\uff0c\u53ef\u770b\u6210\u662f\u5e26\u6709\u7070\u5ea6\u7684\u50cf\u7d20\u70b9\u5728\u56fe\u50cf\u5e73\u9762\u4e0a\u8fd0\u52a8\u800c\u4ea7\u751f\u7684\u77ac\u65f6\u901f\u5ea6\u573a\u3002\u5b83\u5305\u542b\u7684\u4fe1\u606f\u5373\u662f\u5404\u50cf\u70b9\u7684\u77ac\u65f6\u8fd0\u52a8\u901f\u5ea6\u77e2\u91cf\u4fe1\u606f\u3002</p> <p>\u200b   \u7814\u7a76\u5149\u6d41\u573a\u7684\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u4ece\u5e8f\u5217\u56fe\u50cf\u4e2d\u8fd1\u4f3c\u8ba1\u7b97\u4e0d\u80fd\u76f4\u63a5\u5f97\u5230\u7684\u8fd0\u52a8\u573a\u3002\u5149\u6d41\u573a\u5728\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5149\u6d41\u573a\u5bf9\u5e94\u4e8e\u8fd0\u52a8\u573a\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#flownet","title":"FlowNet","text":"<p>\u4e24\u90e8\u5206\uff1a\u7f29\u5c0f\u548c\u653e\u5927</p> <ul> <li>\u7f29\u5c0f(\u5377\u79ef)\u90e8\u5206</li> <li>\u7b2c\u4e00\u79cd\u7f29\u5c0f(\u5377\u79ef)\u65b9\u6848\u662f\u6700\u6734\u7d20\u7684\u65b9\u6cd5\u7684\uff0c\u5c31\u662f\u5c06\u8fd9\u4e00\u5bf9\u56fe\u7247\u7684\u901a\u9053concat\u8d77\u6765</li> <li>\u7b2c\u4e8c\u4e2d\u65b9\u6848\u662f\u8fd9\u4e00\u5bf9\u56fe\u7247\u5206\u5f00\u5904\u7406\uff0c\u5206\u522b\u8fdb\u5165\u5377\u79ef\u7f51\u8def\uff0c\u5f97\u5230\u5404\u81ea\u7684\u7279\u5f81\u56fe\uff0c\u7136\u540e\u518d\u627e\u5230\u5b83\u4eec\u7279\u5f81\u56fe\u4e4b\u95f4\u7684\u8054\u7cfb\u3002</li> </ul> <p></p> <ul> <li>\u653e\u5927\u90e8\u5206</li> </ul> <p>\u4e00\u8fb9\u5411\u540eunconv\uff0c\u4e00\u8fb9\u76f4\u63a5\u5728\u5c0f\u7684\u7279\u5f81\u56fe\u4e0a\u9884\u6d4b\uff0c\u7136\u540e\u628a\u7ed3\u679c\u53cc\u7ebf\u6027\u63d2\u503c\u7136\u540econcat\u5728unconv\u540e\u7684\u7279\u5f81\u56fe\u4e0a\uff0c\u7136\u540e\u63a5\u7740\u5f80\u540e\u4f20\uff0c\u91cd\u590d\u56db\u6b21\u540e\uff0c\u5f97\u5230\u7684\u9884\u6d4b\u5149\u6d41\u5206\u8fa8\u7387\u4f9d\u7136\u662f\u8f93\u5165\u7684\u00bc\uff0c\u518d\u91cd\u590d\u4e4b\u524d\u7684\u64cd\u4f5c\u5df2\u6ca1\u6709\u592a\u591a\u63d0\u5347\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u53cc\u7ebf\u6027\u63d2\u503c\u5f97\u5230\u548c\u8f93\u5165\u76f8\u540c\u5206\u8fa8\u7387\u7684\u5149\u6d41\u9884\u6d4b\u56fe\u3002</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#6-other-tasks","title":"6 Other tasks","text":"<p>Video classification: Use 3D CNN</p> <p>Temporal action localization: Generate proposals then classify</p> <p>Multi-object tracking</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#lec-11-3d-deep-learning","title":"Lec 11  3D Deep Learning","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#1-feature-matching","title":"1 Feature matching","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#super-polint-\u7528\u4e8e\u63d0\u53d6\u7279\u5f81\u70b9","title":"Super Polint: \u7528\u4e8e\u63d0\u53d6\u7279\u5f81\u70b9","text":"<ul> <li>CNN-based detectors: Representing feature point locations by heatmaps</li> </ul> <ul> <li>CNN-based descriptors: Extract descriptors from CNN feature maps(\u6bcf\u4e00\u5f20\u56fe\u90fd\u662f\u4e00\u5c42\u795e\u7ecf\u7f51\u7edc\u4e0b\u7684\u7279\u5f81\u56fe\uff0c\u53d6\u6240\u6709\u56fe\u4e2d\u5bf9\u5e94\u7684\u70b9\u505a\u4e00\u4e2a\u5411\u91cf)</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#superglue-\u73b0\u5728\u6700\u597d\u7684\u68c0\u6d4b\u65b9\u6cd5","title":"SuperGlue: \u73b0\u5728\u6700\u597d\u7684\u68c0\u6d4b\u65b9\u6cd5","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#2-object-pose-estimation","title":"2 Object Pose Estimation","text":"<p>Estimate the 3D location and orientation (\u4f4d\u7f6e\u548c\u65b9\u5411) of an object  realtive to the camera frame.</p> <p>Before that, we need to define the geometry center of the object.</p> <p></p> <ol> <li>Find 3D-2D correspondences</li> <li>Solve R and t by perspective-n-point (PnP) algorithm</li> <li>Find 2D-3D correspondences: detecting keyponts using CNNs</li> </ol>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#3-human-pose-estimation","title":"3 Human Pose Estimation","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#markerless-mocap-\u76f8\u673a\u7167\u5c04\u5173\u952e\u70b9\u6807\u8bb0\u7269\u5728\u4eba\u8eab\u4f53\u4e0amarkless\u5c31\u662f\u4e0d\u7528\u8d34\u6807\u8bb0\u7269","title":"Markerless MoCap: \u76f8\u673a\u7167\u5c04\u5173\u952e\u70b9\uff0c\u6807\u8bb0\u7269\u5728\u4eba\u8eab\u4f53\u4e0a\uff0cMarkless\u5c31\u662f\u4e0d\u7528\u8d34\u6807\u8bb0\u7269","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#monocular-3d-human-pose-estimation-\u53c2\u6570\u5316\u4eba\u4f53\u6a21\u578b","title":"Monocular 3D Human Pose Estimation: \u53c2\u6570\u5316\u4eba\u4f53\u6a21\u578b","text":"<p>Estimating 3D human pose using a single camera</p> <p>Using networks to regress joint locations</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#4-depth-estimation","title":"4 Depth Estimation","text":"<p>Multiview Depth Estimation: Reconstruct the dense 3D shape from a set of images and camera parameters</p> <p></p> <p>Learned multi-view stereo</p> <p>Cost volume is a 3D array that stores the errors of all pixels at all depths</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#5-single-image-to-3d","title":"5 Single Image to 3D","text":"<p>\u2022 Depth \u2022 Point Cloud \u2022 Mesh \u2022 Volume</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#monoculer-depth-estimation","title":"Monoculer depth estimation","text":"<p>Learning to guess depth from large-scale training data</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#single-view-shape-estimation","title":"Single-view shape estimation","text":"<p>\u9664\u4e86\u70b9\u4e91\uff0cmesh\u7b49\u65b9\u6cd5\u4e5f\u53ef\u5e94\u7528\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#6-pointnet","title":"6 PointNet","text":"<p>\u628a\u70b9\u4e91\u653e\u8fdb\u795e\u7ecf\u7f51\u7edc\uff0c\u4ee5\u524d\u7684\u795e\u7ecf\u7f51\u7edc\u90fd\u662f\u5149\u6805\u5316\u7684</p> <p>\u6311\u62181\uff1a\u70b9\u987a\u5e8f\u4e0d\u786e\u5b9a\u2014\u2014\u6700\u540e\u518d\u505apooling</p> <p>\u6311\u62182\uff1a\u4f4d\u7f6e\u53d8\u5316\u4e0d\u786e\u5b9a\u2014\u2014\u4f30\u8ba1\u59ff\u6001</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#lec-12-computational-photography-i","title":"Lec 12 Computational Photography I","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#1-high-dynamic-range-imaging-hdr","title":"1 High Dynamic Range Imaging (HDR)","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#exposure\u66dd\u5149","title":"Exposure:\u66dd\u5149","text":"<p>Exposure = Gain(\u589e\u76ca) x Irradiance(\u5149\u7ebf) x Time(\u65f6\u95f4)</p> <ul> <li>Gain is controlled by the ISO </li> <li>Irradiance is controlled by the aperture </li> <li>Time is controlled by the shutter speed</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#dynamic-range","title":"Dynamic Range","text":"<p>The ratio between the largest and smallest values of a certain quantity.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#hdr","title":"HDR","text":"<p>\u4eae\u7684\u5730\u65b9\u548c\u6697\u7684\u5730\u65b9\u80fd\u540c\u65f6\u62cd\u6e05\u695a</p> <p>\u5b9e\u73b0\u65b9\u6cd5\uff1a</p> <ul> <li>Exposure bracketing: Capture multiple LDR images at different exposures(\u4e00\u6b21\u62cd\u5f88\u591a\u5f20)</li> <li>Merging: Combine them into a single HDR image(\u7136\u540e\u5408\u5728\u4e00\u8d77)</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#merge","title":"Merge","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#tone-mapping","title":"Tone mapping","text":"<p>Display the HDR image (12-bit) on a SDR (standard dynamic range, 8-bit) device.</p> <p>Gamma compression</p> <p>X \u2192 aX<sup>\u03b3</sup>, applied independently on R, G, B intend to keep more details on each parts.</p> <ul> <li> <p>\u03b3 &lt; 1:  keep more datails on dart parts</p> </li> <li> <p>\u03b3 &gt; 1: keep more datails on light parts</p> </li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#2-deblurring","title":"2 Deblurring","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#reason","title":"Reason","text":"<ul> <li>Defocus: the subject is not in the depth of view</li> <li>Motion blur: moving subjects or unstable camera</li> <li>\u2026\u2026</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#modeling-image-blur","title":"Modeling Image Blur","text":"<p>The blurring process can be described by convolution. H is called blur kernel.</p> <p></p> <p>Deblurring = Deconvolution</p> <ul> <li>NBID: Non-blind image deconvolution, the blur kernel is known.</li> <li>BID: Blind image deconvolution, the blur kernel is also unknown.</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#nbid","title":"NBID","text":"<ul> <li>G: The captured image (known) </li> <li>F: Image to be solved (unknown) </li> <li>H: Blur kernel (known)</li> </ul> <p>Inverse Filter: will also amplify noise</p> <p></p> <p>Wiener Filter: Suppress high frequency when reverse filtering</p> <p></p> <p>Deconvolution by optimization</p> <p></p> <p>Deconvolution is ill-posed, these are several sets of solutions have the same MSE.</p> <p>Objective function = likelihood function + regular term</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#bid","title":"BID","text":"<p>Blur kernel is non-negative and sparse.</p> <p>Optimized objective function:</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#3-colorization\u9ed1\u767d\u53d8\u5f69\u8272","title":"3 Colorization(\u9ed1\u767d\u53d8\u5f69\u8272)","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#sample-based-colorization","title":"Sample-based colorization","text":"<p>\u628a\u4e00\u5f20\u7167\u7247\u4e0a\u7684\u989c\u8272\u8fc1\u79fb\u5230\u53e6\u4e00\u5f20\u7167\u7247\uff0c\u4e3b\u8981\u4efb\u52a1\u662f\u50cf\u7d20\u5339\u914d</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#interactive-colorization","title":"Interactive colorization","text":"<p>\u7ed9\u51fa\u7ebf\u6761\u5927\u81f4\u7684\u989c\u8272(user-guided)</p> <p></p> <p></p> <p>Constraint: User-specified colors of brushed pixels keep unchanged</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#generative-adversarial-network-gan","title":"Generative Adversarial Network (GAN)","text":"<p>D can be viewed as a loss function to train G\uff1a</p> <ul> <li>Called adversarial loss </li> <li>Learned instead of being hand-designed </li> <li>Can be applied to any image synthesis tasks</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#4-super-resolution","title":"4 Super Resolution","text":"<p>Super Resolution using GAN</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#lec-13-computational-photography-ii","title":"Lec 13 Computational Photography II","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#1-image-based-rendering","title":"1 Image-based Rendering","text":"<p>Rendering: from 3D models to images</p> <p>Image-based: \u57fa\u4e8e\u7167\u7247\u8fdb\u884c\u6e32\u67d3</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#light-fields","title":"Light Fields","text":"<p>The plenoptic function (7D) depicts light rays passing through.</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#multi-plane-image-mpi","title":"Multi-Plane Image (MPI)","text":"<p>A set of front-parallel planes at a fixed range of depths.</p> <p>Each plane encodes an RGB color image and an alpha/transparency map \u03b1<sub>d</sub>.</p> <p></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#nerf","title":"NeRF","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#2-neural-rendering","title":"2 Neural Rendering","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E5%AF%BC%E8%AE%BA/#pose-transfer--garment-transfer","title":"Pose Transfer &amp; Garment Transfer","text":"<p>Input: Image(s) of a person</p> <p>Output: Synthesised images of the persion in different poses (Pose Transfer),  or with different clothing (Garment Transfer).</p> <p>Method:</p> <ul> <li>Use parametric mesh (SMPL) to represent body pose and shape </li> <li>Use high-dimensional UV texture map to encode appearance </li> <li>Transfer the pose and appearance</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/","title":"CS106L Midquarter Review","text":"<p>Midquarter review of Stanford CS106L.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#stream","title":"stream","text":"<p>stream: an abstraction for input/output. Streams  convert between data and the string representation of data.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#output-streams","title":"Output Streams","text":"<ul> <li>Have type <code>std::ostream</code></li> <li>Can only send data using the <code>&lt;&lt;</code> operator</li> <li>Converts any type into string and sends it to the stream</li> <li><code>std::cout</code> is the output stream that goes to the console</li> </ul> <pre><code>std::cout &lt;&lt; 5 &lt;&lt; std::endl; \n// converts int value 5 to string \u201c5\u201d\n// sends \u201c5\u201d to the console output stream\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#output-file-streams","title":"Output File Streams","text":"<ul> <li>Have type <code>std::ofstream</code></li> <li>Only receive data using the <code>&lt;&lt;</code> operator</li> <li>Converts data of any type into a string and sends it to the  file stream</li> <li>Must initialize your own <code>ofstream</code> object linked to your file</li> </ul> <pre><code>std::ofstream out(\u201cout.txt\u201d, std::ofstream::out);\n// out is now an ofstream that outputs to out.txt\nout &lt;&lt; 5 &lt;&lt; std::endl; // out.txt contains 5\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#input-streams","title":"Input Streams","text":"<ul> <li>Have type <code>std::istream</code></li> <li>Can only receive data using the <code>&gt;&gt;</code> operator</li> <li>Receives a string from the stream and converts it to data</li> <li><code>std::cin</code> is the output stream that gets input from the console</li> </ul> <pre><code>int x;\nstring str;\nstd::cin &gt;&gt; x &gt;&gt; str;\n//reads exactly one int then 1 string from console\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#nitty-gritty-details-stdcin","title":"Nitty Gritty Details: std::cin","text":"<ul> <li>First call to std::cin &gt;&gt; creates a command line prompt  that allows the user to type until they hit enter</li> <li>Each &gt;&gt; ONLY reads until the next whitespace</li> <li>Whitespace = tab, space, newline</li> <li>Everything after the first whitespace gets saved and used the  next time std::cin &gt;&gt; is called</li> <li>The place its saved is called a buffer!</li> <li>If there is nothing waiting in the buffer, std::cin &gt;&gt; creates a new command line prompt</li> <li>Whitespace is eaten: it won\u2019t show up in output</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#stringstreams","title":"Stringstreams","text":"<ul> <li>Input stream: std::istringstream</li> <li>Give any data type to the istringstream, it\u2019ll store it as a  string!</li> <li>Output stream: std::ostringstream</li> <li>Make an ostringstream out of a string, read from it  word/type by word/type!</li> <li>The same as the other i/ostreams you\u2019ve seen</li> </ul> <pre><code>//ostringstreams\nstring judgementCall(int age, string name, bool lovesCpp) {\n    std::ostringstream formatter;\n    formatter &lt;&lt; name &lt;&lt;\", age \" &lt;&lt; age;\n    if(lovesCpp) formatter &lt;&lt; \", rocks.\";\n    else formatter &lt;&lt; \" could be better\";\n    return formatter.str();\n}\n//istringstreams\nStudent reverseJudgementCall(string judgement) {\n    std::istringstream converter;\n    string fluff; int age; bool lovesCpp; string name;\n    converter &gt;&gt; name;\n    converter &gt;&gt; fluff;\n    converter &gt;&gt; age;\n    converter &gt;&gt; fluff;\n    string cool;\n    converter &gt;&gt; cool;\n    if(fluff == \"rocks\") return Student{name, age, \"bliss\"};\n    else return Student{name, age, \"misery\"};\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#references","title":"References","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#references-to-variables","title":"References to variables","text":"<pre><code>vector&lt;int&gt; original{1, 2};\nvector&lt;int&gt; copy = original;\nvector&lt;int&gt;&amp; ref = original;\noriginal.push_back(3);\ncopy.push_back(4);\nref.push_back(5);\ncout &lt;&lt; original &lt;&lt; endl; // {1, 2, 3, 5}\ncout &lt;&lt; copy &lt;&lt; endl; // {1, 2, 4}\ncout &lt;&lt; ref &lt;&lt; endl; // {1, 2, 3, 5}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#the-classic-reference-copy-bug","title":"The classic reference-copy bug:","text":"<pre><code>void shift(vector&lt;std::pair&lt;int, int&gt;&gt;&amp; nums) {\n    for (size_t i = 0; i &lt; nums.size(); ++i) {\n        auto [num1, num2] = nums[i];//This creates a copy of the course\n        num1++;\n        num2++;//This is updating that same copy!\n    }\n}\n\n//The classic reference-copy bug, fixed:\nvoid shift(vector&lt;std::pair&lt;int, int&gt;&gt;&amp; nums) {\n    for (auto&amp; [num1, num2]: nums) {\n        num1++;\n        num2++;\n    }\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#the-classic-reference-rvalue-error","title":"The classic reference-rvalue error","text":"<pre><code>void shift(vector&lt;std::pair&lt;int, int&gt;&gt;&amp; nums) {\n    for (auto&amp; [num1, num2]: nums) {\n        num1++;\n        num2++;\n    }\n}\nshift({{1, 1}}); \n// {{1, 1}} is an rvalue, it can\u2019t be referenced\n</code></pre> <ul> <li>l-values</li> <li>l-values can appear on the left or  right of an =</li> <li><code>x</code> is an l-value</li> <li>l-values have names</li> <li>l-values are not temporary</li> <li>r-values</li> <li>r-values can ONLY appear on the  right of an =</li> <li><code>3</code> is an r-value</li> <li>r-values don\u2019t have names</li> <li>r-values are temporary</li> </ul> <pre><code>//The classic reference-rvalue error, fixed\nvoid shift(vector&lt;pair&lt;int, int&gt;&gt;&amp; nums) {\n    for (auto&amp; [num1, num2]: nums) {\n        num1++;\n        num2++;\n    }\n}\nauto my_nums = {{1, 1}};\nshift(my_nums);\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#const-indicates-a-variable-cant-be-modified","title":"const indicates a variable can\u2019t be modified","text":"<pre><code>std::vector&lt;int&gt; vec{1, 2, 3};\nconst std::vector&lt;int&gt; c_vec{7, 8}; // a const variable\nstd::vector&lt;int&gt;&amp; ref = vec; // a regular reference\nconst std::vector&lt;int&gt;&amp; c_ref = vec; // a const reference\nvec.push_back(3); // OKAY\nc_vec.push_back(3); // BAD - const\nref.push_back(3); // OKAY\nc_ref.push_back(3); // BAD - const\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#const--subtleties","title":"const &amp; subtleties","text":"<pre><code>std::vector&lt;int&gt; vec{1, 2, 3};\nconst std::vector&lt;int&gt; c_vec{7, 8};\nstd::vector&lt;int&gt;&amp; ref = vec;\nconst std::vector&lt;int&gt;&amp; c_ref = vec;\nauto copy = c_ref; // a non-const copy\nconst auto copy = c_ref; // a const copy\nauto&amp; a_ref = ref; // a non-const reference\nconst auto&amp; c_aref = ref; // a const reference\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#containers-and-iterators","title":"Containers and Iterators","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#simple-sequence-containers","title":"Simple  Sequence Containers","text":"<pre><code>graph TB\nA[Sequence Containers]--&gt;B[Simple]\nA--&gt;C[Adaptors]\nB--&gt;d[vector]\nB--&gt;e[deque]\nB--&gt;f[list]\nB--&gt;q[tuple]\nC--&gt;p[stack]\nC--&gt;o[queue]\nC--&gt;m[priority_queue]</code></pre> <pre><code>graph TB\nA[Associative Containers]--&gt;B[Ordered]\nA--&gt;C[Unordered]\nB--&gt;set\nB--&gt;map\nC--&gt;unordered_set\nC--&gt;unordered_map</code></pre> What you want to do std::vector std::deque std::list Insert/remove in the front Slow Fast Fast Insert/remove in the back Super Fast Very Fast Fast Indexed Access Super Fast Fast Impossible Insert/remove in the middle Slow Fast Very Fast Memory usage Low High High Combining (splicing/joining) Slow Very Slow Fast Stability (iterators/concurrency) Bad Very Bad Good"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#container-adaptors","title":"Container Adaptors","text":"<p>What is a container adaptor? <code>std::stack and std::queue</code></p> <p>Container adaptors are wrappers in C++</p> <ul> <li>Container adaptors provide a different interface for sequence containers. </li> <li>You can choose what the underlying container is</li> <li>For instance, let\u2019s choose a deque as our underlying container, and let\u2019s implement a  queue</li> </ul> <pre><code>std::queue&lt;int&gt; stack_deque; // Container = std::deque\nstd::queue&lt;int, std::list&lt;int&gt;&gt; stack_list;// Container = std::list\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#associative-containers","title":"Associative Containers","text":"<pre><code>//set\nstd::set&lt;int&gt; s;//Create an empty set\ns.insert(k);//Add a value k to the set\ns.erase(k);//Remove value k from the set\nif (s.count(k))...//Check if a value k is in the set\nif (vec.empty())...//Check if vector is empty\n</code></pre> <pre><code>//map\nstd::map&lt;int, char&gt; m;//Create an empty map\nm.insert({k, v});\nm[k] = v;//Add key k with value v into the map\nm.erase(k);//Remove key k from the map\nif (m.count(k)) ...//Check if key k is in the map\nif (m.empty()) ...//Check if the map is empty\n//Retrieve or overwrite value associated with key k (error if key isn\u2019t in map)\nchar c = m.at(k);\nm.at(k) = v;\n//Retrieve or overwrite value associated with key k (auto-insert if key isn\u2019t in map)\nchar c = m[k];\nm[k] = v;\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#stl-iterators","title":"STL Iterators","text":"<ul> <li>Iterators are objects that point to elements inside containers.</li> <li>Each STL container has its own iterator, but all of these iterators exhibit a similar  behavior!</li> <li>Generally, STL iterators support the following operations:</li> </ul> <pre><code>std::set&lt;type&gt; s = {0, 1, 2, 3, 4};\nstd::set::iterator iter = s.begin(); // at 0\n++iter; // at 1\n*iter; // 1\n(iter != s.end()); // can compare \niterator equality\nauto second_iter = iter; // \"copy construction\"\n</code></pre> <p>Why ++iter and not iter++?</p> <p>Answer: ++iter returns the value after being incremented! iter++ returns the previous value and then increments it. (wastes  just a bit of time)</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#looping-over-collections","title":"Looping over collections","text":"<pre><code>//\u521d\u59cb\nstd::set&lt;int&gt; set{3, 1, 4, 1, 5, 9};\nfor (auto iter = set.begin(); iter != set.end(); ++iter) {\n    const auto&amp; elem = *iter;\n    cout &lt;&lt; elem &lt;&lt; endl;\n}\nstd::map&lt;int&gt; map{{1, 6}, {1, 8}, {0, 3}, {3, 9}};\nfor (auto iter = map.begin(); iter != map.end(); ++iter) {\n    const auto&amp; [key, value] = *iter; // structured binding!\n    cout &lt;&lt; key &lt;&lt; \":\" &lt;&lt; value &lt;&lt; \", \" &lt;&lt; endl;\n}\n//\u6539\u8fdb\nstd::set&lt;int&gt; set{3, 1, 4, 1, 5, 9};\nfor (const auto&amp; elem : set) {\n    cout &lt;&lt; elem &lt;&lt; endl;\n}\nstd::map&lt;int&gt; map{{1, 6}, {1, 8}, {0, 3}, {3, 9}};\nfor (const auto&amp; [key, value] : map) {\n    cout &lt;&lt; key &lt;&lt; \":\" &lt;&lt; value &lt;&lt; \", \" &lt;&lt; endl;\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#pointers","title":"Pointers","text":"<ul> <li>When variables are created, they're given  an address in memory.</li> <li>Pointers are objects that store an address  and type of a variable.</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#classes","title":"classes","text":"<p>A programmerdefined custom type. An  abstraction of an object or data type.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#sections","title":"Sections","text":"<ul> <li>Public section:</li> <li>Users of the Student object can  directly access anything here!</li> <li>Defines interface for interacting with  the private member variables</li> <li>Private section:</li> <li>Usually contains all member  variables</li> <li>Users can\u2019t access or modify  anything in the private section</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#constructors","title":"Constructors","text":"<ul> <li>Define how the member variables of an object is initialized</li> <li>What gets called when you first create a Student object</li> <li>Overloadable</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#destructors","title":"Destructors","text":"<ul> <li>Arrays are memory WE allocate, so we need to give instructions for when to  deallocate that memory!</li> <li>When we are done using our array, we need to <code>delete []</code> it!</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#template-classes","title":"Template classes","text":"<pre><code>//mypair.cpp\n#include \u201cmypair.h\u201d\ntemplate&lt;class First, typename Second&gt;\nFirst MyPair&lt;First, Second&gt;::getFirst(){\n    return first;\n}\ntemplate&lt;class Second, typename First&gt;\n    Second MyPair&lt;First, Second&gt;::getSecond(){\n    return second;\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#member-types","title":"Member Types","text":"<ul> <li>Sometimes, we need a name for a type that is dependent on  our template types</li> <li>iterator is a member type of vector</li> </ul> <pre><code>//vector.h\ntemplate&lt;typename T&gt; class vector {\n    using iterator = \u2026 // something internal\n    private:\n    iterator front;\n}\n//vector.cpp\ntemplate &lt;typename T&gt;\ntypename vector&lt;T&gt;::iterator vector&lt;T&gt;::insert(iterator pos, intvalue) {...}\n//iterator is a nested type in namespace vector&lt;T&gt;::\n</code></pre> <p>Aside: Type Aliases</p> <ul> <li>You can use using type_name = type in application  code as well!</li> <li>When using it in a class interface, it defines a nested type, like  vector::iterator</li> <li>When using it in application code, like main.cpp, it just creates another name for type within that scope (until the  next unmatched })</li> </ul> <p>Summary</p> <ul> <li>Used to make sure your clients have a standardized way to  access important types</li> <li>Lives in your namespace: <code>vector&lt;T&gt;::iterator</code></li> <li>After class specifier, you can use the alias directly (e.g. inside  function arguments, inside function body)</li> <li>Before class specifier, use typename.</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L-Midquarter-Review/#recap","title":"Recap","text":"<p>Template classes</p> <ul> <li>Add <code>template&lt;typename T1, typename T2 ...&gt;</code> before class definition in .h</li> <li>Add <code>template&lt;typename T1, typename T2 ...&gt;</code> before all  function signature in .cpp</li> <li>When returning nested types (like iterator types), put <code>template&lt;typename T1, typename T2 ...&gt;::member_type</code> as return type, not  just <code>member_type</code></li> <li>Templates don\u2019t emit code until instantiated, so <code>#include</code> the  .cpp file in the .h file, not the other way around</li> </ul> <p>Const and Const-correctness</p> <ul> <li>Use const parameters and variables wherever you can in application code</li> <li>Every member function of a class that doesn\u2019t change its member variables should be marked <code>const</code></li> <li>auto will drop all const and &amp;, so be sure to specify</li> <li>Make iterators and const_iterators for all your classes!</li> <li>const iterator = cannot increment the iterator, can dereference and change underlying value</li> <li>const_iterator = can increment the iterator, cannot dereference and change underlying value</li> <li>const const_iterator = cannot increment iterator, cannot dereference and change underlying value</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/","title":"CS106L\u8bfe\u7a0b\u7b14\u8bb0","text":"<p>Stanford CS106L: Standard C++ Programming\u8bfe\u7a0b\u7b14\u8bb0\u3002</p> <p>\u5f15\u8a00\uff1aCS106B/X \u548c CS106L \u662f\u914d\u5957\u8bfe\u7a0b\uff0c\u5b66\u4e60\u5b8c\u524d\u4e00\u4e2a\u518d\u5b66\u4e60 CS106L \u624d\u662f\u6b63\u786e\u7684\u8def\u5f84\u3002\u4f46\u662f\u6d59\u6c5f\u5927\u5b66\u7684\u300a\u6570\u636e\u7ed3\u6784\u57fa\u7840\u300b\u8bfe\u7a0b\u5df2\u7ecf\u5305\u62ec\u4e86 CS106B \u4e2d\u9664 C++ Class \u548c Huffman Coding \u4e4b\u5916\u7684\u5176\u4ed6\u5185\u5bb9\uff0c\u6240\u4ee5\u5bf9\u4e8e CS106B \u7684\u5185\u5bb9\u4ec5\u505a\u7b80\u5355\u8865\u5145\u3002</p> <p>\u6b64\u7b14\u8bb0\u57fa\u4e8e CS 106L, Fall '21</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lec1-welcome-to-cs-106l","title":"Lec1 Welcome to CS 106L!","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#why-c-is-important","title":"Why C++ is important","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#what-is-c","title":"What is C++","text":"<pre><code>#include &lt;iostream&gt;\nint main() {\n    std::cout &lt;&lt; \"Hello World!\" &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <pre><code>#include \"stdio.h\"\n#include \"stdlib.h\"\nint main(int argc, char *argv) {\n     asm(\"sub $0x20,%rsp\\n\\t\" // assembly code!\n         \"movabs $0x77202c6f6c6c6548,%rax\\n\\t\"\n         \"mov %rax,(%rsp)\\n\\t\"\n         \"movl $0x646c726f, 0x8(%rsp)\\n\\t\"\n         \"movw $0x21, 0xc(%rsp)\\n\\t\"\n         \"movb $0x0,0xd(%rsp)\\n\\t\"\n         \"leaq (%rsp),%rax\\n\\t\"\n         \"mov %rax,%rdi\\n\\t\"\n         \"call __Z6myputsPc\\n\\t\"\n         \"add $0x20, %rsp\\n\\t\"\n     );\n     return EXIT_SUCCESS;\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lec2-types-and-structs","title":"Lec2 Types and Structs","text":"<p>Types make things better...and sometimes harder...but still better</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#types","title":"Types","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#fundamental-types","title":"Fundamental Types","text":"<pre><code>int val = 5; //32 bits\nchar ch = 'F'; //8 bits (usually)\nfloat decimalVal1 = 5.0; //32 bits (usually)\ndouble decimalVal2 = 5.0; //64 bits (usually)\nbool bVal = true; //1 bit\n#include &lt;string&gt;\nstd::string str = \"Frankie\";\n</code></pre> <p>\u200b   C++ is a statically typed language: everything  with a name (variables,  functions, etc) is given a  type before runtime</p> <p>\u200b   static typing helps us to  prevent errors before our  code runs</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#static-types--function","title":"Static Types + Function","text":"<pre><code>int add(int a, int b);\nint, int -&gt; int\nstring echo(string phrase);\nstring -&gt; string\nstring helloworld();\nvoid -&gt; string\ndouble divide(int a, int b);\nint, int -&gt; double\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#overloading","title":"Overloading","text":"<pre><code>int half(int x, int divisor = 2) { // (1)\nreturn x / divisor;\n}\ndouble half(double x) { // (2)\nreturn x / 2;\n}\nhalf(3)// uses version (1), returns 1\nhalf(3, 3)// uses version (1), returns 1\nhalf(3.0) // uses version (2), returns 1.5\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#intro-to-structs","title":"Intro to structs","text":"<p>struct: a group of named variables each with their own type. A way to bundle different types together</p> <pre><code>struct Student {\n    string name; // these are called fields\n    string state; // separate these by semicolons\n    int age;\n};\nStudent s;\ns.name = \"Frankie\"; \ns.state = \"MN\";\ns.age = 21; // use . to access fields\nvoid printStudentInfo(Student student) {\n    cout &lt;&lt; s.name &lt;&lt; \" from \" &lt;&lt; s.state;\n    cout &lt;&lt; \" (\" &lt;&lt; s.age \")\" &lt;&lt; endl;\n}\nStudent randomStudentFrom(std::string state) {\n    Student s;\n    s.name = \"Frankie\";//random = always Frankie\n    s.state = state;\n    s.age = std::randint(0, 100);\n    return s;\n}\n Student foundStudent = randomStudentFrom(\"MN\");\n cout &lt;&lt; foundStudent.name &lt;&lt; endl; // Frankie\n</code></pre> <p>std::pair: An STL  built-in struct with two fields of any type</p> <pre><code>std::pair&lt;int, string&gt; numSuffix = {1,\"st\"};\ncout &lt;&lt; numSuffix.first &lt;&lt; numSuffix.second; \n//prints 1st\nstruct Pair {\n    fill_in_type first; \n    fill_in_type second; \n};\n//pair in functions\nstd::pair&lt;bool, Student&gt; lookupStudent(string name) {\n    Student blank;\n    if (found(name)) return std::make_pair(false, blank);\n    Student result = getStudentWithName(name);\n    return std::make_pair(true, result);\n}\nstd::pair&lt;bool, Student&gt; output = lookupStudent(\u201cKeith\u201d);\n</code></pre> <p>auto: Keyword used in lieu  of type when declaring a  variable, tells the compiler  to deduce the type.</p> <pre><code>//It means that the type is  deduced by the compiler. \nauto a = 3;\nauto b = 4.3;\nauto c = \u2018X\u2019;\nauto d = \u201cHello\u201d;\nauto e = std::make_pair(3, \u201cHello\u201d);\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#sneak-peek-at-streams","title":"Sneak peek at streams","text":"<p>stream: an abstraction for input/output. Streams convert between data and the string representation of data.</p> <pre><code>std::cout &lt;&lt; 5 &lt;&lt; std::endl; // prints 5 \n// use a stream to print any primitive type!\nstd::cout &lt;&lt; \"Frankie\" &lt;&lt; std::endl; \n// Mix types!\nstd::cout &lt;&lt; \"Frankie is \" &lt;&lt; 21 &lt;&lt; std::endl;\n// structs?\nStudent s = {\"Frankie\", \"MN\", 21};\nstd::cout &lt;&lt; s.name &lt;&lt; s.age &lt;&lt; std::endl;\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#recap","title":"Recap","text":"<ul> <li>Everything with a name in your program has a type</li> <li>Strong type systems prevent errors before your code runs!</li> <li>Structs are a way to bundle a bunch of variables of many types </li> <li>std::pair is a type of struct that had been defined for you and is in the STL</li> <li>So you access it through the std:: namespace (std::pair) </li> <li>auto is a keyword that tells the compiler to deduce the type of a variable, it should be used when the type is obvious or very  cumbersome to write out</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lec3-initialization--references","title":"Lec3 Initialization &amp; References","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#initialization","title":"Initialization","text":"<p>Initialization: How we provide initial values to variables</p> <pre><code>// Recall: Two ways to initialize a struct\nStudent s;\ns.name = \"Frankie\"; \ns.state = \"MN\";\ns.age = 21; \n//is the same as ...\nStudent s = {\"Frankie\", \"MN\", 21};\n</code></pre> <pre><code>//Multiple ways to initialize a pair\nstd::pair&lt;int, string&gt; numSuffix1 = {1,\"st\"};\nstd::pair&lt;int, string&gt; numSuffix2;\nnumSuffix2.first = 2;\nnumSuffix2.second = \"nd\";\nstd::pair&lt;int, string&gt; numSuffix2 = std::make_pair(3, \"rd\");\n</code></pre> <pre><code>//Initialization of vectors\nstd::vector&lt;int&gt; vec1(3,5); \n// makes {5, 5, 5}, not {3, 5}!\nstd::vector&lt;int&gt; vec2;\nvec2 = {3,5};\n// initialize vec2 to {3, 5} after its declared\n</code></pre> <p>Uniform initialization: curly bracket initialization.  Available for all types,  immediate initialization on declaration(\u7edf\u4e00\u521d\u59cb\u5316\uff1a\u58f0\u660e\u65f6\u7528\u82b1\u62ec\u53f7\u5b9a\u4e49)</p> <pre><code>std::vector&lt;int&gt; vec{1,3,5};\nstd::pair&lt;int, string&gt; numSuffix1{1,\"st\"};\nStudent s{\"Frankie\", \"MN\", 21};\n// less common/nice for primitive types, but possible!\nint x{5};\nstring f{\"Frankie\"};\n//Careful with Vector initialization!\nstd::vector&lt;int&gt; vec1(3,5); \n// makes {5, 5, 5}, not {3, 5}!\n//uses a std::initializer_list (more later)\nstd::vector&lt;int&gt; vec2{3,5};\n// makes {3, 5}\n\n//TLDR: use uniform  initialization to initialize every  field of your non-primitive  typed variables - but be  careful not to use vec(n, k)!\n</code></pre> <p>auto:  use it to reduce long type names</p> <pre><code>std::pair&lt;bool, std::pair&lt;double, double&gt;&gt; result = quadratic(a, b, c);\n//It can be write as below\nauto result = quadratic(a, b, c);\n</code></pre> <p>Don\u2019t overuse auto!</p> <pre><code>//A better way to use quadratic\nint main() {\n     auto a, b, c;\n     std::cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n     auto [found, solutions] = quadratic(a, b, c);\n     if (found) {\n         auto [x1, x2] = solutions;\n         std::cout &lt;&lt; x1 &lt;&lt; \u201c \u201d &lt;&lt; x2 &lt;&lt; endl;\n     } else {\n         std::cout &lt;&lt; \u201cNo solutions found!\u201d &lt;&lt; endl;\n     }\n}\n//This is better is because it\u2019s semantically clearer: variables have clear names\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#references","title":"References","text":"<p>Reference: An alias  (another name) for a named variable</p> <p>References in 106B</p> <pre><code>void changeX(int&amp; x){ //changes to x will persist\n    x = 0;\n}\nvoid keepX(int x){\n    x = 0;\n}\nint a = 100;\nint b = 100;\nchangeX(a); //a becomes a reference to x\nkeepX(b); //b becomes a copy of x\ncout &lt;&lt; a &lt;&lt; endl; //0\ncout &lt;&lt; b &lt;&lt; endl; //100\n</code></pre> <p>References in 106L: References to variables</p> <pre><code>vector&lt;int&gt; original{1, 2};\nvector&lt;int&gt; copy = original;\nvector&lt;int&gt;&amp; ref = original;\noriginal.push_back(3);\ncopy.push_back(4);\nref.push_back(5);\ncout &lt;&lt; original &lt;&lt; endl; // {1, 2, 3, 5}\ncout &lt;&lt; copy &lt;&lt; endl; // {1, 2, 4}\ncout &lt;&lt; ref &lt;&lt; endl; // {1, 2, 3, 5}\n//\u201c=\u201d automatically makes a copy! Must use &amp; to avoid this.\n</code></pre> <p>Reference-copy bug</p> <pre><code>//bug\nvoid shift(vector&lt;std::pair&lt;int, int&gt;&gt;&amp; nums) {\n    for (auto [num1, num2]: nums) {\n        num1++;\n        num2++;\n    }\n}\n//fixed\nvoid shift(vector&lt;std::pair&lt;int, int&gt;&gt;&amp; nums) {\n    for (auto&amp; [num1, num2]: nums) {\n        num1++;\n        num2++;\n    }\n}\n</code></pre> <ul> <li>l-values</li> <li>l-values can appear on the left or  right of an =</li> <li><code>x</code> is an l-value</li> <li>l-values have names</li> <li>l-values are not temporary</li> <li>r-values</li> <li>r-values can ONLY appear on the  right of an =</li> <li><code>3</code> is an r-value</li> <li>r-values don\u2019t have names</li> <li>r-values are temporary</li> </ul> <p>The classic reference-rvalue error</p> <pre><code>//\u53ef\u4ee5\u53d6\u5730\u5740\u7684\uff0c\u6709\u540d\u5b57\u7684\uff0c\u975e\u4e34\u65f6\u7684\u5c31\u662f\u5de6\u503c\uff1b\u4e0d\u80fd\u53d6\u5730\u5740\u7684\uff0c\u6ca1\u6709\u540d\u5b57\u7684\uff0c\u4e34\u65f6\u7684\u5c31\u662f\u53f3\u503c\uff1b\nvoid shift(vector&lt;std::pair&lt;int, int&gt;&gt;&amp; nums) {\n    for (auto&amp; [num1, num2]: nums) {\n        num1++;\n        num2++;\n    }\n}\nshift({{1, 1}}); \n// {{1, 1}} is an rvalue, it can\u2019t be referenced\n\n//fixed\nvoid shift(vector&lt;pair&lt;int, int&gt;&gt;&amp; nums) {\nfor (auto&amp; [num1, num2]: nums) {\n        num1++;\n        num2++;\n    }\n}\nauto my_nums = {{1, 1}};\nshift(my_nums);\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#bonus-const-and-const-references","title":"BONUS: Const and Const References","text":"<p>const indicates a variable can\u2019t be modified!</p> <pre><code>std::vector&lt;int&gt; vec{1, 2, 3};\nconst std::vector&lt;int&gt; c_vec{7, 8}; // a const variable\nstd::vector&lt;int&gt;&amp; ref = vec; // a regular reference\nconst std::vector&lt;int&gt;&amp; c_ref = vec; // a const reference, \u6ce8\u610f\u524d\u9762\u4e5f\u8981\u52a0\u4e0a const\n\nvec.push_back(3); // OKAY\nc_vec.push_back(3); // BAD - const\nref.push_back(3); // OKAY\nc_ref.push_back(3); // BAD - const\n</code></pre> <pre><code>const std::vector&lt;int&gt; c_vec{7, 8}; // a const variable\n// BAD - can't declare non-const ref to const vector\nstd::vector&lt;int&gt;&amp; bad_ref = c_vec;\n// fixed\nconst std::vector&lt;int&gt;&amp; bad_ref = c_vec;\n// BAD - Can't declare a non-const reference as equal to a const reference!\nstd::vector&lt;int&gt;&amp; ref = c_ref;\n</code></pre> <p>const &amp; subtleties</p> <pre><code>std::vector&lt;int&gt; vec{1, 2, 3};\nconst std::vector&lt;int&gt; c_vec{7, 8};\nstd::vector&lt;int&gt;&amp; ref = vec;\nconst std::vector&lt;int&gt;&amp; c_ref = vec;\nauto copy = c_ref; // a non-const copy\nconst auto copy = c_ref; // a const copy\nauto&amp; a_ref = ref; // a non-const reference\nconst auto&amp; c_aref = ref; // a const reference\n</code></pre> <p>\u200b   Remember: C++, by default, makes copies when we  do variable assignment! We need to use &amp; if we  need references instead.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#recap_1","title":"Recap","text":"<ul> <li>Use input streams to get information</li> <li>Use structs to bundle information</li> <li>Use uniform initialization wherever possible</li> <li>Use references to have multiple aliases to the same thing</li> <li>Use const references to avoid making copies whenever possible</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lec4-streams","title":"Lec4 Streams","text":"<p>stream: an abstraction for input/output. Streams convert between data and the string representation of data.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#input-streams","title":"Input streams","text":"<p>std::cin is an input stream. It has type std::istream</p> <ul> <li>Have type std::istream</li> <li>Can only receive strings using the <code>&gt;&gt;</code> operator</li> <li>Receives a string from the stream and converts it to data </li> <li>std::cin is the input stream that gets input from the console</li> </ul> <pre><code>int x;\nstring str;\nstd::cin &gt;&gt; x &gt;&gt; str;\n//reads exactly one int then 1 string from console\n</code></pre> <ul> <li>First call to std::cin &gt;&gt; creates a command line prompt  that allows the user to type until they hit enter</li> <li>Each <code>&gt;&gt;</code> ONLY reads until the next whitespace</li> <li>Whitespace = tab, space, newline</li> <li>Everything after the first whitespace gets saved and used the  next time std::cin &gt;&gt; is called</li> <li>If there is nothing waiting in the buffer, std::cin &gt;&gt; creates a new command line prompt</li> <li>Whitespace is eaten: it won\u2019t show up in output</li> </ul> <pre><code>string str;\nint x;\nstd::cin &gt;&gt; str &gt;&gt; x;\n//what happens if input is \"blah blah\"?\nstd::cout &lt;&lt; str &lt;&lt; x;\n//once an error is detected, the input stream\u2019s\n//fail bit is set, and it will no longer accept \n//input\n</code></pre> <p>To read a whole line, use  std::getline(istream&amp; stream, string&amp; line);</p> <pre><code>std::string line;\nstd::getline(cin, line); //now line has changed!\n//say the user entered \u201cHello World 42!\u201d \nstd::cout &lt;&lt; line &lt;&lt; std::endl; \n//should print out\u201cHello World 42!\u201d\n</code></pre> <ul> <li><code>&gt;&gt;</code> reads up to the next whitespace character and does not go past that whitespace character.</li> <li><code>getline</code> reads up to the next delimiter (by default, \u2018\\n\u2019), and does go past that delimiter.</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#output-streams","title":"Output streams","text":"<p>std::cout is an output  stream. It has type std::ostream</p> <ul> <li>Can only send data using the &lt;&lt; operator</li> <li>Converts any type into string and sends it to the stream</li> <li>std::cout is the output stream that goes to the console</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#file-streams","title":"File streams","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#input-file-streams","title":"Input File Streams","text":"<ul> <li>Have type std::ifstream</li> <li>Only send data using the &gt;&gt; operator</li> <li>Receives strings from a file and converts it to data of any type</li> <li>Must initialize your own ifstream object linked to your file</li> </ul> <pre><code>std::ifstream in(\u201cout.txt\u201d);\n// in is now an ifstream that reads from out.txt\nstring str;\nin &gt;&gt; str; // first word in out.txt goes into str\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#output-file-streams","title":"Output File Streams","text":"<ul> <li>Have type std::ofstream</li> <li>Only send data using the &lt;&lt; operator</li> <li>Converts data of any type into a string and sends it to the file stream</li> <li>Must initialize your own ofstream object linked to your file</li> </ul> <pre><code>std::ofstream out(\u201cout.txt\u201d);\n// out is now an ofstream that outputs to out.txt\nout &lt;&lt; 5 &lt;&lt; std::endl; // out.txt contains 5\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#string-streams","title":"string streams","text":"<ul> <li>Input stream: std::istringstream</li> <li>Give any data type to the istringstream, it\u2019ll store it as a  string!</li> <li>Output stream: std::ostringstream</li> <li>Make an ostringstream out of a string, read from it  word/type by word/type</li> <li>The same as the other i/ostreams you\u2019ve seen!</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#ostringstreams","title":"ostringstreams","text":"<pre><code>string judgementCall(int age, string name, bool lovesCpp)\n{\n    std::ostringstream formatter;\n    formatter &lt;&lt; name &lt;&lt;\", age \" &lt;&lt; age;\n    if(lovesCpp) formatter &lt;&lt; \", rocks.\";\n    else formatter &lt;&lt; \" could be better\";\n    return formatter.str();\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#istringstreams","title":"istringstreams","text":"<pre><code>Student reverseJudgementCall(string judgement){ \n    //input: \u201cFrankie age 22, rocks\u201d\n    std::istringstream converter;\n    string fluff; int age; bool lovesCpp; string name;\n    converter &gt;&gt; name;\n    converter &gt;&gt; fluff;\n    converter &gt;&gt; age;\n    converter &gt;&gt; fluff;\n    string cool;\n    converter &gt;&gt; cool;\n    if(cool == \"rocks\") return Student{name, age, \"bliss\"};\n    else return Student{name, age, \"misery\"};\n}// returns: {\u201cFrankie\u201d, 22, \u201cbliss\u201d}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#recap_2","title":"Recap","text":"<ul> <li>Streams convert between data of any type and the string  representation of that data.</li> <li>Streams have an endpoint: console for cin/cout, files for i/o fstreams,  string variables for i/o streams where they read in a string from or  output a string to. </li> <li>To send data (in string form) to a stream, use stream_name &lt;&lt;  data.</li> <li>To extract data from a stream, use stream_name &gt;&gt; data, and the stream will try to convert a string to whatever type data is.</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lec5-containers","title":"Lec5 Containers","text":"<p>What's in the STL:</p> <ul> <li>Containers</li> <li>Iterators</li> <li>Functions</li> <li>Algorithms</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#types-of-containers","title":"Types of containers","text":"<p>All containers can hold almost all elements</p> <pre><code>graph TB\nA[Sequence Containers]--&gt;B[Simple]\nA--&gt;C[Adaptors]\nB--&gt;d[vector]\nB--&gt;e[deque]\nB--&gt;f[list]\nB--&gt;q[tuple]\nC--&gt;p[stack]\nC--&gt;o[queue]\nC--&gt;m[priority_queue]</code></pre> <pre><code>graph TB\nA[Associative Containers]--&gt;B[Ordered]\nA--&gt;C[Unordered]\nB--&gt;set\nB--&gt;map\nC--&gt;unordered_set\nC--&gt;unordered_map</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#sequence-containers","title":"Sequence Containers","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#vector","title":"vector","text":"<pre><code>#include&lt;vector&gt;\n//construct\nstd::vector&lt;int&gt; intArr;//Create a new, empty vector\nstd::vector&lt;int&gt; vec(n);//Create a vector with n copies of 0 \nstd::vector&lt;int&gt; vec(n, k);//Create a vector with n copies of a value k\nstd::vector&lt;string&gt; strArr;\nstd::vector&lt;myStruct&gt; structArr;\nstd::vector&lt;std::vector&lt;string&gt;&gt; vecArr;//\u4e8c\u7ef4\u6570\u7ec4\n\n//use\nint k = vec[i];//Get the element at index i (does not bounds check)\nvec.push_back(k);//Add a value k to the end of a vector\nfor (std::size_t i = 0; i &lt; vec.size(); ++i)//Loop through vector by index i\nvec[i] = k;//Replace the element at index i(does not bounds check)\nvec.clear();//Remove all elements of a vector\nvec.size();//Check size of vector \nvec.pop_back();//\u5220\u9664\u672b\u5c3e\nvec.capacity();//\u7ed9vector\u5206\u914d\u7684\u7a7a\u95f4\u5927\u5c0f\nvec.empty();//\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\nvec.at(2);//\u4f4d\u7f6e\u4e3a2\u5904\u5143\u7d20\u5f15\u7528\nvec.begin();//\u5934\u6307\u9488\nvec.end();//\u5c3e\u6307\u9488\n</code></pre> <p>\u83dc\u9e1f\u6559\u7a0b</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#array","title":"array","text":"<pre><code>#include&lt;array&gt;\n//construct\nstd::array&lt;int, 3&gt; arr = {1, 2, 3};\nstd::array&lt;std::array&lt;string, 3&gt;, 4&gt;;//4*3\u7684string\u6570\u7ec4\n//\u8bbf\u95ee\narr.at(2).at(1);//\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u8bbf\u95ee\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#deque","title":"deque","text":"<p>\u200b   <code>deque</code>\u652f\u6301<code>vector</code>\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u5e76\u4e14\u652f\u6301\u5feb\u901f<code>push_front()</code>\uff0c\u4f46\u662f\u5b9e\u8df5\u4e2d\u4e00\u822c\u4f7f\u7528<code>vector</code>\uff0c\u56e0\u4e3a\u5176\u4ed6\u64cd\u4f5c\u66f4\u5feb\u3002</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#list","title":"list","text":"<p>\u200b   A list provides fast insertion anywhere, but no random (indexed)  access.</p> What you want to do std::vector std::deque std::list Insert/remove in the front Slow Fast Fast Insert/remove in the back Super Fast Very Fast Fast Indexed Access Super Fast Fast Impossible Insert/remove in the middle Slow Fast Very Fast Memory usage Low High High Combining (splicing/joining) Slow Very Slow Fast Stability (iterators/concurrency) Bad Very Bad Good <p>wrapper: A wrapper on an object changes how external users can interact  with that object.</p> <p>Container adaptors are wrappers in C++!</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#queue","title":"queue","text":"<pre><code>queue.push_back();\nqueue.pop_front();\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#stack","title":"stack","text":"<pre><code>stack.push_back();\nstack.pop_back();\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#priority_queue","title":"priority_queue","text":"<p>\u200b   Adding elements with a priority, always removing the highest priority-element.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#associative-containers","title":"Associative Containers","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#set","title":"set","text":"<p><code>set</code>\u5c31\u662f\u96c6\u5408\uff0c\u6bcf\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\uff0c\u6309\u952e\u503c\u5347\u5e8f\u6392\u5217\u3002\u8bbf\u95ee\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(logn).</p> <pre><code>std::set&lt;int&gt; s;//Create an empty set\ns.insert(k);//Add a value k to the set\ns.erase(k);//Remove value k from the set\nif (s.count(k))...//Check if a value k is in the set\nif (vec.empty())...//Check if vector is empty\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#map","title":"map","text":"<p><code>map</code>\u662fc++\u6807\u51c6\u5e93\u4e2d\u5b9a\u4e49\u7684\u5173\u8054\u5bb9\u5668\uff0c\u662f\u952e\uff08key\uff09\u503c\uff08value\uff09\u5bf9\u7684\u7ed3\u5408\u4f53\u3002</p> <pre><code>std::map&lt;int, char&gt; m;//Create an empty map\nm.insert({k, v});\nm[k] = v;//Add key k with value v into the map\nm.erase(k);//Remove key k from the map\nif (m.count(k)) ...//Check if key k is in the map\nif (m.empty()) ...//Check if the map is empty\n//Retrieve or overwrite value associated with key k (error if key isn\u2019t in map)\nchar c = m.at(k);\nm.at(k) = v;\n//Retrieve or overwrite value associated with key k (auto-insert if key isn\u2019t in map)\nchar c = m[k];\nm[k] = v;\n</code></pre> <p>Every <code>std::map&lt;k, v&gt;</code> is actually backed by:  <code>std::pair&lt;const k, v&gt;</code></p> <pre><code>//Iterating through maps and sets\nstd::set&lt;...&gt; s;\nstd::map&lt;..., ...&gt; m;\nfor (const auto&amp; element : s) {\n    // do stuff with element\n}\nfor (const auto&amp; [key, value] : m) {\n    // do stuff with key and value\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#unordered_map-and-unordered_set","title":"unordered_map and unordered_set","text":"<ul> <li>Each STL set/map comes with an unordered sibling. They\u2019re almost the same,  except:</li> <li>Instead of a comparison operator, the set/map type must have a hash function defined for it.<ul> <li>Simple types, like int, char, bool, double, and even std::string are already supported! </li> <li>Any containers/collections need you to provide a hash function to use them.</li> </ul> </li> <li>unordered_map/unordered_set are generally faster than map/set.</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#recap_3","title":"Recap","text":"<ul> <li>Sequence Containers</li> <li><code>std::vector</code> - use for almost everything</li> <li><code>std::deque</code> - use when you need fast insertion to front AND back</li> <li>Container Adaptors</li> <li><code>sta::stack</code> and <code>std::queue</code></li> <li>Associative Containers</li> <li><code>std::map</code> and <code>std::set</code></li> <li>if using simple data types/you\u2019re familiar with hash functions, use <code>std::unordered_map</code> and <code>std::unordered_set</code></li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lec6-iterators-and-pointers","title":"Lec6 Iterators and Pointers","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#iterators","title":"Iterators","text":"<p>A way to access all containers programmatically!</p> <ul> <li>Iterators are objects that point to elements inside containers.</li> <li>Each STL container has its own iterator, but all of these iterators exhibit a similar  behavior!</li> <li>Generally, STL iterators support the following operations:</li> </ul> <pre><code>std::set&lt;type&gt; s = {0, 1, 2, 3, 4};\nstd::set::iterator iter = s.begin(); // at 0\n++iter; // at 1\n*iter; // 1\n(iter != s.end()); // can compare iterator equality\nauto second_iter = iter; // \"copy construction\"\n</code></pre> <p>Types:</p> <ul> <li>Input Iterator\uff1a\u53ea\u80fd\u5355\u6b65\u5411\u524d\u8fed\u4ee3\u5143\u7d20\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539\u7531\u8be5\u7c7b\u8fed\u4ee3\u5668\u5f15\u7528\u7684\u5143\u7d20\u3002</li> <li>Output Iterator\uff1a\u8be5\u7c7b\u8fed\u4ee3\u5668\u548cInput Iterator\u6781\u5176\u76f8\u4f3c\uff0c\u4e5f\u53ea\u80fd\u5355\u6b65\u5411\u524d\u8fed\u4ee3\u5143\u7d20\uff0c\u4e0d\u540c\u7684\u662f\u8be5\u7c7b\u8fed\u4ee3\u5668\u5bf9\u5143\u7d20\u53ea\u6709\u5199\u7684\u6743\u529b\u3002</li> <li>Forward Iterator\uff1a\u8be5\u7c7b\u8fed\u4ee3\u5668\u53ef\u4ee5\u5728\u4e00\u4e2a\u6b63\u786e\u7684\u533a\u95f4\u4e2d\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\uff0c\u5b83\u62e5\u6709Input Iterator\u7684\u6240\u6709\u7279\u6027\uff0c\u548cOutput Iterator\u7684\u90e8\u5206\u7279\u6027\uff0c\u4ee5\u53ca\u5355\u6b65\u5411\u524d\u8fed\u4ee3\u5143\u7d20\u7684\u80fd\u529b\u3002</li> <li>Bidirectional Iterator\uff1a\u8be5\u7c7b\u8fed\u4ee3\u5668\u662f\u5728Forward Iterator\u7684\u57fa\u7840\u4e0a\u63d0\u4f9b\u4e86\u5355\u6b65\u5411\u540e\u8fed\u4ee3\u5143\u7d20\u7684\u80fd\u529b\u3002</li> <li>Random Access Iterator\uff1a\u8be5\u7c7b\u8fed\u4ee3\u5668\u80fd\u5b8c\u6210\u4e0a\u9762\u6240\u6709\u8fed\u4ee3\u5668\u7684\u5de5\u4f5c\uff0c\u5b83\u81ea\u5df1\u72ec\u6709\u7684\u7279\u6027\u5c31\u662f\u53ef\u4ee5\u50cf\u6307\u9488\u90a3\u6837\u8fdb\u884c\u7b97\u672f\u8ba1\u7b97\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u53ea\u6709\u5355\u6b65\u5411\u524d\u6216\u5411\u540e\u8fed\u4ee3\u3002</li> </ul> <p>Explain:</p> <ul> <li> <p>There are a few different types of iterators,  since containers are different!</p> </li> <li> <p>All iterators can be incremented (++) </p> </li> <li> <p>Input iterators can be on the RHS (right  hand side) of an = sign: <code>auto elem = *it;</code></p> </li> <li> <p>Output iterators can be on the LHS of = : <code>*elem = value;</code></p> </li> <li> <p>Random access iterators support indexing  by integers!</p> </li> </ul> <pre><code>it += 3; // move forward by 3\nit -= 70; // move backwards by 70\nauto elem = it[5]; // offset by 5\n</code></pre> <p>Why ++iter and not iter++?</p> <p>\u200b   Answer: ++iter returns the value after being incremented! iter++ returns the previous value and then increments it. (wastes just a bit of time)</p> <pre><code>std::map&lt;int, int&gt; map {{1, 2}, {3, 4}};\nauto iter = map.begin(); // what is *iter?\n++iter;\nauto iter2 = iter; // what is (*iter2).second?\n++iter2; // now what is (*iter).first?\n// ++iter: go to the next element\n// *iter: retrieve what's at iter's position\n// copy constructor: create another iterator pointing to the same thing\n</code></pre> <pre><code>std::set&lt;int&gt; set{3, 1, 4, 1, 5, 9};\nfor (auto iter = set.begin(); iter != set.end(); ++iter) {\n    const auto&amp; elem = *iter;\n    cout &lt;&lt; elem &lt;&lt; endl;\n}\nstd::map&lt;int&gt; map{{1, 6}, {1, 8}, {0, 3}, {3, 9}};\nfor (auto iter = map.begin(); iter != map.end(); ++iter) {\n    const auto&amp; [key, value] = *iter; // structured binding!\n    cout &lt;&lt; key &lt;&lt; \":\" &lt;&lt; value &lt;&lt; \", \" &lt;&lt; endl;\n}\n</code></pre> <pre><code>std::set&lt;int&gt; set{3, 1, 4, 1, 5, 9};\nfor (const auto&amp; elem : set) {\n    cout &lt;&lt; elem &lt;&lt; endl;\n}\nstd::map&lt;int&gt; map{{1, 6}, {1, 8}, {0, 3}, {3, 9}};\nfor (const auto&amp; [key, value] : map) {\n    cout &lt;&lt; key &lt;&lt; \":\" &lt;&lt; value &lt;&lt; \", \" &lt;&lt; endl;\n}\n</code></pre> <pre><code>auto key = (*iter).first;\nauto key = iter-&gt;first;\n//These are equivalent.\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#pointers","title":"Pointers","text":"<ul> <li>When variables are created, they're  given an address in memory.</li> <li>Pointers are objects that store an  address and type of a variable.</li> <li>To get the value of a pointer, we can dereference it (get the object referenced by  the pointer)</li> </ul> <pre><code>int x = 5;\nint* pointerToInt = &amp;x; // creates pointer to int\ncout &lt;&lt; *pointerToInt &lt;&lt; endl; // 5\nstd::pair&lt;int, int&gt; pair = {1, 2}; // creates pair\nstd::pair&lt;int, int&gt;* pointerToPair = &amp;pair; // creates pointer to pair\ncout &lt;&lt; (*pair).first &lt;&lt; endl; // 1\ncout &lt;&lt; pair-&gt;first &lt;&lt; endl; // 1\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#pointers-vs-iterators","title":"Pointers vs. Iterators","text":"<ul> <li>Iterators are a form of pointers!</li> <li>Pointers are more generic iterators</li> <li>can point to any object, not just elements in a container!</li> </ul> <pre><code>std::string lands = \"Xadia\";\n// iterator\nauto iter = lands.begin();\n// syntax for a pointer. don't worry about the specifics if you're in 106B! they'll be discussed in the latter half of the course.\nchar* firstChar = &amp;lands[0];\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lec7-classes","title":"Lec7 Classes","text":"<p>Containers are all classes defined  in the STL!</p> <p>Iterators are (basically) pointers! More on that later</p> <p>Class: A programmerdefined custom type. An  abstraction of an object or data type.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#but-dont-structs-do-that","title":"But don\u2019t structs do that?","text":"<pre><code>struct Student {\n    string name; // these are called fields\n    string state; // separate these by semicolons\n    int age;\n};\nStudent s = {\"Frankie\", \"MN\", 21};\n</code></pre> <p>Issues with structs</p> <ul> <li>Public access to all internal state data by default</li> <li>Users of struct need to explicitly initialize each data member.</li> </ul> <p>Classes provide their users with a public interface and separate this from a private implementation.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#turning-student-into-a-class-header-file--cpp-file","title":"Turning Student into a class: Header File + .cpp File:","text":"<pre><code>//student.h\nclass Student {\n    public:\n    std::string getName();\n    void setName(string name);\n    int getAge();\n    void setAge(int age);\n\n    private:\n    std::string name;\n    std::string state;\n    int age;\n};\n//student.cpp\n#include student.h\nstd::string\nStudent::getName(){\n    return name;\n}\nvoid Student::setName(){\n    this -&gt; name = name;\n}\nint Student::getAge(){\n    return age;\n}\nvoid Student::setAge(int age){\n    if(age &gt;= 0) {\n        this -&gt; age = age;\n    }\n    else error(\"Age cannot be negative!\");\n}\n</code></pre> <p>Function definitions with namespaces!</p> <ul> <li> <p>namespace_name::name in a function prototype means  \u201cthis is the implementation for an interface function in  namespace_name \u201d</p> </li> <li> <p>Inside the {...} the private member variables for  namespace_name will be in scope!</p> </li> </ul> <p><code>std::string Student::getName(){...}</code></p> <p>The this keyword!</p> <ul> <li>Here, we mean \u201cset the Student private member variable name equal to the parameter name \u201d</li> </ul> <pre><code>void Student::setName(){\n    name = name;\n}\n</code></pre> <ul> <li>this-&gt;element_name means \u201cthe item in this Student  object with name element_name\u201d. Use this for naming  conflicts!</li> </ul> <pre><code>void Student::setName(string name){\n    this-&gt;name = name; //better!\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#constructors-and-destructors","title":"Constructors and Destructors","text":"<p>constructors:</p> <ul> <li>Define how the member variables of an object is initialized</li> <li>What gets called when you first create a Student object</li> <li>Overloadable!</li> </ul> <p>destructors:</p> <ul> <li>deleteing (almost) always happens in the destructor of a class!</li> <li>The destructor is defined using Class_name::~Class_name()</li> <li>No one ever explicitly calls it! Its called when Class_name  object go out of scope!</li> <li>Just like all member functions, declare it in the .h and  implement in the .cpp!</li> </ul> <p>\u6784\u9020\u51fd\u6570\u5c31\u662f\u4e00\u4e2a\u4e0e\u7c7b\u540d\u76f8\u540c\u7684\u51fd\u6570\uff0c\u5728\u751f\u6210\u8fd9\u4e2a\u7c7b\u7684\u65f6\u5019\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u7528\u6765\u521d\u59cb\u5316\u8fd9\u4e2a\u7c7b\u3002</p> <p>\u4e0e\u6784\u9020\u51fd\u6570\u76f8\u5bf9\u7684\u662f\u6790\u6784\u51fd\u6570\uff0c\u5728\u5173\u95ed\u6587\u4ef6\u3001\u91ca\u653e\u5185\u5b58\u524d\u91ca\u653e\u8d44\u6e90\uff0c\u540d\u79f0\u662f\u7c7b\u540d\u524d\u52a0\u4e00\u4e2a<code>~</code></p> <pre><code>#include &lt;iostream&gt;\nclass Entity {\npublic:\n    float X, Y;\n    Entity() {\n        std::cout &lt;&lt; \"Entity is constructed!\" &lt;&lt; std::endl;\n    }\n    ~Entity() {\n        std::cout &lt;&lt; \"Entity is destructed!\" &lt;&lt; std::endl;\n    }\n};\nvoid Function() {\n    Entity e;\n}\nint  main() {\n    Function();\n    std::cin.get();\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#public-and-private-sections","title":"Public and Private Sections","text":"<p>Class: A programmerdefined custom type. An  abstraction of an object or data type.</p> <pre><code>//student.h\nclass Student {\n    public:\n    std::string getName();\n    void setName(string \n    name);\n    int getAge();\n    void setAge(int age);\n    private:\n    std::string name;\n    std::string state;\n    int age;\n};\n</code></pre> <p>Public section:</p> <ul> <li>Users of the Student object can  directly access anything here!</li> <li>Defines interface for interacting with the private member variables!</li> </ul> <p>Private section:</p> <ul> <li>Usually contains all member variables</li> <li>Users can\u2019t access or modify anything in the private section</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#one-last-thing-arrays","title":"One last thing\u2026 Arrays","text":"<pre><code>//int * is the type of an int array variable\nint *my_int_array;\n//my_int_array is a pointer!\n//this is how you initialize an array\nmy_int_array = new int[10];\n//this is how you index into an array\nint one_element = my_int_array[0];\n//Arrays are memory WE allocate, so we need to give instructions for when to deallocate that memory!\n//When we are done using our array, we need to delete [] it!\ndelete [] my_int_array;\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lec8-template-classes-and-const-correctness","title":"Lec8 Template Classes and Const  Correctness","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#template-classes","title":"Template Classes","text":"<p>Fundamental Theorem of Software Engineering: Any  problem can be solved by  adding enough layers of  indirection.</p> <p>The problem with IntVector</p> <ul> <li>Vectors should be able to contain any data type!</li> </ul> <p>Solution? Create StringVector, DoubleVector, BoolVector etc..</p> <ul> <li> <p>What if we want to make a vector of struct Students?</p> </li> <li> <p>How are we supposed to know about every custom class?</p> </li> <li> <p>What if we don\u2019t want to write a class for every type we can  think of?</p> </li> </ul> <p><code>SOLUTION: Template classes!</code></p> <p>Template Class: A class that is parametrized over some number of types. A class that is comprised of member variables of a general type/types.</p> <p>Template Classes You\u2019ve Used</p> <p>Vectors/Maps/Sets... Pretty much all containers!</p> <pre><code>template&lt;class T&gt;\nT add(const T&amp; left,const T&amp; right){\n    return left + right;\n}\n//\u9690\u5f0f\u5b9e\u4f8b\u5316\nint main(){\n    int a1=10;\n    double b1=10.0;\n    //add(a1,b1);\n    add(a1,(int)b1);//\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\n    return 0;\n}\n//\u663e\u5f0f\u5b9e\u4f8b\u5316\nint main(){\n    int a=10;\n    double b=10.0;\n    add&lt;int&gt;(a,b);\n    return 0;\n}\n</code></pre> <p>Writing a Template Class: Syntax</p> <pre><code>//mypair.h\ntemplate&lt;typename First, typename Second&gt; class MyPair {\n    public:\n        First getFirst();\n        Second getSecond();\n        void setFirst(First f);\n        void setSecond(Second f);\n    private:\n        First first;\n        Second second;\n};\n//mypair.cpp\n#include \u201cmypair.h\u201d\n//\u5982\u679c\u6ca1\u6709\u4e0b\u9762\u8fd9\u53e5\u8bdd\u4f1aCompile error! Must announce every member function is templated\ntemplate&lt;typename First, typename Second&gt;\nFirst MyPair::getFirst(){\n    return first;\n}\ntemplate&lt;typename Second, typename First&gt;\n    Second MyPair::getSecond(){\n    return second;\n}\n</code></pre> <p>Member Types</p> <ul> <li> <p>Sometimes, we need a name for a type that is dependent on  our template types</p> </li> <li> <p>iterator is a member type of vector</p> </li> </ul> <pre><code>std::vector a = {1, 2};\nstd::vector::iterator it = a.begin();\n</code></pre> <p>Summary:</p> <ul> <li>Used to make sure your clients have a standardized way to  access important types.</li> <li>Lives in your namespace: <code>vector&lt;T&gt;::iterator</code>.</li> <li>After class specifier, you can use the alias directly (e.g. inside  function arguments, inside function body).</li> <li>Before class specifier, use typename.</li> </ul> <pre><code>// main.cpp\n#include \u201cvector.h\u201d\nvector&lt;int&gt; a;\na.at(5);\n// vector.h\n#include \u201cvector.h\u201d//\u6ce8\u610f\u662f\u5728.h\u6587\u4ef6\u4e2d\u5f15\u5165verctor.h\uff0c\u800c\u4e0d\u662f\u5728verctor.cpp\u4e2d\u5f15\u5165!!!\ntemplate &lt;typename T&gt;\nclass vector&lt;T&gt; {\n     T at(int i);\n};\n// vector.cpp\ntemplate &lt;typename T&gt;\nvoid vector&lt;T&gt;::at(int i) {\n    // oops\n}\n</code></pre> <p>\u200b   Templates don\u2019t emit code until instantiated, so include the .cpp in the .h instead of the other way around!</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#const-correctness","title":"Const Correctness","text":"<p>const: keyword  indicating a variable,  function or parameter  can\u2019t be modified</p> <p>const indicates a variable can\u2019t be modified!</p> <pre><code>std::vector&lt;int&gt; vec{1, 2, 3};\nconst std::vector&lt;int&gt; c_vec{7, 8}; // a const variable\nstd::vector&lt;int&gt;&amp; ref = vec; // a regular reference\nconst std::vector&lt;int&gt;&amp; c_ref = vec; // a const reference\nvec.push_back(4); // OKAY\nc_vec.push_back(9); // BAD - const\nref.push_back(5); // OKAY\nc_ref.push_back(6); // BAD - const\n</code></pre> <p>Can\u2019t declare non-const reference to const variable!</p> <pre><code>const std::vector&lt;int&gt; c_vec{7, 8}; // a const variable\n// fixed\nconst std::vector&lt;int&gt;&amp; bad_ref = c_vec;\n// BAD - Can't declare a non-const reference as equal\n// to a const reference!\nstd::vector&lt;int&gt;&amp; ref = c_ref;\n</code></pre> <p>const &amp; subtleties with auto</p> <pre><code>std::vector&lt;int&gt; vec{1, 2, 3};\nconst std::vector&lt;int&gt; c_vec{7, 8};\nstd::vector&lt;int&gt;&amp; ref = vec;\nconst std::vector&lt;int&gt;&amp; c_ref = vec;\nauto copy = c_ref; // a non-const copy\nconst auto copy = c_ref; // a const copy\nauto&amp; a_ref = ref; // a non-const reference\nconst auto&amp; c_aref = ref; // a const reference\n</code></pre> <p>Why const?</p> <pre><code>// Find the typo in this code\nvoid f(const int x, const int y) {\n    if ((x==2 &amp;&amp; y==3)||(x==1))\n        cout &lt;&lt; 'a' &lt;&lt; endl;\n    if ((y==x-1)&amp;&amp;(x==-1||y=-1))//\u8f7b\u677e\u53d1\u73b0\u8fd9\u91cc\u7684y==-1\u5199\u9519\u4e86\n        cout &lt;&lt; 'b' &lt;&lt; endl;\n    if ((x==3)&amp;&amp;(y==2*x))\n        cout &lt;&lt; 'c' &lt;&lt; endl;\n}\n</code></pre> <pre><code>// Overly ambitious functions in application code\nlong int countPopulation(const Planet&amp; p) {\n    // Hats are the cornerstone of modern society\n    addLittleHat(p); //compile error\n    // Guaranteed no more population growth, all future calls will be faster\n    sterilize(p); //compile error\n    // Optimization: destroy planet\n    // This makes population counting very fast\n    deathStar(p); //compile error\n    return 0;\n}\n\n//How does the algorithm above work?\nlong int countPopulation(const Planet&amp; p) {\n    addLittleHat(p); //p is a const reference here\n\n    ...\n}\nvoid addLittleHat(Planet&amp; p) {//p is a (non const) reference here\n    p.add(something);\n} \n//So it will become compile error\n</code></pre> <p>Calling addLittleHat on p is  like setting a non const  variable equal to a const  one, it\u2019s not allowed!</p> <p>Const and Classes</p> <pre><code>//student.cpp\n#include student.h\nstd::string Student::getName(){\n    return name; //we can access name here!\n}\nvoid Student::setName(string name){\n    this-&gt;name = name; //resolved!\n}\nint Student::getAge(){\n    return age;\n}\nvoid Student::setAge(int age){\n//We can define what \u201cage\u201d means!\n    if(age &gt;= 0){\n        this -&gt; age = age;\n    }\n    else error(\"Age cannot be negative!\");\n}\n//student.h\nclass Student {\n    public:\n    std::string getName();\n    void setName(string \n    name);\n    int getAge();\n    void setAge(int age);\n\n    private:\n    std::string name;\n    std::string state;\n    int age;\n};\n</code></pre> <p>Using a const Student:</p> <pre><code>//main.cpp\nstd::string stringify(const Student&amp; s){\n    return s.getName() + \" is \" + std::to_string(s.getAge) + \n    \" years old.\" ;\n}\n//compile error!\n</code></pre> <ul> <li>The compiler doesn\u2019t know getName and getAge don\u2019t modify s!</li> <li>We need to promise that it doesn\u2019t by defining them as const functions</li> <li>Add const to the end of function signatures!</li> </ul> <p>So, we make Student const-correct:</p> <pre><code>//student.cpp\n#include student.h\nstd::string Student::getName() const{//there\n    return name; \n}\nvoid Student::setName(string name){\n    this-&gt;name = name; \n}\nint Student::getAge()const{//there\n    return age;\n}\nvoid Student::setAge(int age){\n    if(age &gt;= 0){\n        this -&gt; age = age;\n    }\n    else error(\"Age cannot be negative!\");\n}\n//student.h\nclass Student {\n    public:\n    std::string getName() const;//there\n    void setName(string name);\n    int getAge const();//there\n    void setAge(int age);\n    private:\n    std::string name;\n    std::string state;\n    int age;\n};\n</code></pre> <p>const-interface: All member  functions marked const in  a class definition. Objects of  type const ClassName may only use the  const-interface.</p> <p>Making RealVector\u2018s const-interface:</p> <pre><code>class StrVector {\npublic:\n    using iterator = std::string*;\n    const size_t kInitialSize = 2;\n    /*...*/\n    size_t size() const;\n    bool empty() const;\n    std::string&amp; at(size_t indx);\n    void insert(size_t pos, const std::string&amp; elem);\n    void push_back(const std::string&amp; elem);\n    iterator begin();\n    iterator end();\n    /*...*/\n}\n</code></pre> <p>Should begin() and end() be const?</p> <p>Answer: \u867d\u7136\u8fd9\u4e24\u4e2a\u51fd\u6570\u90fd\u662fconst\u7684\uff0c\u4f46\u662f\u5b83\u4eec\u7ed9\u6211\u4eec\u8fd4\u56de\u4e86\u4e00\u4e2a\u53ef\u4ee5\u53d8\u5316\u7684iterator\uff0c\u6240\u4ee5\u4f1a\u62a5\u9519\uff01</p> <p>Solution: cbegin() and cend()</p> <pre><code>class StrVector {\n    public:\n     using iterator = std::string*;\n     using const_ iterator = const std::string*;\n     /*...*/\n     size_t size() const;\n     bool empty() const;\n     /*...*/\n     void push_back(const std::string&amp; elem);\n    iterator begin();\n    iterator end();\n    const_iterator begin()const;\n    const_iterator end()const;\n    /*...*/\n}\n</code></pre> <pre><code>void printVec(const RealVector&amp; vec){\n    cout &lt;&lt; \"{ \";\n    for(auto it = vec.cbegin(); it != vec.cend(); ++it){\n        cout &lt;&lt; *it &lt;&lt; cout;\n    }\n    cout &lt;&lt; \" }\" &lt;&lt; cout;\n}\n//Fixed! And now we can\u2019t set *it equal to something: it will be a compile error!\n</code></pre> <p>const iterator vs const_iterator: Nitty Gritty</p> <pre><code>using iterator = std::string*;\nusing const_iterator = const std::string*;\nconst iterator it_c = vec.begin(); //string * const, const ptr to non-const obj\n*it_c = \"hi\"; //OK! it_c is a const pointer to non-const object\nit_c++; //not ok! cant change where a const pointer points! \nconst_iterator c_it = vec.cbegin(); //const string*, a non-const ptr to const obj\nc_it++; // totally ok! The pointer itself is non-const\n*c_it = \"hi\" // not ok! Can\u2019t change underlying const object\ncout &lt;&lt; *c_it &lt;&lt; endl; //allowed! Can always read a const object, just can't change\n//const string * const, const ptr to const obj\nconst const_iterator c_it_c = vec.cbegin(); \ncout &lt;&lt; c_it_c &lt;&lt; \" points to \" &lt;&lt; *c_it_c &lt;&lt; endl; //only reads are allowed!\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#recap_4","title":"Recap","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#template-classes_1","title":"Template classes","text":"<ul> <li>Add <code>template&lt;typename T1, typename T2 ...&gt;</code> before class definition in .h</li> <li>Add <code>template&lt;typename T1, typename T2 ...&gt;</code> before all  function signature in .cpp</li> <li>When returning nested types (like iterator types), put <code>template&lt;typename T1, typename T2 ...&gt;::member_type</code> as return type, not  just <code>member_type</code></li> <li>Templates don\u2019t emit code until instantiated, so <code>#include</code> the  .cpp file in the .h file, not the other way around</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#const-and-const-correctness","title":"Const and Const-correctness","text":"<ul> <li>Use const parameters and variables wherever you can in application code</li> <li>Every member function of a class that doesn\u2019t change its member variables should be marked <code>const</code></li> <li>auto will drop all const and &amp;, so be sure to specify</li> <li>Make iterators and const_iterators for all your classes!</li> <li>const iterator = cannot increment the iterator, can dereference and change underlying value</li> <li>const_iterator = can increment the iterator, cannot dereference and change underlying value</li> <li>const const_iterator = cannot increment iterator, cannot dereference and change underlying value</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lec9-template-functions","title":"Lec9 Template Functions","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#generic-programming","title":"Generic Programming","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#generic-c","title":"Generic C++","text":"<ul> <li>Allow data types to be parameterized (C++ entities that work on any  datatypes)</li> <li>Template classes achieve generic classes</li> <li>How can we write methods that work on any data type?</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#function-to-get-the-min-of-two-ints","title":"Function to get the min of two ints","text":"<pre><code>int myMin(int a, int b) {\nreturn a &lt; b ? a : b;\n}\nint main() {\nauto min_int = myMin(1, 2); // 1\nauto min_name = myMin(\"Sathya\", \"Frankie\"); // error!\n</code></pre> <p>One solution: overloaded functions</p> <pre><code>int myMin(int a, int b) {\n    return a &lt; b ? a : b;\n}\n// exactly the same except for types\nstd::string myMin(std::string a, std::string b) {\n    return a &lt; b ? a : b;\n}\nint main() {\n    auto min_int = myMin(1, 2); // 1\n    auto min_name = myMin(\"Sathya\", \"Frankie\"); // Frankie\n}\n</code></pre> <p>But what about comparing other data types, like doubles, characters, and  complex objects?</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#template-functions","title":"Template functions","text":"<p>Writing reusable, unique code with no duplication!</p> <pre><code>//generic, \"template\" functions\ntemplate &lt;typename Type&gt;\nType myMin(Type a, Type b) {\n    return a &lt; b ? a : b;\n}\n\n//Here, \"class\" is an alternative keyword to typename. \n//They're 100% equivalent in template function declarations!\ntemplate &lt;class Type&gt;\nType myMin(Type a, Type b) {\n    return a &lt; b ? a : b;\n}\n\n//Default value for class template parameter\ntemplate &lt;typename Type=int&gt;\nType myMin(Type a, Type b) {\n    return a &lt; b ? a : b;\n}\n\n// int main() {} will be omitted from future examples\n// we'll instead show the code that'd go inside it\ncout &lt;&lt; myMin&lt;int&gt;(3, 4) &lt;&lt; endl; // 3\n\n//let compiler deduce return type\ntemplate &lt;typename T, typename U&gt;\nauto smarterMyMin(T a, U b) {\n    return a &lt; b ? a : b;\n}\ncout &lt;&lt; myMin(3.2, 4) &lt;&lt; endl; // 3.2\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#template-type-deduction---case-1","title":"Template type deduction - case 1","text":"<p>If the template function parameters are regular, pass-by-value parameters: </p> <ol> <li>Ignore the \"&amp;\"</li> <li>After ignoring \"&amp;\", ignore const too</li> </ol> <pre><code>template &lt;typename Type&gt;\nType addFive(Type a) {\n    return a + 5; // only works for types that support \"+\"\n}\nint a = 5; \naddFive(a); // Type is int\nconst int b = a;\naddFive(b); // Type is still int\nconst int&amp; c = a;\naddFive(c); // even now, Type is still int\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#template-type-deduction---case-2","title":"Template type deduction - case 2","text":"<p>If the template function parameters are references or pointers, this is how types (e.g. Type)  are deduced:</p> <ol> <li>Ignore the \"&amp;\" </li> <li>Match the type of parameters to inputted arguments</li> <li>Add on const after</li> </ol> <pre><code>template &lt;typename Type&gt;\nvoid makeMin(const Type&amp; a, const Type&amp; b, Type&amp; minObj) {//a and b are references to const values\n    // set minObj to the min of a and b instead of returning.\n    minObj = a &lt; b ? a : b;\n}\nconst int a = 20; \nconst int&amp; b = 21; \nint c; \nmyMin(a, b, c); // Type is deduced to be int\ncout &lt;&lt; c &lt;&lt; endl; // 20\n</code></pre> <p>behind the scenes</p> <ul> <li> <p>Normal functions are created during compile time, and used in runtime</p> </li> <li> <p>Template functions are not compiled until used by the code</p> </li> </ul> <pre><code>template &lt;typename Type&gt;\nType myMin(Type a, Type b) {\n    return a &lt; b ? a : b;\n}\ncout &lt;&lt; myMin(3, 4) &lt;&lt; endl; // 3\n</code></pre> <ul> <li> <p>The compiler deduces the parameter types and generates a unique  function specifically for each time the template function is called</p> </li> <li> <p>After compilation, the compiled code looks as if you had written each  instantiated version of the function yourself</p> </li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#template-metaprogramming","title":"Template Metaprogramming","text":"<ul> <li>Normal code runs during run time.</li> <li>TMP -&gt; run code during compile time</li> <li>make compiled code packages smaller</li> <li>speed up code when it's actually running</li> </ul> <pre><code>template&lt;unsigned n&gt;\nstruct Factorial {\n    enum { value = n * Factorial&lt;n - 1&gt;::value };\n};\ntemplate&lt;&gt; // template class \"specialization\"\nstruct Factorial&lt;0&gt; {\n    enum { value = 1 };\n};\nstd::cout &lt;&lt; Factorial&lt;10&gt;::value &lt;&lt; endl; // prints 3628800, but run during compile time!\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#how-can-tmp-actually-be-used","title":"How can TMP actually be used?","text":"<ul> <li>TMP was actually discovered (not invented, discovered) recently!</li> <li>Where can TMP be applied</li> <li>Ensuring dimensional unit correctness</li> <li>Optimizing matrix operations</li> <li>Generating custom design pattern implementation<ul> <li>policy-based design (templates generating their own templates)</li> </ul> </li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#why-write-generic-functions","title":"Why write generic functions?","text":"<pre><code>Count the # of times 3 appears in a std::vector&lt;int&gt;. \nCount the # of times \"Y\" appears in a std::istream. \nCount the # of times 5 appears in the second half of a std::deque&lt;int&gt;. \nCount the # of times \"X\" appear in the second half of a std::string.\n//By using generic functions, we can solve each of these problems with a single function!\n</code></pre> <p>Counting Occurrences</p> <pre><code>//Attempt 1\n//count strings\nint count_occurrences(std::vector&lt;std::string&gt; vec, std::string target){\n    int count = 0;\n    for (size_t i = 0; i &lt; vec.size(); ++i){\n        if (vec[i] == target) count++;\n    }\n    return count;\n}\nUsage: count_occurrences({\"Xadia\", \"Drakewood\", \"Innean\"}, \"Xadia\"); \n</code></pre> <pre><code>//Attempt 2\n//generalize this beyond just strings\ntemplate &lt;typename DataType&gt;\nint count_occurrences(const std::vector&lt;DataType&gt; vec, DataType target){\n    int count = 0;\n    for (size_t i = 0; i &lt; vec.size(); ++i){\n        if (vec[i] == target) count++;\n    }\n    return count;\n}\nUsage: count_occurrences({\"Xadia\", \"Drakewood\", \"Innean\"}, \"Xadia\");\n</code></pre> <pre><code>//Attempt 3\n//generalize this beyond just vectors\ntemplate &lt;typename Collection, typename DataType&gt;\nint count_occurrences(const Collection&amp; arr, DataType target){\n    int count = 0;\n    for (size_t i = 0; i &lt; arr.size(); ++i){\n        if (arr[i] == target) count++;\n    }\n    return count;\n}\nUsage: count_occurrences({\"Xadia\", \"Drakewood\", \"Innean\"}, \"Xadia\"); \n//The collection may not be indexable!\n</code></pre> <pre><code>//Attempt 4\n//Solve the problem in Attempt 3\ntemplate &lt;typename InputIt, typename DataType&gt;\nint count_occurrences(InputIt begin, InputIt end, DataType target){\n    int count = 0;\n    for (initialization; end-condition; increment){\n        if (element access == target) count++;\n    }\n    return count;\n}\nvector&lt;std::string&gt; lands = {\"Xadia\", \"Drakewood\", \"Innean\"};\nUsage: count_occurrences(lands.begin(), lands.end(), \"Xadia\"); \n//We manually pass in begin and end so that we can customize our search bounds.\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lec10-functions-and-lambdas","title":"Lec10 Functions and Lambdas","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#review-of-template-functions","title":"Review of template functions","text":"<pre><code>template &lt;typename InputIt, typename DataType&gt;\nint count_occurrences(InputIt begin, InputIt end, DataType val) {\n int count = 0;\n for (auto iter = begin; iter != end; ++iter) {\n     if (*iter == val) count++;\n }\n return count;\n}\nUsage: std::string str = \"Xadia\";\n       count_occurrences(str.begin(), str.end(), 'a');\n</code></pre> <p>Could we reuse this to find how many vowels are in \u201dXadia\u201d, or how  many odd numbers were in a std::vector?</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#function-pointers-and-lambdas","title":"Function Pointers and Lambdas","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#predicate-functions","title":"Predicate Functions","text":"<p>Any function that returns a boolean is a predicate!</p> <pre><code>//Unary Predicate\nbool isLowercaseA(char c) {\n    return c == 'a';\n}\nbool isVowel(char c) {\n    std::string vowels = \"aeiou\";\n    return vowels.find(c) != std::string::npos;\n}\n//Binary Predicate\nbool isMoreThan(int num, int limit) {\n    return num &gt; limit;\n}\nbool isDivisibleBy(int a, int b) {\n    return (a % b == 0);\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#function-pointers-for-generalization","title":"Function Pointers for generalization","text":"<pre><code>template &lt;typename InputIt, typename UnaryPred&gt;//no typename DataType\nint count_occurrences(InputIt begin, InputIt end, UnaryPred pred) {//add UnaryPred pred\n    int count = 0;\n    for (auto iter = begin; iter != end; ++iter) {\n        if (pred(*iter)) count++;//no *iter == val\n    }\n    return count;\n}\nbool isVowel(char c) {\n    std::string vowels = \"aeiou\";\n    return vowels.find(c) != std::string::npos;\n}\nUsage: std::string str = \"Xadia\";\n       count_occurrences(str.begin(), str.end(), isVowel);\n</code></pre> <p>isVowel is a pointer, just like <code>Node *</code> or <code>char *</code>! It\u2019s called a \u201cfunction pointer\u201d,  and can be treated like a variable.</p> <p>Function pointers don\u2019t  generalize well. </p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lambdas","title":"Lambdas","text":"<pre><code>auto var = [capture-clause] (auto param) -&gt; bool {\n    ...\n};\n//Capture Clause: Outside variables your function uses\n//Parameters: You can use auto in lambda parameters!\n</code></pre> <p>capture clause</p> <pre><code>[] // captures nothing\n[limit] // captures lower by value\n[&amp;limit] // captures lower by reference\n[&amp;limit, upper] // captures lower by reference, higher by value\n[&amp;, limit] // captures everything except lower by reference\n[&amp;] // captures everything by reference\n[=] // captures everything by value\nauto printNum = [] (int n) { std::cout &lt;&lt; n &lt;&lt; std::endl; };\nprintNum(5); // 5\nint limit = 5;\nauto isMoreThan = [limit] (int n) { return n &gt; limit; };\nisMoreThan(6); // true\nlimit = 7;\nisMoreThan(6);\nint upper = 10;\nauto setUpper = [&amp;upper] () { upper = 6; };\n</code></pre> <p>Solution</p> <pre><code>template &lt;typename InputIt, typename UniPred&gt;\nint count_occurrences(InputIt begin, InputIt end, UniPred pred) {\n    int count = 0;\n    for (auto iter = begin; iter != end; ++iter) {\n        if (pred(*iter)) count++;\n    }\n    return count;\n}\nUsage:\nint limit = 5;\nauto isMoreThan = [limit] (int n) { return n &gt; limit; };\nstd::vector&lt;int&gt; nums = {3, 5, 6, 7, 9 ,13};\ncount_occurrences(nums.begin(), nums.end(), isMoreThan);\n</code></pre> <p>what really are they</p> <ul> <li>Lambdas are cheap, but copying them may not be.</li> <li>Use lambdas when you need a short function, or one with read/write  access to local variables</li> <li>Use function pointers for longer logic and for overloading</li> <li>We use \u201cauto\u201d because type is figured out in compile time</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#functors-and-closures","title":"Functors and Closures","text":"<pre><code>class functor {\npublic:\n    int operator() (int arg) const { // parameters and function body\n    return num + arg;\n    }\nprivate:\n    int num; // capture clause\n};\nint num = 0;\nauto lambda = [&amp;num] (int arg) { num += arg; };\nlambda(5);\n</code></pre> <ul> <li>A functor is any class that provides an implementation of operator().</li> <li>Lambdas are essentially syntactic sugar for creating a functor.</li> <li>If lambdas are functor classes, then \u201cclosures\u201d are instances of those classes.</li> <li>At runtime, closures are generated as instances of lambda classes.</li> </ul> <p>How do functors, lambdas, and function pointers relate?</p> <p>Answer:  standard function, std::function&lt;\u2026&gt;, is the one to rule them all \u2014 it\u2019s  the overarching type for anything callable in C++. Functors, lambdas, and  function pointers can all be casted to standard functions</p> <pre><code>void functionPointer (int arg) {\n    int num = 0;\n    num += arg;\n}\n// or\nint num = 0;\nauto lambda = [&amp;num] (int arg) { num += arg; };\nlambda(5); // num = 5;\nstd::function&lt;void(int)&gt; func = lambda;\n</code></pre> <p>We could cast either functionPointer or lambda to func, as both of them  have a void return signature and take in one integer parameter.</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#introducing-stl-algorithms","title":"Introducing STL Algorithms","text":"<p>A collection of completely generic functions written by C++ devs</p> <p><code>#include &lt;algorithm&gt;</code>:  </p> <p>sort \u00b7 reverse \u00b7 min_element \u00b7 max_element \u00b7  binary_search \u00b7 stable_partition \u00b7 find \u00b7 find_if \u00b7 count_if \u00b7 copy \u00b7 transform \u00b7 insert \u00b7 for_each \u00b7 etc.!</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lec11-operator-overloading","title":"Lec11 Operator Overloading","text":"<p>Redefining what operators mean</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#function-overloading","title":"Function Overloading","text":"<p>Allow for calling the same function with different parameters:</p> <pre><code>int sum(int a, int b) {\n    return a + b;\n}\ndouble sum(double a, double b) {\n    return a + b;\n}\n// usage:\ncout &lt;&lt; sum(1.5, 2.4) &lt;&lt; endl;\ncout &lt;&lt; sum(10, 20) &lt;&lt; endl;\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#operator-overloading","title":"Operator Overloading","text":"<p><code>\\+ - * / % ^ &amp; | ~ ! , = &lt; &gt; &lt;= &gt;=  ++ -- &lt;&lt; &gt;&gt; == != &amp;&amp; || += -= *=  /= %= ^= &amp;= |= &lt;&lt;= &gt;&gt;= [] () -&gt;  -&gt;* new new[] delete delete[]</code></p> <pre><code>if (before(a, b)) { // a, b defined earlier\n    cout &lt;&lt; \"Time a is before Time b\" &lt;&lt; endl;\n}\n//Overloading\nif (a &lt; b) {\n    cout &lt;&lt; \"Time a is before Time b\" &lt;&lt; endl;\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#two-ways-to-overload-operators","title":"Two ways to overload operators","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#member-functions","title":"Member Functions","text":"<p>Add a function called operator __ to your class:</p> <pre><code>class Time {\n    bool operator &lt; (const Time&amp; rhs) const;//rhs = Right Hand Side\n    bool operator + (const Time&amp; rhs) const;\n    bool operator ! () const; // unary, no arguments\n}\n//lhs (left hand side) of each operator is this.\n</code></pre> <ul> <li>Call the function on the left hand side of the expression (this) </li> <li>Binary operators (5 + 2, \"a\" &lt; \"b\"): accept the right hand side (&amp; rhs) as an argument(\u53c2\u6570). </li> <li>Unary operators (~a, !b): don't take any arguments</li> </ul> <pre><code>class Time {\nbool operator&lt; (const Time&amp; rhs) {\n    if (hours &lt; rhs.hours) return true;\n    if (rhs.hours &lt; hours) return false;\n    // compare minutes, seconds...\n    }\n}\nTime a, b;\nif (a.operator&lt;(b)) {\n// do something;\n}\n</code></pre> <ul> <li>Operators can only be called on the left hand side</li> <li>What if we can't control what's on the left hand side of the operation?</li> <li>e.g. if we want to compare a double and a Fraction</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#non-member-functions","title":"Non-Member Functions","text":"<p>Add a function called operator __ outside of your class:</p> <pre><code>bool operator &lt; (const Time&amp; lhs, const Time&amp; rhs);\nTime operator + (const Time&amp; lhs, const Time&amp; rhs);\nTime&amp; operator += (const Time&amp; lhs, const Time&amp; rhs);\nTime operator ! (const Time&amp; lhs, const Time&amp; rhs);\n</code></pre> <p>Instead of taking only rhs, it takes both the left hand side and right hand side!</p> <p>The STL prefers using non-member functions for operator overloading:  </p> <ol> <li>allows the LHS to be a non-class type (e.g. double &lt; Fraction)</li> <li>allows us to overload operations with a LHS class that we don't own</li> </ol> <p>You may be wondering how non-member functions can access private member variables:</p> <p>The answer: friends!</p> <pre><code>class Time {\n    // core member functions omitted for brevity\n    public:\n    friend bool operator == (const Time&amp; lhs, const Time&amp; rhs);\n    private:\n    int hours, minutes, seconds;\n}\nbool operator == (const Time&amp; lhs, const Time&amp; rhs) {\n    return lhs.hours == rhs.hours &amp;&amp; lhs.minutes == rhs.minutes &amp;&amp; lhs.seconds == rhs.seconds;\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#-operator-overloading","title":"&lt;&lt; Operator Overloading","text":"<p>We can use &lt;&lt; to output something to an std::ostream&amp;:</p> <pre><code>std::ostream&amp; operator &lt;&lt; (std::ostream&amp; out, const Time&amp; time) {\n    out &lt;&lt; time.hours &lt;&lt; \":\" &lt;&lt; time.minutes &lt;&lt; \":\" &lt;&lt; time.seconds;// 1) print data to ostream \n    return out; // 2) return original ostream \n}\n// in time.h -- friend declaration allows access to private attrs \npublic:\n    friend std::ostream&amp; operator &lt;&lt; (std::ostream&amp; out, const Time&amp; time);\n// now we can do this! \ncout &lt;&lt; t &lt;&lt; endl; // 5:22:31\n</code></pre> <p>This is how std::cout mixes types (and still works)!</p> <pre><code>//Since these two methods are implemented in the STL\nstd::ostream&amp; operator &lt;&lt; (std::ostream&amp; out, const std::string&amp; s);\nstd::ostream&amp; operator &lt;&lt; (std::ostream&amp; out, const int&amp; i);\n//then\ncout &lt;&lt; \"test\" &lt;&lt; 5; // (cout &lt;&lt; \"test\") &lt;&lt; 5;\n//then\noperator&lt;&lt;(operator&lt;&lt;(cout, \"test\"), 5);\n//then\noperator&lt;&lt;(cout, 5);\n//then\ncout;\n</code></pre> <p>Don't overuse operator overloading!</p> <pre><code>//Confusing\nMyString a(\"opossum\");\nMyString b(\"quokka\");\nMyString c = a * b; // what does this even mean??\n\n//Great!\nMyString a(\"opossum\");\nMyString b(\"quokka\");\nMyString c = a.charsInCommon(b); // much better!\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#rules-of-operator-overloading","title":"Rules of Operator Overloading","text":"<ol> <li>Meaning should be obvious when you see it</li> <li>Should be reasonably similar to corresponding arithmetic operations</li> <li>Don't define <code>+</code> to mean set subtraction!</li> <li>When the meaning isn't obvious, give it a normal name instead</li> </ol>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lec12-special-member-function","title":"Lec12 Special Member Function","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#special-member-functions-smfs","title":"Special Member Functions (SMFs)","text":"<p>These functions are generated only when they're called (and before any  are explicitly defined by you):</p> <ul> <li>Default Constructor</li> <li>Copy Constructor</li> <li>Copy Assignment Operator</li> <li>Destructor</li> <li>Move Constructor</li> <li>Move Assignment Operator</li> </ul> <pre><code>class Widget {\n    public:\n        Widget(); // default constructor\n        Widget (const Widget&amp; w); // copy constructor\n        Widget&amp; operator = (const Widget&amp; w); // copy assignment operator\n        ~Widget(); // destructor\n        Widget (Widget&amp;&amp; rhs); // move constructor\n        Widget&amp; operator = (Widget&amp;&amp; rhs); // move assignment operator\n}\n</code></pre> <ul> <li>Default Constructor</li> <li>object is created with no  parameters</li> <li>constructor also has no parameters</li> <li>all SMFs are public and inline function, meaning that wherever  it's used is replaced with the  generated code in the function</li> <li>Copy Constructor</li> <li>another type of constructor that creates an instance of a class</li> <li>constructs a member-wise copy of  an object (deep copy)</li> <li>Copy Assignment Operator</li> <li>very similar to copy constructor,  except called when trying to set  one object equal to another  e.g. w1 = w2;</li> <li>Destructor</li> <li>called whenever object goes out  of scope</li> <li>can be used for deallocating  member variables and avoiding  memory leaks</li> <li>Move Constructor</li> <li>Move Assignment Operator</li> </ul> <pre><code>//Examples:\nusing std::vector;\nvector&lt;int&gt; func(vector&lt;int&gt; vec0) {\n    vector&lt;int&gt; vec1;//Default constructor creates empty vector\n    vector&lt;int&gt; vec2(3);//Not a SMF - calls a constructor with parameters\u2192{0,0,0}\n    vector&lt;int&gt; vec3{3};//Also not a SMF, uses initializer_list\n    vector&lt;int&gt; vec4();//A function declaration! (C++'s most vexing parse)\n    vector&lt;int&gt; vec5(vec2};//Copy constructor - vector created as copy of another\n    vector&lt;int&gt; vec{};//Also the default constructor\n    vector&lt;int&gt; vec{vec3 + vec4};//Copy constructor\n    vector&lt;int&gt; vec8 = vec4;//Copy constructor - vec8 is newly constructor\n    vec8 = vec2;//Copy assignment - vec8 is an existing object\n    return vec8;//Copy constructor: copies vec8 to location outside of func\n}//Destructors on all values (except return value) are called\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#copy-constructors-and-copy-assignment-operators","title":"Copy Constructors and Copy  Assignment Operators","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#initializer-lists","title":"initializer lists","text":"<pre><code>template &lt;typename T&gt;\nvector&lt;T&gt;::vector&lt;T&gt;() {//members are first default constructed (declared to be their default values)\n    _size = 0;\n    _capacity = kInitialSize;\n    _elems = new T[kInitialSize];//Then each member is reassigned. This seems wasteful!\n}\n//The technique below is called an initializer list\ntemplate &lt;typename T&gt;\nvector&lt;T&gt;::vector&lt;T&gt;() ://Directly construct each member with a starting value\n    _size(0), _capacity(kInitialSize),\n    _elems(new T[kInitialSize]) { }\n</code></pre> <ul> <li>Prefer to use member initializer lists, which directly constructs each  member with a given value</li> <li>Faster! Why construct, and then immediately reassign? </li> <li>What if members are a non-assignable type (you'll see by the end of  lecture how this can be possible!)</li> <li>Important clarification: you can use member initializer lists for ANY  constructor, even if it has parameters (and thus isn't an SMF)</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#why-arent-the-default-smfs-always-sufficient","title":"Why aren't the default SMFs  always sufficient?","text":"<p>The default compiler-generated copy constructor and copy  assignment operator functions work by manually copying each member variable!</p> <p>Moral of the story: in many cases, copying is not  as simple as copying each member variable!</p> <pre><code>//the default copy constructor\ntemplate &lt;typename T&gt;\nvector&lt;T&gt;::vector&lt;T&gt;(const vector::vector&lt;T&gt;&amp; other) :\n    _size(other._size),\n    _capacity(other._capacity),\n    _elems(other._elems) { \n}\n\n//We can create a new array\ntemplate &lt;typename T&gt;\nvector&lt;T&gt;::vector&lt;T&gt;(const vector::vector&lt;T&gt;&amp; other) :\n    _size(other._size),\n    _capacity(other._capacity),\n    _elems(other._elems) { \n    _elems = new T[other._capacity];\n    std::copy(other._elems, other._elems + other._size, _elems);\n}\n\n//Even better: let's move this to the initializer list\ntemplate &lt;typename T&gt;\nvector&lt;T&gt;::vector&lt;T&gt;(const vector::vector&lt;T&gt;&amp; other) :\n    _size(other._size),\n    _capacity(other._capacity),\n    _elems(new T[other._capacity]) {//We can move our reassignment of _elems up!\n    std::copy(other._elems, other._elems + other._size, _elems);\n}\n</code></pre> <pre><code>//the default copy assignment operator\ntemplate &lt;typename T&gt;\nvector&lt;T&gt;&amp; vector&lt;T&gt;::operator = (const vector&lt;T&gt;&amp; other) {\n    _size = other._size;\n    _capacity = other._capacity;\n    _elems = other._elems;\n    return *this;\n}\n\n//Attempt 1: Allocate a new array and copy over elements\ntemplate &lt;typename T&gt;\nvector&lt;T&gt;&amp; vector&lt;T&gt;::operator = (const vector&lt;T&gt;&amp; other) {\n    _size = other._size;\n    _capacity = other._capacity;\n    _elems = new T[other._capacity];//We've lost access to the old value of _elems, and leaked the array that it pointed to!\n    std::copy(other._elems, other._elems + other._size, _elems);\n}\n\n//Attempt 2: Deallocate the old array and make a new one\ntemplate &lt;typename T&gt;\nvector&lt;T&gt;&amp; vector&lt;T&gt;::operator = (const vector&lt;T&gt;&amp; other) {\n    if (&amp;other == this) return *this;//Also, be careful about self-reassignment!\n    _size = other._size;\n    _capacity = other._capacity;\n    delete[] _elems;\n    _elems = new T[other._capacity];\n    std::copy(other._elems, other._elems + other._size, _elems);\n    return *this;//Remember to return a reference to the vector itself\n}\n</code></pre> <p>Copy operations must perform these tasks:</p> <ul> <li>Copy constructor</li> <li>Use initializer list to copy members  where simple copying does the  correct thing.<ul> <li>int, other objects, etc</li> </ul> </li> <li>Manually copy all members otherwise <ul> <li>pointers to heap memory</li> <li>non-copyable things</li> </ul> </li> <li>Copy assignment</li> <li>Clean up any resources in the existing object about to be overwritten</li> <li>Copy members using direct  assignment when assignment works</li> <li>Manually copy members where assignment does not work</li> <li>You don't have to do these in this order</li> </ul> <p>Summary: Steps to follow for an assignment operator</p> <ol> <li>Check for self-assignment.</li> <li>Make sure to free existing members if applicable.</li> <li>Copy assign each automatically assignable member. </li> <li>Manually copy all other members.</li> <li>Return a reference to *this (that was just reassigned).</li> </ol>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#-delete-and--default","title":"= delete and = default","text":"<pre><code>//Explicitly delete the copy member functions\n//Adding = delete; after a function prototype tells C++ to not generate the corresponding SMF\nclass PasswordManager {\n    public:\n        PasswordManager();\n        PasswordManager(const PasswordManager&amp; pm);\n        ~PasswordManager();\n        // other methods ...\n        PasswordManager(const PasswordManager&amp; rhs) = delete;\n        PasswordManager&amp; operator = (const PasswordManager&amp; rhs) = delete;\n    private:\n        // other important members ...\n}\n</code></pre> <pre><code>//Is there a way to keep, say, the default copy constructor if you write another constructor?\n//Adding = default; after a function prototype tells C++ to still generate the default SMF, even if you're defining other SMFs\nclass PasswordManager {\n    public:\n        PasswordManager();\n        PasswordManager(const PasswordManager&amp; pm) = default;\n        ~PasswordManager();\n        // other methods ...\n        PasswordManager(const PasswordManager&amp; rhs) = delete;\n        PasswordManager&amp; operator = (const PasswordManager&amp; rhs) = delete;\n    private:\n        // other important members ...\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#rule-of-0-and-rule-of-3","title":"Rule of 0 and Rule of 3","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#rule-of-0","title":"Rule of 0","text":"<p>If the default operations work, then don't define your own!</p> <p>When should you define your own SMFs</p> <ul> <li>When the default ones generated by the compiler won't work</li> <li>Most common reason: there's a resource that our class uses that's not  stored inside of our class </li> <li>e.g. dynamically allocated memory<ul> <li>our class only stores the pointers to arrays, not the arrays in memory  itself</li> </ul> </li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#rule-of-3-c-98","title":"Rule of 3 (C++ 98)","text":"<ul> <li>If you explicitly define a copy constructor, copy assignment operator, or  destructor, you should define all three</li> <li>What's the rationale?</li> <li>If you're explicitly writing your own copy operation, you're controlling  certain resources manually</li> <li>You should then manage the creation, use, and releasing of those  resources!</li> </ul> <p>Recap of Special Member Functions (SMFs)</p> <ul> <li>Default Constructor</li> <li>Object created with no parameters, no member variables instantiated </li> <li>Copy Constructor</li> <li>Object created as a copy of existing object (member variable-wise) </li> <li>Copy Assignment Operator</li> <li>Existing object replaced as a copy of another existing object. </li> <li>Destructor </li> <li>Object destroyed when it is out of scope.</li> </ul> <p>Are these 4 enough?</p> <pre><code>class StringTable {\n    public:\n        StringTable() {}\n        StringTable(const StringTable&amp; st) {}\n        // functions for insertion, erasure, lookup, etc., \n        // but no move/dtor functionality\n        // ...\n    private:\n        std::map&lt;int, std::string&gt; values;\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#move-constructors-and-move-assignment-operators","title":"Move constructors and move  assignment operators","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#move-operations-c11","title":"Move Operations (C++11)","text":"<p>These functions are generated only when they're called (and before any are explicitly defined by you)</p> <pre><code>//Allow for moving objects and std::move operations (rvalue refs)\nclass Widget {\n    public:\n        Widget(); // default constructor\n        Widget (const Widget&amp; w); // copy constructor\n        Widget&amp; operator = (const Widget&amp; w); // copy assignment operator\n        ~Widget(); // destructor\n        Widget (Widget&amp;&amp; rhs); // move constructor\n        Widget&amp; operator = (Widget&amp;&amp; rhs); // move assignment operator\n}\n</code></pre> <ul> <li>Move constructors and move assignment operators will perform  \"memberwise moves\"</li> <li>Defining a copy constructor does not affect generation of a default copy  assignment operator, and vice versa</li> <li>Defining a move assignment operator prevents generation of a move copy  constructor, and vice versa</li> <li>Rationale: if the move assignment operator needs to be re-implemented,  there'd likely be a problem with the move constructor</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#some-nuances-to-move-operation-smfs","title":"Some nuances to move operation SMFs","text":"<ul> <li>Move operations are generated for classes only if these things are true:</li> <li>No copy operations are declared in the class </li> <li>No move operations are declared in the class</li> <li>No destructor is declared in the class<ul> <li>Can get around all of these by using default:</li> </ul> </li> </ul> <pre><code>Widget(Widget&amp;&amp;) = default;\nWidget&amp; operator=(Widget&amp;&amp;) = default; // support moving\nWidget(const Widget&amp;) = default;\nWidget&amp; operator=(const Widget&amp;) = default; // support copying\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lec13-move-semantics-in-c","title":"Lec13 Move Semantics in C++","text":"<p>l-values live until the end of the scope </p> <p>r-values live until the end of the line</p> <pre><code>//Find the r-values! (Only consider the items on the right of = signs)\nint x = 3; //3 is an r-value\nint *ptr = 0x02248837; //0x02248837 is an r-value\nvector&lt;int&gt; v1{1, 2, 3}; //{1, 2, 3} is an r-value,v1 is an l-value\nauto v4 = v1 + v2; //v1 + v2 is an r-value\nsize_t size = v.size(); //v.size()is an r-value\nv1[1] = 4*i; //4*i is an r-value, v1[1] is an l-value\nptr = &amp;x; //&amp;x is an r-value\nv1[2] = *ptr; //*ptr is an l-value\nMyClass obj; //obj is an l-value\nx = obj.public_member_variable; //obj.public_member_variable is l-value\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#how-many-arrays-will-be-allocated-copied-and-destroyed-here","title":"How many arrays will be allocated, copied and destroyed here?","text":"<pre><code>int main() {\n    vector&lt;int&gt; vec;\n    vec = make_me_a_vec(123); // //make_me_a_vec(123) is an r-value\n}\nvector&lt;int&gt; make_me_a_vec(int num) {\n    vector&lt;int&gt; res;\n    while (num != 0) {\n        res.push_back(num%10);\n        num /= 10;\n    }\n    return res;\n}\n</code></pre> <ul> <li>vec is created using the default constructor </li> <li>make_me_a_vec creates a vector using the default constructor and returns it </li> <li>vec is reassigned to a copy of that return value using copy assignment</li> <li>copy assignment creates a new array and copies the contents of the old one </li> <li>The original return value\u2019s lifetime ends and it calls its destructor </li> <li>vec\u2019s lifetime ends and it calls its destructor</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#how-do-we-know-when-to-use-move-assignment-and-when-to-use-copy-assignment","title":"How do we know when to use move assignment and  when to use copy assignment?","text":"<p>Answer: When the item on the right of the = is an  r-value we should use move assignment</p> <p>Why? r-values are always about to die, so we can steal their resources</p> <pre><code>//Examples\n//Using move assignment\nint main() {\n    vector&lt;int&gt; vec;\n    vec = make_me_a_vec(123); \n}\n//Using copy assignment\nint main() {\n    vector&lt;string&gt; vec1 = {\u201chello\u201d, \u201cworld\u201d}\n    vector&lt;string&gt; vec2 = vec1;\n    vec1.push_back(\u201cSure hope vec2 doesn\u2019t see this!\u201d)\n} //and vec2 never saw a thing\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#the-r-value-reference","title":"the r-value reference","text":"<p>How to make two different assignment operators? Overload vector::operator= ! </p> <p>How? Introducing\u2026 the r-value reference <code>&amp;&amp;</code></p> <p>(This is different from the l-value reference &amp; you have see before) (it has one more ampersand)</p> <p>Overloading with <code>&amp;&amp;</code></p> <pre><code>int main() {\n    int x = 1;\n    change(x); //this will call version 2\n    change(7); //this will call version 1\n}\nvoid change(int&amp;&amp; num){...} //version 1 takes r-values\nvoid change(int&amp; num){...} //version 2 takes l-values\n//num is a reference to vec\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#copy-assignment-and-move-assignment","title":"Copy assignment and Move assignment","text":"<pre><code>//Copy assignment\nvector&lt;T&gt;&amp; operator=(const vector&lt;T&gt;&amp; other) { \n    if (&amp;other == this) return *this; \n    _size = other._size; \n    _capacity = other._capacity; \n    //must copy entire array\n    delete[] _elems; \n    _elems = new T[other._capacity]; \n    std::copy(other._elems, \n    other._elems + other._size, \n    _elems); \n    return *this;\n}\n//Move assignment\nvector&lt;T&gt;&amp; operator=(vector&lt;T&gt;&amp;&amp; other) { \n    if (&amp;other == this) return *this; \n    _size = other._size; \n    _capacity = other._capacity; \n    //we can steal the array\n    delete[] _elems; \n    _elems = other._elems\n    return *this; \n}\n//This works\nint main() {\n    vector&lt;int&gt; vec;\n    vec = make_me_a_vec(123); //this will use move assignment\n    vector&lt;string&gt; vec1 = {\u201chello\u201d, \u201cworld\u201d}\n    vector&lt;string&gt; vec2 = vec1; //this will use copy assignment\n    vec1.push_back(\u201cSure hope vec2 doesn\u2019t see this!\u201d)\n} \n</code></pre> <p>The compiler will pick which vector::operator= to use based  on whether the RHS is an l-value or an r-value</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#can-we-make-it-even-better","title":"Can we make it even better?","text":"<p>In the move assignment above, these are also making copies (using int/ptr copy assignment)</p> <pre><code>_size = other._size; \n_capacity = other._capacity; \n_elems = other._elems;\n</code></pre> <p>We can force move assignment  rather than copy assignment of these ints by using std::move</p> <pre><code>vector&lt;T&gt;&amp; operator=(vector&lt;T&gt;&amp;&amp; other) { \n    if (&amp;other == this) return *this; \n    _size = std::move(other._size); \n    _capacity = std::move(other._capacity); \n    //we can steal the array\n    delete[] _elems; \n    _elems = std::move(other._elems);\n    return *this; \n}\n</code></pre> <p>The compiler will pick which vector::operator= to use based on whether the RHS is an l-value or an r-value</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#constructor","title":"Constructor","text":"<pre><code>//How about this\nint main() {\n    vector&lt;int&gt; vec;\n    vec = make_me_a_vec(123); //this will use move assignment\n    vector&lt;string&gt; vec1 = {\u201chello\u201d, \u201cworld\u201d} //this should use move \n    vector&lt;string&gt; vec2 = vec1; //this will use copy construction\n    vec1.push_back(\u201cSure hope vec2 doesn\u2019t see this!\u201d)\n}\n</code></pre> <pre><code>//copy constructor\nvector&lt;T&gt;(const vector&lt;T&gt;&amp; other) { \n    if (&amp;other == this) return *this; \n    _size = other._size; \n    _capacity = other._capacity; \n    //must copy entire array\n    delete[] _elems; \n    _elems = new T[other._capacity]; \n    std::copy(other._elems, other._elems + other._size, _elems); \n    return *this; \n}\n//move constructor\nvector&lt;T&gt;(vector&lt;T&gt;&amp;&amp; other) { \n    if (&amp;other == this) return *this;\n    _size = std::move(other._size); \n    _capacity = std::move(other._capacity); \n    //we can steal the array\n    delete[] _elems; \n    _elems = std::move(other._elems);\n    return *this;\n}\n</code></pre> <p>Where else should we use std::move?</p> <p>Answer: </p> <ol> <li>Wherever we take in a const &amp; parameter in a class member function and assign it  to something else in our function</li> <li>Don\u2019t use std::move outside of class  definitions, never use it in application code!</li> </ol>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#vectorpush_back","title":"vector::push_back","text":"<pre><code>//Copy push_back \nvoid push_back(const T&amp; element) {\n    elems[_size++] = element; \n    //this is copy assignment \n}\n//Move push_back\nvoid push_back(T&amp;&amp; element) {\n    elems[_size++] = std::move(element); \n    //this forces T\u2019s move assignment \n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#be-careful-with-stdmove","title":"Be careful with std::move","text":"<pre><code>int main() {\n    vector&lt;string&gt; vec1 = {\u201chello\u201d, \u201cworld\u201d}\n    vector&lt;string&gt; vec2 = std::move(vec1);\n    vec1.push_back(\u201cSure hope vec2 doesn\u2019t see this!\u201d)//wrong!!!\n}\n</code></pre> <ul> <li>After a variable is moved via std::move, it should never be used until it is  reassigned to a new variable!</li> <li>The C++ compiler might warn you about this mistake, but the code above compiles!</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#tldr-move-semantics","title":"TLDR: Move Semantics","text":"<ul> <li>If your class has copy constructor and copy assignment defined, you should also define a move constructor and move assignment</li> <li>Define these by overloading your copy constructor and assignment to be  defined for Type&amp;&amp; other as well as Type&amp; other </li> <li>Use std::move to force the use of other types\u2019 move assignments and  constructors </li> <li>All std::move(x) does is cast x as an rvalue </li> <li>Be wary of std::move(x) in main function code</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#bonus-stdmove-and-raii","title":"Bonus: std::move and RAII","text":"<ul> <li>Recall: RAII means all resources required by an object are acquired in its constructor and destroyed in its destructor </li> <li>To be consistent with RAII, you should have no half-ready resources, such as a  vector whose underlying array has been deallocated</li> </ul> <p>Is std::move consistent with RAII?</p> <ul> <li>I say NO! </li> <li>This is a sticky language design flaw, C++ has a lot of those! </li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lec14-type-safety-and-stdoptional","title":"Lec14 Type Safety and <code>std::optional</code>","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#recap-const-correctness","title":"Recap: Const-Correctness","text":"<ul> <li>We pass big pieces of data by reference into helper functions  by to avoid making copies of that data</li> <li>If this function accidentally or sneakily changes that piece of  data, it can lead to hard to find bugs! </li> <li>Solution: mark those reference parameters const to  guarantee they won\u2019t be changed in the function!</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#how-does-the-compiler-know-when-its-safe-to-call-member-functions-of-const-variables","title":"How does the compiler know when it\u2019s safe to call  member functions of const variables?","text":"<p>const-interface: All member functions marked const in a class definition. Objects of  type const ClassName may only use the const-interface.</p> <p>RealVector\u2019s const-interface</p> <pre><code>template&lt;class ValueType&gt; class RealVector {\npublic:\n    using iterator = ValueType*;\n    using const_ iterator = const ValueType*;\n    /*...*/\n    size_t size() const;\n    bool empty() const;\n    /*...*/\n    void push_back(const ValueType&amp; elem);\n    iterator begin();\n    iterator end();\n    const_iterator cbegin()const;\n    const_iterator cend()const;\n    /*...*/\n}\n</code></pre> <p>Key Idea: Sometimes less functionality is better functionality</p> <ul> <li>Technically, adding a const-interface only limits what RealVector objects marked const can do </li> <li>Using types to enforce assumptions we make about function calls help us prevent programmer errors! </li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#type-safety","title":"Type Safety","text":"<p>Type Safety: The extent to which a language prevents typing errors.guarantees the behavior  of programs.</p> <p>What does this code do?</p> <pre><code>void removeOddsFromEnd(vector&lt;int&gt;&amp; vec){\n    while(vec.back() % 2 == 1){\n        vec.pop_back();\n    }\n}\n//What happens when input is {} ?\n</code></pre> <pre><code>//One solution\nvoid removeOddsFromEnd(vector&lt;int&gt;&amp; vec){\n    while(!vec.empty() &amp;&amp; vec.back() % 2 == 1){\n        vec.pop_back();\n    }\n}\n//Key idea: it is the programmers job to enforce the precondition that vec be non-empty, otherwise we get undefined behavior!\n</code></pre> <p>There may or may not be a \u201clast element\u201d in vec. How can vec.back() have deterministic  behavior in either case?</p> <p>The problem</p> <pre><code>valueType&amp; vector&lt;valueType&gt;::back(){\n    return *(begin() + size() - 1);\n}\n//Dereferencing a pointer without verifying it points to real memory is undefined behavior!\n\nvalueType&amp; vector&lt;valueType&gt;::back(){\n    if(empty()) throw std::out_of_range;\n    return *(begin() + size() - 1);\n}\n//Now, we will at least reliably error and stop the program or return the last element whenever back() is called\n</code></pre> <p>Type Safety: The extent to  which a function signature guarantees the  behavior of a function.</p> <p>The problem</p> <pre><code>//back() is promising to return something of type valueType when its possible no such value exists!\nvalueType&amp; vector&lt;valueType&gt;::back(){\n    return *(begin() + size() - 1);\n}\n\n//A first solution?\nstd::pair&lt;bool, valueType&amp;&gt; vector&lt;valueType&gt;::back(){\n    if(empty()){\n        return {false, valueType()};//valueType may not have a default constructor\n    }\n    return {true, *(begin() + size() - 1)};\n}//Even if it does, calling constructors is expensive\n\n//So, what should back() return?\n??? vector&lt;valueType&gt;::back(){\n    if(empty()){\n        return ??;\n    }\n    return *(begin() + size() - 1);\n}//Introducing std::optional\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#stdoptional","title":"std::optional","text":"<p>What is <code>std::optional&lt;T&gt;</code>?</p> <p><code>std::optional</code> is a template class which will either contain a value of type T or contain nothing (expressed as <code>nullopt</code>)</p> <pre><code>void main(){\n    std::optional&lt;int&gt; num1 = {}; //num1 does not have a value\n    num1 = 1; //now it does!\n    num1 = std::nullopt; //now it doesn't anymore\n}\n</code></pre> <p>What if back() returned an optional?</p> <pre><code>std::optional&lt;valueType&gt; vector&lt;valueType&gt;::back(){\n    if(empty()){\n        return {};\n    }\n    return *(begin() + size() - 1);\n}\n</code></pre> <p>std::optional interface</p> <ul> <li><code>.value()</code> returns the contained value or throws bad_optional_access error </li> <li><code>.value_or(valueType val)</code> returns the contained value or default value, parameter val</li> <li><code>.has_value()</code> returns true if contained value exists, false otherwise</li> </ul> <p>Checking if an optional has value</p> <pre><code>std::optional&lt;Student&gt; lookupStudent(string name){//something}\nstd::optional&lt;Student&gt; output = lookupStudent(\u201cKeith\u201d);\nif(student){\n    cout &lt;&lt; output.value().name &lt;&lt; \u201c is from \u201c &lt;&lt; output.value().state &lt;&lt; endl;\n} else {\n    cout &lt;&lt; \u201cNo student found\u201d &lt;&lt; endl;\n}\n</code></pre> <p>So we have perfect solutions</p> <pre><code>void removeOddsFromEnd(vector&lt;int&gt;&amp; vec){\n    while(vec.back().has_value() &amp;&amp; vec.back().value() % 2 == 1){\n        vec.pop_back();\n    }\n}\n//Below totally hacky, but totally works, but don't do this!\nvoid removeOddsFromEnd(vector&lt;int&gt;&amp; vec){\n    while(vec.back().value_or(2) % 2 == 1){\n        vec.pop_back();\n    }\n}\n</code></pre> <p>Recap: The problem with std::vector::back()</p> <ul> <li>Why is it so easy to accidentally call back() on empty  vectors if the outcome is so dangerous? </li> <li>The function signature gives us a false promise! </li> <li>Promises to return an something of type valueType </li> <li>But in reality, there either may or may not be a \u201clast element\u201d  in a vector</li> </ul> <p>std::optional \u201cmonadic\u201d interface (C++23 sneak peek!)</p> <ul> <li><code>.and_then(function f)</code> returns the result of calling f(value) if contained value exists,  otherwise null_opt (f must return optional) </li> <li><code>.transform(function f)</code>returns the result of calling f(value) if contained value exists,  otherwise null_opt (f must return optional) </li> <li><code>.or_else(function f)</code> returns value if it exists, otherwise returns result of calling f</li> </ul> <p>Recall: Design Philosophy of C++</p> <ul> <li>Only add features if they solve an actual problem</li> <li>Programmers should be free to choose their own style</li> <li>Compartmentalization is key </li> <li>Allow the programmer full control if they want it</li> <li>Don\u2019t sacrifice performance except as a last resort</li> <li>Enforce safety at compile time whenever possible</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#recap-type-safety-and-stdoptional","title":"Recap: Type Safety and std::optional","text":"<ul> <li>You can guarantee the behavior of your programs by using a strict type  system! </li> <li>std::optional is a tool that could make this happen: you can return either a  value or nothing</li> <li>.has_value() </li> <li>.value_or() </li> <li>.value() </li> <li>This can be unwieldy and slow, so cpp doesn\u2019t use optionals in most stl data  structures</li> <li>Many languages, however, do! </li> <li>The ball is in your court!</li> </ul> <p>\u201cWell typed programs cannot go wrong.\u201d </p> <ul> <li>Robert Milner (very  important and good CS dude)</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#lec15-raii-smart-pointers-and-c-project-building","title":"Lec15 RAII, Smart Pointers, and C++  Project Building","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#exceptions---why-care","title":"Exceptions - Why care?","text":""},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#how-many-code-paths-are-in-this-function","title":"How many code paths are in this function?","text":"<pre><code>string get_name_and_print_sweet_tooth(Person p) {\n    if (p.favorite_food() == \"chocolate\" || p.favorite_drink() == \"milkshake\") {\n        cout &lt;&lt; p.first() &lt;&lt; \" \" &lt;&lt; p.last() &lt;&lt; \" has a sweet tooth!\" &lt;&lt; endl;\n    }\n    return p.first() + \" \" + p.last();\n}\n</code></pre> <ul> <li>Code Path 1 - favors neither chocolate nor milkshakes</li> <li>Code Path 2 - favors milkshakes</li> <li>Code Path 3 - favors chocolate (and possibly milkshakes)</li> </ul> <p>Are there any more code paths?</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#hint-exceptions","title":"Hint: Exceptions","text":"<ul> <li> <p>Exceptions are ways to signal that something has gone wrong during run-time</p> </li> <li> <p>Exceptions are \"thrown\" and can crash the program, but can be \"caught\" to  avoid this</p> </li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#hidden-code-paths","title":"Hidden Code Paths","text":"<p>There are (at least) 23 code paths in the code before! </p> <ul> <li>(1) copy constructor of Person parameter may throw</li> <li>(5) constructor of temp string may throw </li> <li>(6) call to favorite_food, favorite_drink, first (2), last (2), may throw</li> <li>(10) operators may be user-overloaded, thus may throw</li> <li>(1) copy constructor of string for return value may throw</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#what-could-go-wrong-here","title":"What could go wrong here?","text":"<pre><code>string get_name_and_print_sweet_tooth(int id_number) {\n    Person* p = new Person(id_number); // assume the constructor fills in variables\n    if (p-&gt;favorite_food() == \"chocolate\" ||\n     p-&gt;favorite_drink() == \"milkshake\") {\n    cout &lt;&lt; p-&gt;first() &lt;&lt; \" \" &lt;&lt; p-&gt;last() &lt;&lt; \" has a sweet tooth!\" &lt;&lt; endl;\n    }\n    auto result = p-&gt;first() + \" \" + p-&gt;last();\n    delete p;//must release!!!\n    return result;\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#this-problem-isnt-just-unique-to-pointers","title":"This problem isn't just unique to pointers","text":"Acquire Release Heap memory new delete Files open close Locks try_lock unlock Cockets socket close <p>How do we guarantee resources get released, even if there are exceptions?</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#raii","title":"RAII","text":"<p>Resource Acquisition Is Initialization</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#what-is-radouble-i","title":"What is R\u00b7A\u00b7Double I?","text":"<ul> <li>All resources used by a class should be acquired in the constructor</li> <li>All resources used by a class should be released in the destructor</li> </ul> <p>Why?</p> <ul> <li>Objects should be usable immediately after creation </li> <li>There should never be a \"half-valid\" state of an object, where it exists  in memory but is not accessible to/used by the program </li> <li>The destructor is always called (when the object goes out of scope),  so the resource is always freed</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#is-it-raii-compliant","title":"Is it RAII Compliant?","text":"<pre><code>//The following three algorithms are not RALL\nvoid printFile() {\n    ifstream input;\n    input.open(\"hamlet.txt\");\n    string line;\n    while (getline(input, line)) { // might throw exception\n         cout &lt;&lt; line &lt;&lt; endl;\n    }\n    input.close();\n}\nvoid printFile() {\n    ifstream input(\"hamlet.txt\");\n    string line;\n    while (getline(input, line)) { // might throw exception\n         cout &lt;&lt; line &lt;&lt; endl;\n    }\n}\nvoid cleanDatabase (mutex&amp; databaseLock, map&lt;int, int&gt;&amp; database) {\n    databaseLock.lock();\n    // other threads will not modify database\n    // modify the database\n    // if exception thrown, mutex never unlocked!\n    databaseLock.unlock();\n}\n</code></pre> <p>This fixes it!</p> <pre><code>void cleanDatabase (mutex&amp; databaseLock, map&lt;int, int&gt;&amp; database) {\n    lock_guard&lt;mutex&gt; lg(databaseLock);\n    // other threads will not modify database\n    // modify the database\n    // if exception thrown, mutex is unlocked!\n    // no need to unlock at end, as it's handle by the lock_guard\n}\nclass lock_guard {\n    public:\n        lock_guard(mutex&amp; lock) : acquired_lock(lock){\n            acquired_lock.lock();\n        }\n        ~lock_guard() {\n        acquired_lock.unlock();\n    }\n    private:\n        mutex&amp; acquired_lock;\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#what-about-raii-for-memory","title":"What about RAII for memory?","text":"<p>This is where we're going with RAII: from the C++ Core Guidelines:</p> <p>Avoid calling <code>new</code> and <code>delete</code> explicitly</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#smart-pointers","title":"Smart Pointers","text":"<p>RAII for memory</p> <p>We saw how this was not RAII-compliant because of the \"naked\" delete.</p> <pre><code>string get_name_and_print_sweet_tooth(int id_number) {\n    Person* p = new Person(id_number); //assume the constructor fills in variables\n    if (p-&gt;favorite_food() == \"chocolate\" || p-&gt;favorite_drink() == \"milkshake\") {\n        cout &lt;&lt; p-&gt;first() &lt;&lt; \" \" &lt;&lt; p-&gt;last() &lt;&lt; \" has a sweet tooth!\" &lt;&lt; endl;\n    }\n    auto result = p-&gt;first() + \" \" + p-&gt;last();\n    delete p;\n    return result;\n}\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#solution-built-in-smart-raii-safe-pointers","title":"Solution: built-in \"smart\" (RAII-safe) pointers","text":"<ul> <li>Three types of smart pointers in C++ that automatically free underlying  memory when destructed </li> <li>std::unique_ptr \u2022 Uniquely owns its resource, can't be copied </li> <li>std::shared_ptr \u2022 Can make copies, destructed when underlying memory goes out of  scope </li> <li>std::weak_ptr \u2022 models temporary ownership: when an object only needs to be  accessed if it exists (convert to shared_ptr to access)</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#stdunique_ptr","title":"std::unique_ptr","text":"<pre><code>//Before\nvoid rawPtrFn() {\n    Node* n = new Node;\n    // do things with n\n    delete n;\n}\n//After\nvoid rawPtrFn() {\n    std::unique_ptr&lt;Node&gt; n(new Node);\n    // do things with n\n    // automatically freed!\n}\n</code></pre> <p>what if we wanted to have multiple  pointers to the same object? <code>std::shared_ptr</code></p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#stdshared_ptr","title":"std::shared_ptr","text":"<ul> <li>Resources can be stored by any number of shared_ptrs</li> <li>The resource is deleted when none of the pointers points to the resource</li> </ul> <pre><code>{\n    std::shared_ptr&lt;int&gt; p1(new int);\n    // use p1\n    {\n        std::shared_ptr&lt;int&gt; p2 = p1;\n        // use p1 and p2\n    }\n    // use p1, like so\n    cout &lt;&lt; *p1.get() &lt;&lt; endl;\n}\n// the integer is now deallocated!\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#smart-pointers-raii-wrapper-for-pointers","title":"Smart pointers: RAII Wrapper for pointers","text":"<pre><code>std::unique_ptr&lt;T&gt; up{new T};\nstd::unique_ptr&lt;T&gt; up = std::make_unique&lt;T&gt;();\nstd::shared_ptr&lt;T&gt; sp{new T};\nstd::shared_ptr&lt;T&gt; sp = std::make_shared&lt;T&gt;();\nstd::weak_ptr&lt;T&gt; wp = sp;//A weak_ptr is a container for a raw pointer. It is created as a copy of a shared_ptr. The existence or destruction of weak_ptr copies of a shared_ptr have no effect on the shared_ptr or its other copies. After all copies of a shared_ptr have been destroyed, all weak_ptr copies become empty.\n// can only be copy/move constructed (or empty)!\n</code></pre> <pre><code>//So which way is better?\n//Always use std::make_unique&lt;T&gt;()!\nstd::unique_ptr&lt;T&gt; up{new T};\nstd::unique_ptr&lt;T&gt; up = std::make_unique&lt;T&gt;();\nstd::shared_ptr&lt;T&gt; sp{new T};\nstd::shared_ptr&lt;T&gt; sp = std::make_shared&lt;T&gt;();\n</code></pre> <ul> <li>If we don't use make_shared, then we're allocating memory twice (once for sp, and once for new T)!</li> <li>We should be consistent across smart pointers</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#building-c-projects","title":"Building C++ Projects","text":"<p>What happens when you run our \"./build_and_run.sh\"?</p>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#what-do-make-and-makefiles-do","title":"What do make and Makefiles do?","text":"<ul> <li>make is a \"build system\" </li> <li>uses g++ as its main engine</li> <li>several stages to the compiler system</li> <li>can be utilized through a Makefile!</li> <li>let's take a look at a simple makefile to get some practice!</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#so-why-do-we-use-cmake-in-our-assignments","title":"So why do we use cmake in our assignments?","text":"<ul> <li>cmake is a cross-platform make</li> <li>cmake creates build systems!</li> <li>It takes in an even higher-level config file, ties in external libraries,  and outputs a Makefile, which is then run. </li> <li>Let's take a look at our makefiles!</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#example-cmake-file-cmakeliststxt","title":"Example cmake file (CMakeLists.txt)","text":"<pre><code>cmake_minimum_required(VERSION 3.0) # \u6307\u5b9a cmake \u6700\u4f4e\u7248\u672c\nproject(wikiracer) # \u6307\u5b9a\u9879\u76ee\u540d\u79f0(\u968f\u610f)\nset(CMAKE_CXX_STANDARD 17) \nset(CMAKE_CXX_STANDARD_REQUIRED True) \nfind_package(cpr CONFIG REQUIRED) \n# adding all files \nadd_executable(main main.cpp wikiscraper.cpp.o error.cpp) # \u6307\u5b9a\u7f16\u8bd1\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0cmain\u662f\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u8868\u793a\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6587\u4ef6\u540d\uff08\u8fd9\u4e2a\u6587\u4ef6\u540d\u4e5f\u662f\u4efb\u610f\u7684\uff09\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570main.cpp\u5219\u7528\u4e8e\u6307\u5b9a\u6e90\u6587\u4ef6\u3002\ntarget_link_libraries(main PRIVATE cpr)\n</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#components-of-cs-compilation-system","title":"Components of C++'s compilation system","text":"<pre><code>graph LR\nA[Preprocessing &lt;br&gt;in: cpp files out: full cpp files]--&gt;B[Compiling &lt;br&gt;in: full cpp files out: .s files]--&gt;C[Assembling &lt;br&gt;in: .s files out: .o files]--&gt;D[Linking&lt;br&gt; in: .o files out: executable]</code></pre>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#preprocessing-g--e","title":"Preprocessing (g++ -E)","text":"<ul> <li>The C/C++ preprocessor handles preprocessor directives: replaces  includes (#include \u2026) and and expands any macros (#define \u2026) </li> <li>Replace #includes with content of respective files (which is  usually just function/variable declarations, so low bloat)</li> <li>Replaces macros (#define) and selecting different portions of text  depending on #if, #ifdef, #ifndef </li> <li>Outputs a stream of tokens resulting from these transformations</li> <li>If you want, you can produce some errors at even this stage (#if,  #error)</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#compilation-g--s","title":"Compilation (g++ -S)","text":"<ul> <li>Performed on output of the preprocessor (full C++ code)</li> <li>Structure of a compiler: </li> <li>Lexical Analysis</li> <li>Parsing </li> <li>Semantic Analysis</li> <li>Optimization</li> <li>Code Generation (assembly code) </li> <li>This is where traditional \"compiler errors\" are caught</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#assembling-g--c","title":"Assembling (g++ -c)","text":"<ul> <li>Runs on the assembly code as outputted by the compiler</li> <li>Converts assembly code to binary machine code</li> <li>Assumes that all functions are defined somewhere without checking</li> <li>Final output: object files</li> <li>Can't be run by themselves!</li> </ul>"},{"location":"CS%E8%AF%BE%E7%A8%8B/CS106L/CS106L%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/#linking-ld-g","title":"Linking (ld, g++)","text":"<ul> <li>Creates a single executable file from multiple object files </li> <li>Combine the pieces of a program</li> <li>Figure out a memory organization so that all the pieces can fit  together </li> <li>Resolve references so that the program can run under the new  memory organization<ul> <li>.h files declare functions, but the actual functions may be in  separate files from where they're called!</li> </ul> </li> <li>Output is fully self-suficient\u2014no other files needed to run</li> </ul>"},{"location":"%E6%9D%82%E9%A1%B9/","title":"\u4e00\u4e9b\u5176\u4ed6\u6709\u8da3\u7684\u4e1c\u897f","text":""},{"location":"%E6%9D%82%E9%A1%B9/11-25%E7%AD%BE%E5%88%B0%E6%8E%A8/","title":"11/25\u7b7e\u5230\u63a8","text":"<p>\u5fae\u4fe1\u516c\u4f17\u53f7\u4f8b\u4f1a\u7b7e\u5230\u63a8\u3002</p>"},{"location":"%E6%9D%82%E9%A1%B9/11-25%E7%AD%BE%E5%88%B0%E6%8E%A8/#\u5199\u5728\u524d\u9762","title":"\u5199\u5728\u524d\u9762","text":"<p>\u6700\u8fd1NovelAi\u7206\u706b\uff0c\u5f88\u591a\u4eba\u5f00\u59cb\u7528\u8fd9\u73a9\u610f\u8fdb\u884c\u81ea\u5df1\u5934\u50cf\u7684\u521b\u4f5c\uff0c\u4e5f\u6709\u5927\u4e00\u7684\u540c\u5b66\u6765\u95ee\u6280\u672f\u7ec4\u8001\u4eba\u80fd\u4e0d\u80fd\u6559\u4e00\u6559\u600e\u4e48\u628a\u81ea\u5df1\u53d8\u6210\u8001\u5a46\uff08bushi\uff09\uff0c\u6240\u4ee5\u8fd9\u671f\u63a8\u6587\u5c31\u6559\u5927\u5bb6\u7528\u4e00\u7528\u8fd9\u4e2a\u201c\u795e\u5947\u201d\u7684\u8f6f\u4ef6\u3002</p>"},{"location":"%E6%9D%82%E9%A1%B9/11-25%E7%AD%BE%E5%88%B0%E6%8E%A8/#\u6ce8\u610f\u4e8b\u9879","title":"\u6ce8\u610f\u4e8b\u9879","text":"<p>start\uff01</p> <p>\u7531\u4e8e\u6bcf\u4e2a\u4eba\u7535\u8111\u4e0d\u4e00\u6837\uff0c\u800c\u4e14\u6709\u516c\u5b50\u5bcc\u5a46\u5728\u7528Mac\u5b66\u4e60\u5de5\u4f5c\uff09\uff0c\u6240\u4ee5\u8fd9\u7bc7\u63a8\u6587\u4e2d\u53ea\u6d89\u53ca\u5728\u7ebf\u521b\u4f5c\uff0c\u5982\u679c\u60f3\u8981\u5c06\u6574\u4e2a\u9879\u76ee\u90e8\u7f72\u5230\u81ea\u5df1\u7684\u7535\u8111/\u670d\u52a1\u5668\u4e0a\uff08\u4e0d\u8981\u5728\u52e4\u521b\u670d\u52a1\u5668\u4e0a\u641e\u8fd9\u4e2a\uff09\uff0c\u8bf7\u81ea\u884c\u53c2\u9605github\u6216\u8005\u5404\u5927\u6559\u5b66\u7f51\u7ad9\uff08Youtube\u3001Bilibili\uff09\u3002</p>"},{"location":"%E6%9D%82%E9%A1%B9/11-25%E7%AD%BE%E5%88%B0%E6%8E%A8/#novelai","title":"NovelAi","text":"<p>\u65e2\u7136\u8fd9\u4e2a\u9879\u76ee\u7684\u706b\u7206\u662f\u7531\u5b83\u5f15\u8d77\u7684\uff0c\u90a3\u6211\u4eec\u81ea\u7136\u4ece\u672c\u4f53\u5f00\u59cb\u8bb2\u89e3\u3002</p> <p>\u9996\u5148\u8fdb\u5165\u6709\u624b\u5c31\u4f1a\u7cfb\u5217\uff0c\u5728\u98de\u6868AI\u4e0a\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\uff08\u53ef\u4ee5\u4e0d\u586b\u771f\u5b9e\u59d3\u540d\uff09\uff0c\u70b9\u51fb\u542f\u52a8\u73af\u5883\uff0c\u9009\u62e9\u201c\u9ad8\u7ea7CPU\u201d\u53ca\u4ee5\u4e0a\u7684\u73af\u5883\u3002</p> <p>\u7cfb\u5217\uff0c\u5728\u98de\u6868AI\u4e0a\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\uff08\u53ef\u4ee5\u4e0d\u586b\u771f\u5b9e\u59d3\u540d\uff09\uff0c\u70b9\u51fb\u542f\u52a8\u73af\u5883\uff0c\u9009\u62e9\u201c\u9ad8\u7ea7CPU\u201d\u53ca\u4ee5\u4e0a\u7684\u73af\u5883\u3002\u7cfb\u5217\uff0c\u5728\u98de\u6868AI\u4e0a\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\uff08\u53ef\u4ee5\u4e0d\u586b\u771f\u5b9e\u59d3\u540d\uff09\uff0c\u70b9\u51fb\u542f\u52a8\u73af\u5883\uff0c\u9009\u62e9\u201c\u9ad8\u7ea7CPU\u201d\u53ca\u4ee5\u4e0a\u7684\u73af\u5883\u3002</p> <p>\u6309\u7167\u6307\u5f15\u8fdb\u884c\u4e00\u6b65\u6b65\u64cd\u4f5c\uff0c\u81ea\u5df1\u641e\u7740\u73a9\u7684\u8bdd\u53ea\u9700\u8981\u628a\u56fe\u7247\u4e0a\u4f20\u4e0a\u53bb\uff0c\u7136\u540e\u7b49\u5f85\u751f\u6210\u5373\u53ef\u3002</p> <p>\u4f46\u662f\uff0c\u6211\u4eec\u81ea\u7136\u8981\u8bb2\u70b9\u4e0d\u4e00\u6837\u7684\u4e1c\u897f\uff0c\u5982\u679c\u53ea\u662f\u5355\u7eaf\u4f7f\u7528\u600e\u4e48\u53ef\u4ee5\u5462\uff1f</p> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u8f93\u5165\u4e00\u5f20\u56fe\u7247\uff0c\u5b83\u53ea\u80fd\u8f93\u51fa\u540c\u6837\u7684\u56fe\u7247\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u53bb\u5b66\u4e60\u5982\u4f55\u66f4\u6539\u56fe\u7247\u7684\u98ce\u683c\u3002</p> <p>\u7ed9\u56fe\u7247\u6539\u98ce\u683c\u6709\u4e24\u79cd\u64cd\u4f5c\uff0c\u4e00\u79cd\u662f\u81ea\u5df1\u642d\u914d\uff0c\u4e00\u79cd\u662f\u6309\u7167\u73b0\u6709\u7684\u6a21\u677f\uff0c\u4e0b\u9762\u5c06\u5206\u522b\u8bb2\u89e3\u3002</p> <p>https://yun.wafuwafu.com/aliyun/Resources/novelai-naifu</p> <p>\u8fd9\u662f\u6709\u5927\u4f6c\u5206\u4eab\u7684\u5355\u8bcd\u96c6\uff0c\u4f60\u5e0c\u671b\u751f\u6210\u7684\u56fe\u7247\u662f\u4ec0\u4e48\u98ce\u683c\uff0c\u53ea\u9700\u8981\u6309\u7167\u76f8\u5bf9\u7684tag\u8f93\u5165\u8fdb\u53bb\u5c31\u597d\uff0c\u5c3d\u60c5\u53d1\u6325\u4f60\u4eec\u7684\u60f3\u8c61\u529b\uff0c\u505a\u51fa\u66f4\u591a\u7684\u5947\u884c\u79cd\u5427\uff01</p> <p>tips\uff1a\u4e00\u822c\u6765\u8bf4tag\u81ea\u5df1\u642d\u914d\u8981\u548c\u56fe\u751f\u56fe\u4e00\u8d77\u98df\u7528\uff0c\u5426\u5219AI\u65e0\u6cd5\u8bc6\u522b\u4f60\u60f3\u8981\u4ec0\u4e48\u7684\u65f6\u5019\u505a\u51fa\u7684\u56fe\u5c31\u4f1a\u6bd4\u8f83\u60ca\u8273\u4e86\u3002</p> <p>\u300a\u5143\u7d20\u6cd5\u5178\u300b</p> <p>\u591a\u4e48\u7f8e\u5999\u7684\u4e00\u672c\u4e66~\u7531SteelPlate\uff08\u7f51\u540d\uff09\u7f16\u7e82\uff0c\u65e8\u5728\u6536\u5f55\u6240\u6709\u8d34\u5427\u4f5c\u54c1\u7fa4\u5185\u7684\u4f18\u8d28tag\u548c\u5143\u7d20\u9b54\u6cd5\u3002\u540c\u65f6\u4ed6\u8fd8\u5236\u4f5c\u4e86\u300a\u4ece\u96f6\u5f00\u59cb\u7684\u9b54\u6cd5\u4e66\u2014\u2014Novel AI \u5165\u95e8\u5bfc\u8bba\u300b\u3002</p> <p>\u8fd9\u672c\u4e66\u6536\u5f55\u4e86\u76ee\u524d\u51e0\u4e4e\u6240\u6709\u98ce\u683c\u7684ai\u7ed8\u753b\u4f18\u8d28tag\uff0c\u7528\u8fd9\u4e9b\u201c\u9b54\u6cd5\u201d\u4f60\u53ef\u4ee5\u8f7b\u6613\u521b\u4f5c\u51fa\u975e\u5e38\u552f\u7f8e\u7684\u753b\u9762\uff0c\u4f46\u662f\u7531\u4e8e\u8fd9\u672c\u4e66\u7684\u7535\u5b50\u7248\u8fdd\u53cd\u4e86\u817e\u8baf\u516c\u7ea6\uff0c\u6240\u4ee5\u76ee\u524d\u7f16\u8005\u624b\u5934\u6ca1\u6709\u8fd9\u672c\u4e66\u7684\u7535\u5b50\u7248\uff0c\u9700\u8981\u7684\u7c73\u5a1c\u6851\u53ef\u4ee5\u79c1\u6233lhmd\u9886\u53d6\uff09\u3002</p> <p>\u4e2a\u4eba\u6bd4\u8f83\u559c\u6b22\u661f\u7a7a\u6cd5~</p>"},{"location":"%E6%9D%82%E9%A1%B9/11-25%E7%AD%BE%E5%88%B0%E6%8E%A8/#animegan","title":"animeGAN","text":"<p>\u66f4\u771f\u5b9e\u7684\u4f53\u9a8c\uff01</p> <p>\u4e00\u822c\u6765\u8bf4\uff0cNovelAi\u751f\u6210\u7684\u56fe\u7247\u548c\u672c\u4eba\u662f\u4e0d\u592a\u50cf\u7684\uff0c\u5982\u679c\u60f3\u8981\u66f4\u771f\u5b9e\u7684\u7167\u7247\u7ea7\u522b\u7684\u4f53\u9a8c\uff0c\u4e0d\u5982\u6765\u8bd5\u8bd5\u8fd9\u4e2a\u9879\u76ee\uff1aanimeGAN\u3002</p> <p>https://github.com/TachibanaYoshino/AnimeGAN\u8fd9\u662fgithub\u4e0a\u5f00\u6e90\u7684\u9879\u76ee\uff0c\u4e0d\u8fc7\u5927\u591a\u6570\u4eba\u4e0d\u4f1a\u53bb\u7814\u7a76\u5b83\u3002</p> <p>\u4ec5\u4ec5\u4f7f\u7528\u7684\u8bdd\u53ef\u4ee5\u8bd5\u8bd5https://animegan.js.org/</p> <p>\u8fd9\u662f\u4e00\u4e2a\u5728\u7ebf\u7684\u7f16\u8f91\u5668\uff0c\u53ef\u4ee5\u5728\u7ebf\u751f\u6210\u76f8\u5e94\u7684\u56fe\u7247\uff0c\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e2a\u9879\u76ee\u65f6\u4e0a\u4f20\u81ea\u5df1/\u4ed6\u4eba\u7684\u5927\u5934\u7167\uff0c\u5426\u5219\u6548\u679c\u4f1a\u975e\u5e38\u6a21\u7cca\u3002</p> <p>\u5982\u679c\u5bf9\u539f\u7406\u5f88\u611f\u5174\u8da3\u7684\u8bdd\uff0c\u6b22\u8fce\u5b66\u4e60\uff1a\u300a\u673a\u5668\u5b66\u4e60\u300b\u300a\u6df1\u5ea6\u5b66\u4e60\u300b\u300a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u300b\u300a\u8ba1\u7b97\u673a\u89c6\u89c9\u300b\u7b49\u76f8\u5173\u8bfe\u7a0b/\u9879\u76ee</p> <p>\u672c\u5468\u7b7e\u5230\u95ee\u9898\uff1a\u731c\u731c\u8fd9\u662f\u8c01\uff1f</p> <p>\u7b54\u6848\u662f\u9a6c\u8001\u5e08 </p> <p>\u2014\u2014(animeGAN )\u5236\u4f5c</p>"},{"location":"%E6%9D%82%E9%A1%B9/%E4%B8%93%E4%B8%9A%E5%88%86%E6%B5%81%E5%86%85%E8%AE%AD/","title":"Welcome to QC family","text":"<p>professional introduction for tech team from:lhmd</p>      Let's start!","tags":["\u9762\u8bd5","\u4e13\u4e1a\u5206\u6d41"]},{"location":"%E6%9D%82%E9%A1%B9/%E4%B8%93%E4%B8%9A%E5%88%86%E6%B5%81%E5%86%85%E8%AE%AD/#\u4e13\u4e1a\u9009\u62e9","title":"\u4e13\u4e1a\u9009\u62e9","text":"<p>\u4eca\u5e74\u8ba1\u79d1120\u4e2a\u540d\u989d\uff0c\u5de5\u8bbe\u8981\u54ed\u4e86 \u4fe1\u5b89\u4e5f\u6269\u62db\u4e86\uff0c\u4eba\u9ebb\u4e86</p> <ul> <li>\u8ba1\u79d1\u548c\u8f6f\u5de580%\u8bfe\u7a0b\u4e00\u6837\uff0c\u8f6f\u5de5\u6709\u4e00\u4e9bsb\u8bfe\u4e0d\u4fbf\u63cf\u8ff0\uff0c\u8ba1\u79d1have\u786c\u4ef6\u8bfe</li> <li>\u4fe1\u5b89\u57f9\u517b\u65b9\u6848\u5e74\u5e74\u5927\u6539\uff0c\u603b\u4f53\u6765\u8bf4\u5f88\u786c\u6838</li> <li>\u80fd\u53bb\u8ba1\u79d1\u5c31\u4e0d\u8981\u6765\u8f6f\u5de5</li> <li>\u8ba1\u79d1\u4e5f\u5728\u8bfe\u6539\uff0c\u4f46\u662f\u662f\u5411\u597d\u7684\u65b9\u5411\uff0c\u8f6f\u5de5\u5728\u6539\u4f46\u6539\u7684\u4e0d\u591a</li> </ul>","tags":["\u9762\u8bd5","\u4e13\u4e1a\u5206\u6d41"]},{"location":"%E6%9D%82%E9%A1%B9/%E4%B8%93%E4%B8%9A%E5%88%86%E6%B5%81%E5%86%85%E8%AE%AD/#\u4e2a\u4eba\u7b80\u5386","title":"\u4e2a\u4eba\u7b80\u5386","text":"<p>\u7b80\u7ea6</p> <ul> <li>\u57fa\u672c\u4fe1\u606f</li> <li>\u9ad8\u8003\u6210\u7ee9</li> <li>\u6559\u80b2\u80cc\u666f</li> <li>\u5956\u9879\u8bc1\u4e66</li> <li>\u81ea\u6211\u8bc4\u4ef7</li> <li>\u6821\u56ed\u7ecf\u5386</li> <li>\u4e0d\u8981\u5199\u81ea\u5df1\u7684\u7f3a\u70b9 </li> </ul>","tags":["\u9762\u8bd5","\u4e13\u4e1a\u5206\u6d41"]},{"location":"%E6%9D%82%E9%A1%B9/%E4%B8%93%E4%B8%9A%E5%88%86%E6%B5%81%E5%86%85%E8%AE%AD/#\u8f85\u52a9\u6750\u6599","title":"\u8f85\u52a9\u6750\u6599","text":"<p>\u8001\u5e08\u4f1a\u770b\u7684</p> <ul> <li>\u6709\u4ec0\u4e48\u5199\u4ec0\u4e48</li> <li>\u80fd\u5199\u591a\u5c11\u662f\u591a\u5c11</li> <li>\u548c\u7ade\u8d5b\u672c\u8eab\u6ca1\u4ec0\u4e48\u5173\u7cfb\uff0c\u53ea\u662f\u52a0\u5206\u624b\u6bb5<sub>~\u9664\u975e\u4f60\u548c\u592a\u5b97\u4e00\u6837\u5f3a</sub>~</li> </ul>","tags":["\u9762\u8bd5","\u4e13\u4e1a\u5206\u6d41"]},{"location":"%E6%9D%82%E9%A1%B9/%E4%B8%93%E4%B8%9A%E5%88%86%E6%B5%81%E5%86%85%E8%AE%AD/#\u81ea\u6211\u4ecb\u7ecd","title":"\u81ea\u6211\u4ecb\u7ecd","text":"<ul> <li>\u534a\u5206\u949f\u5230\u4e00\u5206\u534a\uff0c\u6709\u4e09\u4e2a\u6863\u4f4d</li> <li>\u8981\u6709\u81ea\u5df1\u6765\u8fd9\u4e2a\u4e13\u4e1a\u7684\u539f\u56e0</li> <li>\u6709\u8fc7\u76f8\u5173\u7ecf\u5386\u4e00\u5b9a\u8981\u8bf4</li> <li>\u7f16\u4e00\u4e2a\u60c5\u611f\u65b9\u9762\u7684\u7406\u7531()</li> <li>\u81ea\u6211\u4ecb\u7ecd\u4e2d\u63d0\u5230\u7684\u6bcf\u4e00\u4e2a\u8bcd\u4f60\u90fd\u5fc5\u987b\u5f88\u6e05\u695a\u4ed6\u5982\u679c\u7ee7\u7eed\u95ee\u4f60\u4f60\u80fd\u7b54\u4e0a\u6765</li> <li>\u4e0d\u8981\u592a\u88c5\u5b66\u4e60</li> <li>\u4e00\u5206\u949f\u5185\u4f20\u8fbe\u66f4\u591a\u8981\u70b9</li> <li>\u81ea\u6211\u4ecb\u7ecd\u65f6\u6700\u597d\u6bcf\u4e2a\u6559\u6388\u90fd\u770b\u8fc7\u53bb</li> <li>\u7f16\u7a0b\u80fd\u529b\u4e0d\u9519\uff0c\u6570\u5b66\u82f1\u8bed\u597d\uff0c\u672a\u6765\u8003\u8651</li> <li>\u57fa\u672c\u4e0d\u4f1a\u6709\u82f1\u6587\u81ea\u6211\u4ecb\u7ecd\uff0c\u9047\u5230\u7b97\u4f60\u5012\u9709</li> </ul>","tags":["\u9762\u8bd5","\u4e13\u4e1a\u5206\u6d41"]},{"location":"%E6%9D%82%E9%A1%B9/%E4%B8%93%E4%B8%9A%E5%88%86%E6%B5%81%E5%86%85%E8%AE%AD/#example","title":"example","text":"<ul> <li> <p>\u5c0a\u656c\u7684\u8001\u5e08\uff1a   \u6211\u662f\u5de5\u4fe12119\u73ed\u7684\u738b\u4f1f\u6770\uff0c\u6765\u81ea\u9655\u897f\u897f\u5b89\u3002   \u6211\u5c0f\u5b66\u65f6\u5019\u5b66\u4e60\u8fc7scratch\uff0c\u7b2c\u4e00\u6b21\u5bf9\u8f6f\u4ef6\u611f\u5174\u8da3\u662f\u5728\u521d\u4e2d\u770b\u4e09\u4f53\u65f6\u88ab\u51af\u8bfa\u4f9d\u66fc\u7528\u4eba\u5217\u8ba1\u7b97\u673a\u5236\u4f5c\u7684\u8f6f\u4ef6\u6765\u63a8\u7b97\u4e09\u4f53\u7684\u8fd0\u52a8\u89c4\u5f8b\u6240\u6253\u52a8\uff0c\u89c9\u5f97\u8ba1\u7b97\u673a\u771f\u7684\u5f88\u795e\u5947\uff0c\u4ece\u6b64\u5bf9\u8f6f\u4ef6\u7684\u5174\u8da3\u4fbf\u4e00\u53d1\u4e0d\u53ef\u6536\u62fe\uff0c\u539f\u6765\u751f\u6d3b\u4e2d\u4e30\u5bcc\u591a\u5f69\u7684\u8f6f\u4ef6\u7528\u8fd9\u4e9b\u5c0f\u5c0f\u7684\u4ee3\u7801\u5c31\u80fd\u6253\u51fa\u6765\uff0c\u5bf9\u8f6f\u4ef6\u65b9\u9762\u77e5\u8bc6\u7684\u70ed\u60c5\u4e00\u76f4\u5230\u9ad8\u4e2d\u6bd5\u4e1a\u4e5f\u6ca1\u6709\u8870\u51cf\u534a\u5206\u3002\u6240\u4ee5\u6211\u6bc5\u7136\u9009\u62e9\u4e86\u6d59\u6c5f\u5927\u5b66\uff0c\u6000\u7740\u6700\u521d\u7684\u68a6\u60f3\u6765\u5230\u4e86\u8fd9\u91cc\u3002   \u6211\u5728\u9ad8\u4e2d\u7684\u65f6\u5019\u66fe\u83b7\u5f97\u6570\u5b66\u3001\u82f1\u8bed\u7ade\u8d5b\u4e8c\u7b49\u5956\uff0c\u8fd8\u88ab\u63a8\u4e3e\u4e3a\u9655\u897f\u7701\u4e09\u597d\u5b66\u751f\uff0c\u6709\u826f\u597d\u7684\u6570\u7406\u57fa\u7840\uff0c\u5728\u81ea\u5b66C\u8bed\u8a00\u548c\u5927\u8ba1\u57fa\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u8ba9\u6211\u575a\u5b9a\u4e86\u6765\u5230\u8f6f\u4ef6\u5de5\u7a0b\u4e13\u4e1a\u7684\u4fe1\u5fc3\u3002\u6765\u5230\u5927\u5b66\u540e\uff0c\u6211\u52a0\u5165\u4e86\u8ba1\u7b97\u673a\u5b66\u9662\u5b66\u751f\u4f1a\u548c\u52e4\u521b\u7684\u89c6\u89c9\u4e0e\u6280\u672f\u63a8\u5e7f\u90e8\u7684\u6280\u672f\u7ec4\uff0c\u5728\u4e0e\u540c\u5b66\u548c\u5b66\u957f\u4eec\u7684\u4ea4\u6d41\u4e2d\u953b\u70bc\u4e86\u81ea\u5df1\u7684\u6c9f\u901a\u6280\u5de7\u548c\u903b\u8f91\u601d\u8003\u80fd\u529b\u3002   \u5728\u4ed4\u7ec6\u9605\u8bfb\u8f6f\u4ef6\u5de5\u7a0b\u7684\u57f9\u517b\u65b9\u6848\u548c\u81ea\u5b66\u300a\u8f6f\u4ef6\u5de5\u7a0b\u5bfc\u8bba\u300b\u540e\uff0c\u6211\u53d1\u73b0\u8f6f\u4ef6\u5de5\u7a0b\u786e\u5b9e\u662f\u4e00\u95e8\u9002\u5408\u6211\u5e76\u4e14\u53ef\u4ee5\u8ba9\u6211\u70ed\u7231\u5e76\u4e3a\u4e4b\u594b\u6597\u3001\u94bb\u7814\u7684\u4e13\u4e1a\uff0c\u56e0\u6b64\uff0c\u6211\u5e0c\u671b\u5728\u5927\u5b66\u7684\u56db\u5e74\u4e2d\u53ef\u4ee5\u5728\u8f6f\u4ef6\u5de5\u7a0b\u8fd9\u4e2a\u9886\u57df\u4e2d\u4e0d\u65ad\u94bb\u7814\u4e8e\u63d0\u5347\u81ea\u6211\uff0c\u5728\u672a\u6765\u7684\u67d0\u4e00\u5929\u5b9e\u73b0\u81ea\u5df1\u7684\u7406\u60f3\u3002</p> </li> <li> <p>\u5927\u5b66\u89c4\u5212\uff1a\u5728\u5927\u5b66\u6253\u597d\u57fa\u7840\uff0c\u4e3b\u52a8\u5b66\u4e60\uff0c\u62d3\u5bbd\u89c6\u91ce\uff0c\u5e76\u53c2\u52a0\u4e00\u4e9b\u8ba1\u7b97\u673a\u6bd4\u8d5b\uff0c\u5b9e\u4e60\u79ef\u7d2f\u7ecf\u9a8c\uff0c\u5e76\u4e89\u53d6\u51fa\u56fd\u4ea4\u6d41\u7684\u673a\u4f1a\u3002\u6bd5\u4e1a\u540e\u4fdd\u7814\u672c\u6821\u6216\u8003\u7814\u3002</p> </li> <li>\u751f\u6daf\u89c4\u5212\uff1a\u6211\u76ee\u6807\u5728\u79fb\u52a8\u5f00\u53d1\u548c\u524d\u7aef\u9886\u57df\u5de5\u4f5c\uff0c\u5e76\u81f4\u529b\u4e8e\u4e2a\u6027\u5316\u7684SaaS\u9886\u57df\uff0c\u540c\u65f6\u4e3a\u56fd\u5bb6\u201c\u5927\u6570\u636e\u80cc\u666f\u4e0b\u667a\u6167\u653f\u52a1\u7684\u5efa\u8bbe\u201d\u65b9\u5411\u5949\u732e\u81ea\u5df1\u7684\u4e00\u4efd\u529b\u3002</li> </ul>","tags":["\u9762\u8bd5","\u4e13\u4e1a\u5206\u6d41"]},{"location":"%E6%9D%82%E9%A1%B9/%E4%B8%93%E4%B8%9A%E5%88%86%E6%B5%81%E5%86%85%E8%AE%AD/#\u4e2a\u4eba\u9648\u8ff0","title":"\u4e2a\u4eba\u9648\u8ff0","text":"<ul> <li>\u5199\u51fa\u6765\u7684\u4e1c\u897f\u5c3d\u91cf\u6311\u5173\u952e\u8bcd\u6807\u91cd\u70b9</li> <li>\u4e2a\u4eba\u4f18\u52bf\uff0c\u9009\u62e9\u539f\u56e0\uff0c\u4e2a\u4eba\u5174\u8da3\uff0c\u672a\u6765\u89c4\u5212\uff08\u5177\u4f53\uff09</li> <li>\u5fd7\u613f\u8bf4\u660e\uff1a\u6ca1\u6709\u5fc5\u8981\u5168\u8ba1\u9662</li> </ul>","tags":["\u9762\u8bd5","\u4e13\u4e1a\u5206\u6d41"]},{"location":"%E6%9D%82%E9%A1%B9/%E4%B8%93%E4%B8%9A%E5%88%86%E6%B5%81%E5%86%85%E8%AE%AD/#\u4e00\u4e9btips","title":"\u4e00\u4e9btips","text":"<ul> <li>\u63d0\u524d\u60f3\u597d\u8bdd\u672f\uff0c\u4f8b\u5982\u6211\u5728\u56de\u7b54\u975e\u4e13\u4e1a\u6027\u95ee\u9898\u65f6\u8981\u91cd\u70b9\u7a81\u51fa\u6211\u7684\u54ea\u4e9b\u4f18\u52bf\u8ba9\u9762\u8bd5\u8001\u5e08\u6ce8\u610f\u5230\u6211</li> <li>\u60f3\u597d\u81ea\u5df1\u88ab\u95ee\u5230\u52a3\u52bf\u600e\u4e48\u56de\u7b54\uff0c\u4e0d\u77e5\u9053\u5c31\u8868\u8fbe\u81ea\u5df1\u5f88\u60f3\u5b66\u7684\u60f3\u6cd5</li> <li>\u653e\u4e00\u4e2a\u6a21\u677f\uff1a\u6211\u5728\u4e0d\u65ad\u5730\u5b66\u4e60\u4e2d\u4e5f\u53d1\u73b0\u4e86\u81ea\u5df1\u5728\u8ba1\u7b97\u673a\u8bed\u8a00\u7b97\u6cd5\u95ee\u9898\u4e0a\u7684\u4e0d\u8db3\uff0c\u548c\u7ade\u8d5b\u9009\u624b\u4eec\u7684\u5dee\u8ddd\u4e5f\u5728\u6fc0\u52b1\u7740\u6211\u4e0d\u65ad\u5730\u5b66\u4e60\u548c\u8bf7\u6559\uff0c\u6211\u540c\u65f6\u4e5f\u76f8\u4fe1\u53ea\u8981\u4fdd\u6301\u7740\u6211\u7684\u70ed\u7231\u548c\u52aa\u529b\uff0c\u4ee5\u53ca\u5229\u7528\u597d\u6d59\u5927\u7ed9\u6211\u7684\u8d44\u6e90\uff0c\u4f1a\u5728\u6162\u6162\u7684\u81ea\u6211\u78e8\u70bc\u4e2d\u8fbe\u5230\u81ea\u6211\u7684\u8d85\u8d8a\u5e76\u5411\u76ee\u6807\u4e00\u6b65\u4e00\u6b65\u7684\u8fc8\u8fdb\u3002</li> <li>\u5173\u4e8e\u672a\u6765\u89c4\u5212\uff0c\u53ef\u4ee5<sub>~\u7f16</sub><sub>\u4e00\u4e2a\u81ea\u5df1\u60f3\u63a2\u7d22\u7684\u9886\u57df\uff0c\u4f8b\u5982</sub><sub>\u8ba1\u7b97\u673a\u89c6\u89c9</sub><sub>\u3001</sub><sub>\u4eba\u5de5\u667a\u80fd</sub>~\u7b49\u7b49\uff0c\u5728\u81ea\u6211\u4ecb\u7ecd\u548c\u4e2a\u4eba\u9648\u8ff0\u4e2d\u5f15\u5bfc\u8001\u5e08\u5411\u8fd9\u65b9\u9762\u9760\u62e2\uff0c\u638c\u63e1\u8001\u5e08\u4f1a\u95ee\u4f60\u7684\u95ee\u9898\u3002</li> <li>\u5982\u4e0a\u4e00\u6761\uff0c\u5728\u81ea\u6211\u4ecb\u7ecd\u4e2d\u7559\u7a7a\u5b50</li> <li>\u591a\u770b\u4ee5\u524d\u7684\u9762\u8bd5\u9898</li> <li>Markdown\u4e2a\u4eba\u9648\u8ff0\uff1f</li> </ul>","tags":["\u9762\u8bd5","\u4e13\u4e1a\u5206\u6d41"]},{"location":"%E6%9D%82%E9%A1%B9/%E4%B8%93%E4%B8%9A%E5%88%86%E6%B5%81%E5%86%85%E8%AE%AD/#\u786c\u77e5\u8bc6\u50a8\u5907","title":"\u786c\u77e5\u8bc6\u50a8\u5907","text":"<ul> <li>\u5173\u4e8e\u7b80\u5386\u548c\u81ea\u6211\u4ecb\u7ecd\u4e2d\u53ef\u4ee5\u8bf4\u7684\u52e4\u521b\u7684\u524d\u7aef\u77e5\u8bc6\uff0c\u5927\u5bb6\u4e0d\u7528\u62c5\u5fc3\u8001\u5e08\u4f1a\u95ee\u5230</li> <li>\u7b97\u6cd5\u9898\u4e00\u822c\u4e0d\u4f1a\u95ee\u592a\u96be\uff0c\u6491\u6b7b\u95ee\u5230\u6392\u5e8f\uff0c\u540c\u7ec4\u6709\u4fe1\u7ade\u751f\u9664\u5916\uff0c\u6709\u65f6\u95f4\u7684\u8bdd\u53ef\u4ee5\u770b\u770b\u300a\u554a\u54c8\u7b97\u6cd5\u300b</li> <li>\u8ba1\u79d1--\u4eba\u5de5\u667a\u80fd\uff0c\u5927\u6570\u636e</li> <li>\u8f6f\u5de5--\u8f6f\u4ef6\u5de5\u7a0b\u5bfc\u8bba</li> <li>\u4fe1\u5b89--\u5bc6\u7801\u5b66</li> <li>\u5927\u8ba1\u57fa\u901f\u6210</li> <li>\u5982\u679c\u8fd8\u662f\u5c0f\u767d\u7684\u8bdd\uff0c\u767e\u5ea6\u767e\u79d1\u7528\u8d77\u6765</li> <li>\u7ec6\u8bfb\u57f9\u517b\u65b9\u6848\uff01\uff01\uff01</li> </ul>","tags":["\u9762\u8bd5","\u4e13\u4e1a\u5206\u6d41"]},{"location":"%E6%9D%82%E9%A1%B9/%E4%B8%93%E4%B8%9A%E5%88%86%E6%B5%81%E5%86%85%E8%AE%AD/#\u8981\u4e86\u89e3\u7684\u786c\u77e5\u8bc6\u4e3e\u6817","title":"\u8981\u4e86\u89e3\u7684\u786c\u77e5\u8bc6\u4e3e\u6817","text":"<ul> <li>\u6570\u636e\u7c7b\u578b</li> <li>\u4e8c\u8fdb\u5236\u79d1\u5b66\u8ba1\u6570\u6cd5</li> <li>\u53cd\u7801\u8865\u7801</li> <li>\u5c0f\u6570\u5b58\u50a8</li> <li>\u6570\u636e\u7ed3\u6784\u57fa\u672c\u77e5\u8bc6\uff08\u554a\u54c8\u7b97\u6cd5\u770b\u8fc7\u7684\u5c31\u79d2\u6740</li> <li>\u51af\u8bfa\u4f9d\u66fc</li> <li>C\u8bed\u8a00\u57fa\u7840</li> </ul>","tags":["\u9762\u8bd5","\u4e13\u4e1a\u5206\u6d41"]},{"location":"%E6%9D%82%E9%A1%B9/%E4%B8%93%E4%B8%9A%E5%88%86%E6%B5%81%E5%86%85%E8%AE%AD/#hb-and-tai_zongs-time","title":"hb and Tai_zong's time","text":"","tags":["\u9762\u8bd5","\u4e13\u4e1a\u5206\u6d41"]},{"location":"%E6%9D%82%E9%A1%B9/%E4%B8%93%E4%B8%9A%E5%88%86%E6%B5%81%E5%86%85%E8%AE%AD/#qa","title":"Q&amp;A","text":"","tags":["\u9762\u8bd5","\u4e13\u4e1a\u5206\u6d41"]},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/","title":"\u8bb0\u5f55\u4e86\u8be6\u7ec6\u9605\u8bfb\u8fc7\u7684\u8bba\u6587\uff0c\u6709\u4e9b\u662f\u5fc3\u5f97\uff0c\u6709\u4e9b\u662f\u8bba\u6587\u7684\u4e2d\u6587\u7248\u672c\u4f9b\u5feb\u901f\u67e5\u770b","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/GPT-Connect/","title":"GPT-Connect: Interaction between Text-Driven Human Motion Generator and 3D Scenes in a Training-free Manner","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/GPT-Connect/#abstract","title":"Abstract","text":"<p>\u8fd1\u6765\uff0c\u867d\u7136\u6587\u672c\u9a71\u52a8\u7684\u4eba\u4f53\u52a8\u4f5c\u751f\u6210\u6280\u672f\u518d\u6b21\u53d7\u5230\u5e7f\u6cdb\u5173\u6ce8\uff0c\u4f46\u5927\u591a\u6570\u73b0\u6709\u7684\u6587\u672c\u9a71\u52a8\u52a8\u4f5c\u751f\u6210\u5668\u901a\u5e38\u53ea\u8bbe\u8ba1\u7528\u4e8e\u751f\u6210\u7a7a\u767d\u80cc\u666f\u4e0b\u7684\u52a8\u4f5c\u5e8f\u5217\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u4eba\u7c7b\u5929\u751f\u5c31\u662f\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u800c\u4e0d\u662f\u5728\u7a7a\u767d\u80cc\u666f\u4e2d\u6267\u884c\u52a8\u4f5c\u7684\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u7684\u76ee\u6807\u662f\u8fdb\u884c\u573a\u666f\u611f\u77e5\u6587\u672c\u9a71\u52a8\u8fd0\u52a8\u751f\u6210\u3002\u7136\u800c\uff0c\u76f4\u89c2\u5730\u4ee5\u76d1\u7763\u65b9\u5f0f\u8bad\u7ec3\u4e00\u4e2a\u5355\u72ec\u7684\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u751f\u6210\u5668\u53ef\u80fd\u9700\u8981\u5728\u5927\u89c4\u6a21\u7684\u4e0d\u540c 3D \u573a\u666f\u4e2d\u6536\u96c6\u548c\u6ce8\u91ca\u5927\u91cf\u7684\u8fd0\u52a8\u6837\u672c\uff0c\u975e\u5e38\u9ebb\u70e6\u3002\u4e3a\u4e86\u76f8\u5bf9\u65b9\u4fbf\u5730\u5904\u7406\u8fd9\u9879\u4efb\u52a1\uff0c\u6211\u4eec\u5728\u672c\u6587\u4e2d\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u9896\u7684 GPT-connect \u6846\u67b6\u3002\u5728 GPT-connect \u4e2d\uff0c\u6211\u4eec\u5229\u7528 ChatGPT \u4ee5\u5b8c\u5168\u514d\u8d39\u8bad\u7ec3\u7684\u65b9\u5f0f\u5c06\u73b0\u6709\u7684\u8fd0\u52a8\u751f\u6210\u5668\u4e0e\u4e09\u7ef4\u573a\u666f\u8fde\u63a5\u8d77\u6765\uff0c\u4ece\u800c\u5229\u7528\u73b0\u6709\u7684\u7a7a\u767d\u80cc\u666f\u4eba\u4f53\u8fd0\u52a8\u751f\u6210\u5668\u76f4\u63a5\u751f\u6210\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u5e8f\u5217\u3002\u5927\u91cf\u5b9e\u9a8c\u8bc1\u660e\u4e86\u6211\u4eec\u63d0\u51fa\u7684\u6846\u67b6\u7684\u6709\u6548\u6027\u548c\u53ef\u63a8\u5e7f\u6027\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/GPT-Connect/#introduction","title":"Introduction","text":"<p>\u6587\u672c\u9a71\u52a8\u7684\u4eba\u4f53\u52a8\u4f5c\u751f\u6210\u65e8\u5728\u6839\u636e\u7ed9\u5b9a\u7684\u6587\u672c\u63d0\u793a\u751f\u6210\u4eba\u4f53\u52a8\u4f5c\u5e8f\u5217\u3002\u5b83\u4e0e\u6e38\u620f\u5f00\u53d1\u3001\u7535\u5f71\u5236\u4f5c\u548c\u865a\u62df\u73b0\u5b9e\u4f53\u9a8c\u7b49\u5404\u79cd\u5e94\u7528\u606f\u606f\u76f8\u5173\uff0c\u5e76\u53d7\u5230\u4e86\u5927\u91cf\u7814\u7a76\u7684\u5173\u6ce8 [32,35,42,43]\u3002\u5728\u73b0\u6709\u7684\u8fd0\u52a8\u751f\u6210\u65b9\u6cd5\u4e2d\uff0c\u5927\u591a\u6570\u65b9\u6cd5 [32, 42, 43] \u90fd\u4fa7\u91cd\u4e8e\u5728\u7a7a\u767d\u80cc\u666f\u4e2d\u751f\u6210\u4eba\u4f53\u8fd0\u52a8\u5e8f\u5217\u3002\u867d\u7136\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u4f46\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u4eba\u7c7b\u603b\u662f\u4e0e\u4e0d\u540c\u7684\u4e09\u7ef4\u573a\u666f\u53d1\u751f\u4e92\u52a8\uff0c\u800c\u4e0d\u662f\u53ea\u5728\u7a7a\u767d\u80cc\u666f\u4e2d\u505a\u52a8\u4f5c\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u53e6\u4e00\u4e2a\u91cd\u8981\u4e14\u503c\u5f97\u63a2\u7d22\u7684\u7814\u7a76\u95ee\u9898\u53ef\u80fd\u662f\uff1a\u5982\u4f55\u6839\u636e\u7ed9\u5b9a\u7684\u6587\u672c\u63d0\u793a\u751f\u6210\u4eba\u7c7b\u52a8\u4f5c\u5e8f\u5217\uff0c\u540c\u65f6\u8fd8\u80fd\u4e0e\u7ed9\u5b9a\u7684\u4e09\u7ef4\u573a\u666f\u8fdb\u884c\u9002\u5f53\u7684\u4ea4\u4e92\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5148\u524d\u7684\u7814\u7a76[35]\u63a2\u7d22\u4e86\u4e00\u79cd\u6f5c\u5728\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5373\u901a\u8fc7\u76d1\u7763\u8bad\u7ec3\u673a\u5236\u6765\u8bad\u7ec3\u7279\u5b9a\u573a\u666f\u611f\u77e5\u6587\u672c\u9a71\u52a8\u8fd0\u52a8\u751f\u6210\u5668\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728 [35] \u4e2d\uff0c\u9996\u5148\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u4e0d\u540c\u4e09\u7ef4\u573a\u666f\u4e2d\u771f\u5b9e\u8fd0\u52a8\u5e8f\u5217\u7684\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u7136\u540e\u8bbe\u8ba1\u8fd0\u52a8\u751f\u6210\u5668\u7684\u67b6\u6784\uff0c\u4f7f\u5176\u5728\u751f\u6210\u8fd0\u52a8\u5e8f\u5217\u7684\u8fc7\u7a0b\u4e2d\u80fd\u591f\u540c\u65f6\u4ee5\u4e09\u7ef4\u573a\u666f\u548c\u6587\u672c\u63d0\u793a\u4e3a\u6761\u4ef6\u3002\u7136\u540e\uff0c\u5bf9\u6240\u8bbe\u8ba1\u7684\u751f\u6210\u5668\u8fdb\u884c\u4f18\u5316\uff0c\u4ee5\u6700\u5c0f\u5316\u5728\u8bad\u7ec3\u6570\u636e\u96c6\u4e0a\u751f\u6210\u7684\u8fd0\u52a8\u5e8f\u5217\u4e0e\u5730\u9762\u5b9e\u51b5\u8fd0\u52a8\u5e8f\u5217\u4e4b\u95f4\u7684\u5dee\u5f02\u3002</p> <p>\u56fe 1\uff1a\u6211\u4eec\u7684 GPT-Connect \u6846\u67b6\u5728\u4e0d\u540c\u7684\u4e09\u7ef4\u573a\u666f\u4e2d\uff0c\u6839\u636e\u4e0d\u540c\u7684\u6587\u672c\u63d0\u793a\uff0c\u4ee5\u5b8c\u5168\u65e0\u9700\u8bad\u7ec3\u7684\u65b9\u5f0f\u751f\u6210\u7684\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u5e8f\u5217\u793a\u610f\u56fe\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u8fd0\u52a8\u5e8f\u5217\u4e2d\u7684\u4eba\u4f53\u7f51\u683c\u9010\u6e10\u7531\u6d45\u8272\u53d8\u4e3a\u6df1\u8272\u3002</p> <p>\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u79cd\u76d1\u7763\u8bad\u7ec3\u673a\u5236\u5728\u5904\u7406\u8fd9\u79cd\u573a\u666f\u611f\u77e5\u6587\u672c\u9a71\u52a8\u7684\u8fd0\u52a8\u751f\u6210\u4efb\u52a1\u65f6\u53ef\u80fd\u662f\u6b21\u4f18\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u57fa\u4e8e\u8fd9\u79cd\u673a\u5236\uff0c\u8981\u4f18\u5316\u9ad8\u8d28\u91cf\u3001\u53ef\u6cdb\u5316\u7684\u751f\u6210\u5668\uff0c\u4e00\u822c\u8981\u6c42\u8bad\u7ec3\u6570\u636e\u96c6\u65e2\u8981\u5927\u89c4\u6a21\uff0c\u53c8\u8981\u6709\u8db3\u591f\u7684\u591a\u6837\u6027\u3002\u7136\u800c\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u8fd9\u79cd\u573a\u666f\u611f\u77e5\u4efb\u52a1\uff0c\u6536\u96c6\u548c\u6ce8\u91ca\u8fd9\u6837\u7684\u6570\u636e\u96c6\u53ef\u80fd\u4f1a\u975e\u5e38\u9ebb\u70e6\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u8981\u505a\u5230\u65e2\u5927\u89c4\u6a21\u53c8\u6709\u8db3\u591f\u7684\u591a\u6837\u6027\uff0c\u8fd9\u6837\u7684\u6570\u636e\u96c6\u4e0d\u4ec5\u9700\u8981\u5305\u542b\u5927\u91cf\u4e0d\u540c\u6587\u672c\u63d0\u793a\u4e0b\u7684\u5730\u9762\u771f\u5b9e\u8fd0\u52a8\u5e8f\u5217\uff0c\u8fd8\u9700\u8981\u5c06\u8fd9\u4e9b\u8fd0\u52a8\u5e8f\u5217\u4e0e\u5927\u91cf\u4e0d\u540c\u7684\u4e09\u7ef4\u573a\u666f\u8fdb\u884c\u9002\u5f53\u7684\u4ea4\u4e92\u3002\u4f8b\u5982\uff0cPROX[10] \u4ec5\u6d89\u53ca 12 \u4e2a\u5ba4\u5185 3D \u573a\u666f\uff0c\u800c HUMANISE [35] \u4e5f\u662f\u4e00\u4e2a\u5ba4\u5185\u6570\u636e\u96c6\uff0c\u4e00\u822c\u53ea\u4e13\u6ce8\u4e8e\u6784\u5efa 4 \u4e2a\u52a8\u4f5c\u7684\u6587\u672c\u63d0\u793a\uff0c\u5305\u62ec\u8d70\u3001\u5750\u3001\u7ad9\u548c\u8eba\u3002\u8fd9\u4e9b\u6570\u636e\u96c6\u7684\u6837\u672c\u591a\u6837\u6027\u6709\u9650\uff0c\u4e25\u91cd\u9650\u5236\u4e86\u73b0\u6709\u57fa\u4e8e\u76d1\u7763\u8bad\u7ec3\u7684\u65b9\u6cd5 [35] \u5728\u4efb\u610f\u4e09\u7ef4\u573a\u666f\u4e2d\u6839\u636e\u4e0d\u540c\u6587\u672c\u63d0\u793a\u751f\u6210\u53ef\u4fe1\u4eba\u4f53\u52a8\u4f5c\u7684\u9002\u7528\u6027\u548c\u901a\u7528\u6027\u3002</p> <p>\u6709\u9274\u4e8e\u6b64\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u60f3\u77e5\u9053\uff0c\u4e0e\u5176\u4f9d\u9760\u76d1\u7763\u8bad\u7ec3\u673a\u5236\u6765\u5904\u7406\u8fd9\u9879\u4efb\u52a1\uff0c\u6211\u4eec\u662f\u5426\u80fd\u4ece\u4e00\u4e2a\u65b0\u7684\u89d2\u5ea6\u63d0\u51fa\u4e00\u79cd\u65b9\u6cd5\uff0c\u4ee5\u5b8c\u5168\u514d\u8bad\u7ec3\u7684\u65b9\u5f0f\u6765\u5904\u7406\u8fd9\u9879\u4efb\u52a1\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9996\u5148\u6ce8\u610f\u5230\uff0c\u6269\u6563\u6a21\u578b\u7684\u5e94\u7528\u5df2\u7ecf\u5728\u7a7a\u767d\u80cc\u666f\u6587\u672c\u9a71\u52a8\u7684\u4eba\u4f53\u52a8\u4f5c\u751f\u6210\u4e2d\u53d6\u5f97\u4e86\u53ef\u559c\u7684\u6210\u679c[32, 43]\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5728\u672c\u6587\u4e2d\u65e8\u5728\u7814\u7a76\u662f\u5426\u80fd\u627e\u5230\u4e00\u79cd\u8fde\u63a5\u5668\uff0c\u901a\u8fc7\u8fd9\u79cd\u8fde\u63a5\u5668\uff0c\u73b0\u6210\u7684\u7a7a\u767d\u80cc\u666f\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u53ef\u4ee5\u81ea\u52a8\u8fde\u63a5\u5230\u7ed9\u5b9a\u7684\u4e09\u7ef4\u573a\u666f\uff0c\u4ece\u800c\u65e0\u9700\u4efb\u4f55\u8bad\u7ec3\u5373\u53ef\u751f\u6210\u80fd\u4e0e\u7ed9\u5b9a\u4e09\u7ef4\u573a\u666f\u6b63\u786e\u4ea4\u4e92\u7684\u8fd0\u52a8\u5e8f\u5217\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5c31\u80fd\u4ee5\u76f8\u5f53\u4fbf\u6377\u7684\u65b9\u5f0f\u5904\u7406\u573a\u666f\u611f\u77e5\u6587\u672c\u9a71\u52a8\u7684\u4eba\u4f53\u8fd0\u52a8\u751f\u6210\u4efb\u52a1\uff0c\u65e2\u80fd\u7ed5\u8fc7\u9ebb\u70e6\u7684\u76d1\u7763\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u53c8\u80fd\u6ee1\u8db3\u6536\u96c6\u548c\u6ce8\u91ca\u5927\u89c4\u6a21\u3001\u591a\u6837\u5316\u6570\u636e\u96c6\u7684\u8981\u6c42\uff0c\u800c\u8fd9\u5bf9\u4e8e\u8fd9\u9879\u4efb\u52a1\u6765\u8bf4\u662f\u7279\u522b\u56f0\u96be\u7684\u3002</p> <p>\u5728\u63a2\u7d22\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u73b0\u6210\u7684 ChatGPT \u6a21\u578b[22]\u53ef\u80fd\u6709\u6f5c\u529b\u626e\u6f14\u8fd9\u4e2a\u8fde\u63a5\u5668\u7684\u89d2\u8272\u3002ChatGPT \u5728\u7ecf\u8fc7\u5927\u91cf\u8bad\u7ec3\u8bed\u6599\u7684\u9884\u8bad\u7ec3\u540e\uff0c\u88ab\u53d1\u73b0\u5305\u542b\u4e30\u5bcc\u7684\u5185\u9690\u5e38\u8bc6[25]\uff0c\u5e76\u56e0\u6b64\u5728\u8bb8\u591a\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4efb\u52a1\u4e2d\u6210\u529f\u5730\u626e\u6f14\u4e86\u5404\u79cd\u4e0d\u540c\u7684\u89d2\u8272[15,24]\u3002\u7136\u800c\uff0c\u5c3d\u7ba1 ChatGPT \u5728\u5404\u79cd\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4efb\u52a1\u4e2d\u53d6\u5f97\u4e86\u6210\u529f\uff0c\u4f46\u5982\u4f55\u5229\u7528 ChatGPT \u4f5c\u4e3a\u8fde\u63a5\u5668\uff0c\u5c06\u4e09\u7ef4\u573a\u666f\u548c\u73b0\u6210\u7684\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u6b63\u786e\u5730\u8fde\u63a5\u8d77\u6765\uff0c\u4ecd\u7136\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\uff1a(1) \u867d\u7136 ChatGPT \u7684\u8bad\u7ec3\u8bed\u6599\u4e00\u822c\u53ef\u4ee5\u5305\u542b\u8bb8\u591a\u63cf\u8ff0\u4e0d\u540c\u4e09\u7ef4\u573a\u666f\u7684\u81ea\u7136\u53e5\u5b50\uff0c\u4f46\u4e09\u7ef4\u573a\u666f\u672c\u8eab\u7684\u683c\u5f0f\u901a\u5e38\u5bf9 ChatGPT \u5e76\u4e0d \"\u53cb\u597d\"\u3002\u56e0\u6b64\uff0c\u5982\u4f55\u5411 ChatGPT \u89e3\u91ca\u4e00\u4e2a\u7ed9\u5b9a\u7684\u4e09\u7ef4\u573a\u666f\uff0c\u4ece\u800c\u6709\u6548\u5730\u5229\u7528 ChatGPT \u4e2d\u7684\u9690\u542b\u77e5\u8bc6\u6765\u7406\u89e3\u8fd9\u4e2a\u4e09\u7ef4\u573a\u666f\uff0c\u4ee5\u53ca\u5982\u4f55\u4e0e\u4e4b\u4ea4\u4e92\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u96be\u9898\u3002(2\uff09\u6b64\u5916\uff0c\u5373\u4f7f\u5047\u5b9a\u5df2\u7ecf\u914d\u5907\u4e86\u67d0\u4e9b\u8bbe\u8ba1\uff0c\u5e76\u4e14 ChatGPT \u5df2\u7ecf\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u7406\u89e3\u4e86\u4e09\u7ef4\u573a\u666f\uff0c\u4f46 ChatGPT \u5982\u4f55\u6210\u529f\u5730\u5c06\u5176\u7406\u89e3\u4f5c\u4e3a\u6307\u5bfc\u4f20\u9012\u7ed9\u73b0\u6210\u7684\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u4e5f\u662f\u4e00\u4e2a\u6311\u6218\u3002\u4e3a\u4e86\u5e94\u5bf9\u8fd9\u4e9b\u6311\u6218\uff0c\u4f7f ChatGPT \u6210\u4e3a\u573a\u666f\u751f\u6210\u5668\u7684\u8fde\u63a5\u8005\uff0c\u6211\u4eec\u5728\u672c\u6587\u4e2d\u63d0\u51fa\u4e86\u4e00\u4e2a\u540d\u4e3a GPT-Connect \u7684\u65b0\u6846\u67b6\uff0c\u5b83\u4ee3\u8868\u4e86\u4e00\u79cd\u5168\u65b0\u7684\u65b9\u6cd5\uff0c\u9996\u6b21\u53ef\u4ee5\u5b8c\u5168\u514d\u8bad\u7ec3\u7684\u65b9\u5f0f\u5b8c\u6210\u573a\u666f\u611f\u77e5\u6587\u672c\u9a71\u52a8\u7684\u8fd0\u52a8\u751f\u6210\u4efb\u52a1\u3002\u6211\u4eec\u5728\u56fe 1 \u4e2d\u5c55\u793a\u4e86\u6211\u4eec\u7684\u6846\u67b6\u5728\u4e0d\u540c\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u901a\u7528\u6027\u548c\u7075\u6d3b\u6027\uff0c\u5e76\u5728\u4e0b\u6587\u4e2d\u6982\u8ff0\u4e86\u6211\u4eec\u7684\u6846\u67b6\u3002</p> <p>\u603b\u7684\u6765\u8bf4\uff0c\u5728\u6211\u4eec\u7684\u6846\u67b6\u4e2d\uff0c\u8981\u4f7f ChatGPT \u6210\u4e3a\u4e09\u7ef4\u573a\u666f\u548c\u73b0\u6210\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u4e4b\u95f4\u7684\u8fde\u63a5\u5668\uff0c\u6211\u4eec\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u8981\u6c42\u3002(1\uff09\u9996\u5148\uff0c\u5728\u7ed9\u5b9a\u4e09\u7ef4\u573a\u666f\u548c\u6587\u672c\u63d0\u793a\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u6846\u67b6\u5e94\u786e\u4fdd ChatGPT \u80fd\u591f\u7406\u89e3\u4e09\u7ef4\u573a\u666f\uff0c\u5e76\u80fd\u76f8\u5e94\u5730\u8f93\u51fa \"\u6709\u7528\u4fe1\u606f\"\uff0c\u4ee5\u6307\u5bfc\u6839\u636e\u6587\u672c\u63d0\u793a\u751f\u6210\u7684\u52a8\u4f5c\u5e8f\u5217\u4e0e\u573a\u666f\u8fdb\u884c\u6b63\u786e\u7684\u4ea4\u4e92\u3002(2\uff09\u6b64\u5916\uff0c\u9274\u4e8e ChatGPT \u8f93\u51fa\u7684 \"\u6709\u7528\u4fe1\u606f\"\uff0c\u6211\u4eec\u7684\u6846\u67b6\u9700\u8981\u8fdb\u4e00\u6b65\u786e\u4fdd\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u80fd\u591f\u6b63\u786e\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u6765\u6307\u5bfc\u5176\u8fd0\u52a8\u751f\u6210\u8fc7\u7a0b\u3002\u4e0b\u9762\uff0c\u5728\u89e3\u91ca\u6211\u4eec\u7684\u6846\u67b6\u662f\u5982\u4f55\u6ee1\u8db3\u4e0a\u8ff0\u4e24\u4e2a\u8981\u6c42\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u4ecb\u7ecd\u4e0a\u8ff0 \"\u6709\u7528\u4fe1\u606f \"\u5728\u6211\u4eec\u6846\u67b6\u4e2d\u7684\u683c\u5f0f\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u6211\u4eec\u7684\u6846\u67b6\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\uff08\u90e8\u5206\uff09\u9aa8\u9abc\u5e8f\u5217\u4f5c\u4e3a ChatGPT \u4f20\u9012\u7ed9\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u7684 \"\u6709\u7528\u4fe1\u606f\"\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u9996\u5148\uff0c\u9aa8\u67b6\u5e8f\u5217\u53ef\u88ab\u89c6\u4e3a\u5305\u542b\u4eba\u7c7b\u5148\u9a8c\u7684\u5173\u8282\u5750\u6807\u7684\u7279\u6b8a\u7ec4\u5408\uff08\u8be6\u89c1\u7b2c 3.2 \u8282\uff09\uff0c\u5728\u9002\u5f53\u7684\u8bbe\u8ba1\u4e0b\uff0cChatGPT \u80fd\u591f\u8f93\u51fa\uff08\u90e8\u5206\uff09\u9aa8\u67b6\u5e8f\u5217\u3002\u540c\u65f6\uff0c\u9aa8\u67b6\u5e8f\u5217\u4f5c\u4e3a\u8fd0\u52a8\u5e8f\u5217\u7684\u7b80\u5316\u7248\u672c\uff0c\u53ef\u4ee5\u76f4\u89c2\u5730\u5c55\u793a\u5982\u4f55\u4e0e\u573a\u666f\u8fdb\u884c\u4ea4\u4e92\u7684\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u3002</p> <p>\u5728\u5b9a\u4e49\u4e86\u6211\u4eec\u6846\u67b6\u4e2d\u7684 \"\u6709\u7528\u4fe1\u606f \"\u4e4b\u540e\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u901a\u8fc7\u5c06\u6211\u4eec\u7684\u6846\u67b6\u4e0e\u4ee5\u4e0b\u4e24\u4e2a\u8bbe\u8ba1\uff08\u901a\u9053\uff09\u76f8\u7ed3\u5408\u6765\u6ee1\u8db3\u4e0a\u8ff0\u4e24\u4e2a\u8981\u6c42\u3002\u9996\u5148\uff0c\u4e3a\u4e86\u4f7f ChatGPT \u4e0e 3D \u573a\u666f\u6b63\u786e\u4ea4\u4e92\uff0c\u6211\u4eec\u5728\u6846\u67b6\u4e2d\u5f15\u5165\u4e86\u573a\u666f-GPT \u901a\u9053\u3002\u901a\u8fc7\u8fd9\u4e2a\u901a\u9053\uff0c\u7ed9\u5b9a\u7684\u4e09\u7ef4\u573a\u666f\u53ef\u4ee5\u9996\u5148\u88ab\u89e3\u91ca\u4e3a ChatGPT \u53ef\u4ee5\u7406\u89e3\u7684\u683c\u5f0f\u3002\u5728\u6b64\u57fa\u7840\u4e0a\uff08\u8fde\u540c\u7ed9\u51fa\u7684\u6587\u672c\u63d0\u793a\uff09\uff0c\u5728\u9002\u5f53\u7684\u8bbe\u8ba1\u4e0b\uff0cChatGPT \u53ef\u4ee5\u4ee5\uff08\u90e8\u5206\uff09\u9aa8\u67b6\u5e8f\u5217\u683c\u5f0f\u8f93\u51fa \"\u6709\u7528\u4fe1\u606f\"\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8f93\u51fa\u7684 \"\u6709\u7528\u4fe1\u606f \"\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u6839\u636e\u7ed9\u5b9a\u7684\u6587\u672c\u63d0\u793a\u751f\u6210\u8fd0\u52a8\u5e8f\u5217\u7684\u5408\u7406\u65b9\u5f0f\uff0c\u540c\u65f6\u8fd8\u80fd\u4e0e\u4e09\u7ef4\u573a\u666f\u8fdb\u884c\u9002\u5f53\u7684\u4ea4\u4e92\u3002\u5176\u6b21\uff0c\u6211\u4eec\u8fdb\u4e00\u6b65\u5c06\u6211\u4eec\u7684\u6846\u67b6\u4e0e GPT \u751f\u6210\u5668\u901a\u9053\u76f8\u7ed3\u5408\u3002\u5728\u8fd9\u4e2a\u901a\u9053\u4e2d\uff0c\u6211\u4eec\u5229\u7528 ChatGPT \u8f93\u51fa\u7684 \"\u6709\u7528\u4fe1\u606f \"\u6765\u6307\u5bfc\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u7684\u751f\u6210\u8fc7\u7a0b\uff0c\u4ece\u800c\u751f\u6210\u53ef\u4fe1\u7684\u3001\u573a\u666f\u611f\u77e5\u7684\u8fd0\u52a8\u5e8f\u5217\u3002\u603b\u4e4b\uff0c\u5728\u6211\u4eec\u7684\u6846\u67b6\u4e2d\uff0c\u6709\u4e86\u4e0a\u8ff0\u4e24\u4e2a\u901a\u9053\uff0c\u6211\u4eec\u5c31\u80fd\u8ba9 ChatGPT \u6b63\u786e\u6267\u884c\u573a\u666f-\u6a21\u578b-\u8fde\u63a5\uff0c\u4ece\u800c\u65e0\u9700\u4efb\u4f55\u8bad\u7ec3\u5373\u53ef\u5904\u7406\u573a\u666f\u611f\u77e5\u6587\u672c\u9a71\u52a8\u7684\u4eba\u4f53\u8fd0\u52a8\u751f\u6210\u4efb\u52a1\u3002</p> <p>\u6211\u4eec\u7684\u5de5\u4f5c\u8d21\u732e\u6982\u8ff0\u5982\u4e0b\u30021) \u6211\u4eec\u63d0\u51fa\u4e86 GPT-Connect\uff0c\u8fd9\u662f\u4e00\u4e2a\u65b0\u9896\u7684\u6846\u67b6\uff0c\u901a\u8fc7\u5229\u7528 ChatGPT \u4f5c\u4e3a\u4e09\u7ef4\u573a\u666f\u548c\u73b0\u6210\u7684\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u4e4b\u95f4\u7684\u4e2d\u95f4\u8fde\u63a5\u5668\uff0c\u9996\u6b21\u80fd\u591f\u4ee5\u5b8c\u5168\u514d\u8d39\u8bad\u7ec3\u7684\u65b9\u5f0f\u5904\u7406\u573a\u666f\u611f\u77e5\u6587\u672c\u9a71\u52a8\u7684\u4eba\u4f53\u8fd0\u52a8\u751f\u6210\u4efb\u52a1\u30022) \u6211\u4eec\u5728 GPT-Connect \u4e2d\u5f15\u5165\u4e86\u591a\u9879\u8bbe\u8ba1\uff0c\u4ee5\u5e2e\u52a9 ChatGPT \u66f4\u597d\u5730\u626e\u6f14\u573a\u666f\u751f\u6210\u5668\u548c\u8fde\u63a5\u5668\u7684\u89d2\u8272\u30023) GPT-Connect \u4e0d\u9700\u8981\u4efb\u4f55\u8fdb\u4e00\u6b65\u7684\u57f9\u8bad\uff0c\u5c31\u80fd\u5728\u8bc4\u4f30\u7684\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u8fbe\u5230\u6700\u5148\u8fdb\u7684\u6027\u80fd\uff0c\u5e76\u80fd\u7075\u6d3b\u5730\u5e94\u7528\u4e8e\u4e0d\u540c\u7684\u4e09\u7ef4\u573a\u666f\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/GPT-Connect/#related-work","title":"Related Work","text":"<p>\u6587\u672c\u9a71\u52a8\u7684\u4eba\u4f53\u52a8\u4f5c\u751f\u6210\u3002\u8003\u8651\u5230\u5176\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u6587\u672c\u9a71\u52a8\u7684\u4eba\u4f53\u52a8\u4f5c\u751f\u6210\u5728\u8fc7\u53bb\u51e0\u5e74\u91cc\u53d7\u5230\u4e86\u5927\u91cf\u7814\u7a76\u7684\u5173\u6ce8[2, 4, 5, 8, 9, 12, 14, 16, 18, 23, 27, 30-32, 35-37, 40-44]\u3002\u5728\u5e94\u7528\u6269\u6563\u6a21\u578b\u4e4b\u524d\uff0c\u4e0d\u540c\u7684\u65b9\u6cd5\u63d0\u51fa\u4e86\u4e0d\u540c\u7684\u89e3\u51b3\u65b9\u6cd5\u3002\u5176\u4e2d\uff0cT2M [8] \u548c TEMOS [23] \u63d0\u51fa\u5229\u7528\u53d8\u5f02\u81ea\u52a8\u7f16\u7801\u5668\u7ed3\u6784\u6765\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u800c MotionCLIP [31] \u5219\u63d0\u51fa\u4ece CLIP [26] \u7684\u5171\u4eab\u6587\u672c\u56fe\u50cf\u6f5c\u7a7a\u95f4\u4e2d\u5bfb\u6c42\u5e2e\u52a9\u3002\u540e\u6765\uff0cTevet \u7b49\u4eba[32] \u63d0\u51fa\u901a\u8fc7\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u6765\u5904\u7406\u8fd9\u4e00\u4efb\u52a1\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6269\u6563\u6a21\u578b\u7684\u5e94\u7528\u9010\u6e10\u88ab\u8ba4\u4e3a\u662f\u5904\u7406\u8fd9\u4e00\u4efb\u52a1\u7684\u6709\u6548\u65b9\u6cd5\u3002\u6700\u8fd1\uff0cChen \u7b49\u4eba[4]\u63a2\u7d22\u5728\u6f5c\u7a7a\u95f4\u4e2d\u5904\u7406\u8fd9\u9879\u4efb\u52a1\uff0c\u5e76\u63d0\u51fa\u4e86\u57fa\u4e8e\u8fd0\u52a8\u6f5c\u7a7a\u95f4\u7684\u6269\u6563\u6a21\u578b\uff0c\u800c\u5176\u4ed6\u4e00\u4e9b\u5de5\u4f5c\u5219\u4f7f\u4eba\u7c7b\u80fd\u591f\u5c06\u6587\u672c\u4e4b\u5916\u7684\u5176\u4ed6\u7c7b\u578b\u7684\u6761\u4ef6\u4f20\u9012\u7ed9\u6269\u6563\u6a21\u578b\uff0c\u5982\u97f3\u9891[5]\u548c\u8f68\u8ff9[19, 40]\u3002\u9664\u4e86\u5728\u8fd9\u9879\u4efb\u52a1\u4e2d\u5229\u7528\u6269\u6563\u6a21\u578b\u4e4b\u5916\uff0c\u6700\u8fd1\u6709\u51e0\u9879\u7814\u7a76[14, 44]\u4e5f\u63d0\u51fa\u4e86\u901a\u8fc7\u8bad\u7ec3\u4e00\u4e2a\u5927\u578b\u8f6c\u6362\u5668\u6a21\u578b\u6765\u89e3\u51b3\u8fd9\u9879\u4efb\u52a1\u3002 \u4e0a\u8ff0\u7814\u7a76\u4e00\u822c\u4fa7\u91cd\u4e8e\u5728\u7a7a\u767d\u80cc\u666f\u4e0b\u66f4\u7cbe\u786e\u5730\u751f\u6210\u8fd0\u52a8\u5e8f\u5217\uff0c\u4f5c\u4e3a\u4e0a\u8ff0\u7814\u7a76\u7684\u5ef6\u4f38\uff0c\u6700\u8fd1\uff0cWang \u7b49\u4eba[35] \u91cd\u70b9\u7814\u7a76\u4e86\u5982\u4f55\u751f\u6210\u4e0e\u7ed9\u5b9a\u6587\u672c\u63d0\u793a\u76f8\u5bf9\u5e94\u7684\u8fd0\u52a8\u5e8f\u5217\uff0c\u540c\u65f6\u53c8\u80fd\u4e0e\u4e09\u7ef4\u573a\u666f\u8fdb\u884c\u9002\u5f53\u7684\u4ea4\u4e92\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4ed6\u4eec\u5efa\u8bae\u901a\u8fc7\u76d1\u7763\u8bad\u7ec3\u673a\u5236\u6765\u8bad\u7ec3\u7279\u5b9a\u7684\u8fd0\u52a8\u751f\u6210\u6a21\u578b\uff0c\u4ece\u800c\u89e3\u51b3\u8fd9\u79cd\u573a\u666f\u611f\u77e5\u6587\u672c\u9a71\u52a8\u7684\u8fd0\u52a8\u751f\u6210\u4efb\u52a1\u3002\u9664\u4e86\u5229\u7528\u76d1\u7763\u8bad\u7ec3\u673a\u5236\u7684\u6587\u732e[35]\u4e4b\u5916\uff0c\u8fd8\u6709\u6587\u732e[17,39]\u63a2\u8ba8\u4e86\u901a\u8fc7\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\u573a\u666f\u611f\u77e5\u6587\u672c\u9a71\u52a8\u8fd0\u52a8\u751f\u6210\u5668\u3002 \u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u9996\u6b21\u63d0\u51fa\u4e86\u4e00\u79cd\u6846\u67b6\uff0c\u53ef\u4ee5\u4ee5\u5b8c\u5168\u514d\u8bad\u7ec3\u7684\u65b9\u5f0f\u6267\u884c\u573a\u666f\u611f\u77e5\u6587\u672c\u9a71\u52a8\u8fd0\u52a8\u751f\u6210\u4efb\u52a1\u3002\u4e0e\u4e0a\u8ff0\u73b0\u6709\u7684\u8fd0\u52a8\u751f\u6210\u65b9\u6cd5\u4e0d\u540c\uff0c\u5728\u6211\u4eec\u7684\u6846\u67b6\u4e2d\uff0c\u65e2\u4e0d\u9700\u8981\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u6807\u6ce8\u8fd0\u52a8\u6837\u672c\uff0c\u4e5f\u4e0d\u9700\u8981\u4eba\u7c7b\u4e3a\u6269\u6563\u6a21\u578b\u63d0\u4f9b\u6307\u5bfc\u3002\u76f8\u53cd\uff0c\u901a\u8fc7\u9002\u5f53\u7684\u8bbe\u8ba1\uff0c\u6211\u4eec\u7684 GPT-Connect \u6846\u67b6\u53ef\u4ee5\u4f7f\u73b0\u6210\u7684\u7a7a\u767d\u80cc\u666f\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u5728 ChatGPT \u7684\u5e2e\u52a9\u4e0b\u81ea\u52a8\u8fde\u63a5\u5230\u4e09\u7ef4\u573a\u666f\u3002</p> <p>\u5927\u578b\u8bed\u8a00\u6a21\u578b\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5927\u578b\u8bed\u8a00\u6a21\u578b\u90fd\u662f\u5728\u5927\u578b\u8bed\u6599\u5e93\u4e2d\u9884\u5148\u8bad\u7ec3\u8fc7\u7684\uff0c\u6700\u8fd1\uff0c\u4eba\u4eec\u53d1\u73b0\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08\u5982 ChatGPT [22]\uff09\u5305\u542b\u4e30\u5bcc\u7684\u5e38\u8bc6\u6027\u77e5\u8bc6 [25]\u3002\u6709\u9274\u4e8e\u6b64\uff0c\u5728\u4e0d\u540c\u7684\u4efb\u52a1\u4e2d\uff0c\u5927\u578b\u8bed\u8a00\u6a21\u578b\u88ab\u7528\u6765\u626e\u6f14\u5404\u79cd\u4e0d\u540c\u7684\u89d2\u8272[15, 20, 24, 25, 28]\uff0c\u5982\u8bed\u8a00\u7ffb\u8bd1\u89d2\u8272[15]\u548c\u95ee\u9898\u89e3\u7b54\u89d2\u8272[28]\u3002\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u65b0\u9896\u7684\u6846\u67b6\uff0c\u901a\u8fc7\u9002\u5f53\u7684\u8bbe\u8ba1\uff0c\u8ba9\u73b0\u6210\u7684 ChatGPT \u6a21\u578b\u5728\u4e09\u7ef4\u573a\u666f\u548c\u73b0\u6210\u7684\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u4e4b\u95f4\u626e\u6f14\u8fde\u63a5\u5668\u7684\u89d2\u8272\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/GPT-Connect/#proposed-method","title":"Proposed Method","text":"<p>\u7ed9\u5b9a\u4e09\u7ef4\u573a\u666f\u548c\u6587\u672c\u63d0\u793a\uff0c\u573a\u666f\u611f\u77e5\u6587\u672c\u9a71\u52a8\u8fd0\u52a8\u751f\u6210\u7684\u76ee\u6807\u662f\u6839\u636e\u6587\u672c\u63d0\u793a\u548c\u4e09\u7ef4\u573a\u666f\u751f\u6210\u4eba\u4f53\u8fd0\u52a8\u5e8f\u5217\u3002\u8981\u5b8c\u6210\u8fd9\u9879\u4efb\u52a1\uff0c\u6b63\u5982\u4e4b\u524d\u7684\u5de5\u4f5c[35]\u6240\u793a\uff0c\u4e00\u79cd\u76f4\u89c2\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u76d1\u7763\u8bad\u7ec3\u673a\u5236\u6765\u8bad\u7ec3\u7279\u5b9a\u7684\u573a\u666f\u611f\u77e5\u6587\u672c\u9a71\u52a8\u8fd0\u52a8\u751f\u6210\u5668\u3002\u7136\u800c\uff0c\u8981\u4e13\u95e8\u4f18\u5316\u9ad8\u8d28\u91cf\u548c\u53ef\u901a\u7528\u7684\u751f\u6210\u5668\uff0c\u8fd9\u79cd\u673a\u5236\u901a\u5e38\u9700\u8981\u6839\u636e\u4e0d\u540c 3D \u573a\u666f\u4e2d\u7684\u5404\u79cd\u6587\u672c\u63d0\u793a\u6536\u96c6\u548c\u6807\u6ce8\u5927\u91cf\u4e0d\u540c\u7684\u8fd0\u52a8\u6837\u672c\uff0c\u8fd9\u53ef\u80fd\u975e\u5e38\u56f0\u96be\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u7ed5\u8fc7\u5728\u4e0d\u540c\u4e09\u7ef4\u573a\u666f\u4e2d\u6536\u96c6\u548c\u6ce8\u91ca\u8fd0\u52a8\u6837\u672c\u7684\u8270\u96be\u8981\u6c42\uff0c\u8f6c\u800c\u4ee5\u5b8c\u5168\u514d\u8d39\u8bad\u7ec3\u7684\u65b9\u5f0f\u66f4\u65b9\u4fbf\u5730\u5904\u7406\u8fd9\u9879\u4efb\u52a1\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u65b0\u6846\u67b6 GPT-Connect\uff0c\u5176\u4e2d\u6211\u4eec\u5efa\u8bae\u5229\u7528 ChatGPT \u4f5c\u4e3a\u4e09\u7ef4\u573a\u666f\u548c\u73b0\u6210\u6269\u6563\u6a21\u578b\u4e4b\u95f4\u7684\u4e2d\u95f4\u8fde\u63a5\u5668\uff0c\u5f15\u5bfc\u73b0\u6210\u7684\u7a7a\u767d\u80cc\u666f\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u751f\u6210\u80fd\u4e0e\u7ed9\u5b9a\u4e09\u7ef4\u573a\u666f\u6b63\u786e\u4ea4\u4e92\u7684\u8fd0\u52a8\u5e8f\u5217\uff08\u5373\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u5e8f\u5217\uff09\u3002</p> <p>\u6211\u4eec\u7684\u6846\u67b6\u9996\u5148\u5305\u542b\u4e00\u4e2a\u573a\u666f-GPT \u901a\u9053\u3002\u5728\u8fd9\u4e2a\u901a\u9053\u4e2d\uff0c\u9996\u5148\u5f15\u5bfc ChatGPT \u7406\u89e3\u4e09\u7ef4\u573a\u666f S3D\u3002\u5176\u4e2d\uff0cs\u2208 RN\u00d7J\u00d73 \u8868\u793a\u5b8c\u6574\u7684\u9aa8\u67b6\u5e8f\u5217\uff0c\u5176\u957f\u5ea6\u4e0e\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u751f\u6210\u7684\u8fd0\u52a8\u5e8f\u5217\u957f\u5ea6\u76f8\u540c\uff1bN \u6307 s \u7684\u5e27\u6570\uff0cJ \u6307 s \u7684\u6bcf\u4e00\u5e27\u4e2d\u8eab\u4f53\u5173\u8282\u7684\u6570\u91cf\u3002\u6b64\u5916\uff0cms \u2208 {0, 1}N\u00d7J \u8868\u793a\u4e0e s \u76f8\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6fc0\u6d3b\u63a9\u7801\uff0c\u5176\u4e2d\u53ea\u6709\u5f53 ChatGPT \u901a\u8fc7 Scene-GPT \u901a\u9053\u8f93\u51fa s \u7684\u7b2c n \u5e27\u4e2d\u7b2c j \u4e2a\u5173\u8282\u7684\u5750\u6807\u4f5c\u4e3a \"\u6709\u7528\u4fe1\u606f \"\u7684\u4e00\u90e8\u5206\u65f6\uff0cms \u7684 [n, j] -th \u5143\u7d20\u624d\u4e3a 1\u3002\u76f4\u89c2\u5730\u8bf4\uff0cs[ms] \u5927\u81f4\u610f\u5473\u7740\u6839\u636e\u6587\u672c\u63d0\u793a t \u751f\u6210\u7684\u8fd0\u52a8\u5e8f\u5217\u53ef\u4ee5\u4e0e S3D \u6b63\u5e38\u4ea4\u4e92\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u5728\u5f97\u51fa s[ms] \u4e4b\u540e\uff0c\u6211\u4eec\u7684\u6846\u67b6\u4f1a\u5c06 s[ms] \u4f20\u9012\u5230 GPT \u751f\u6210\u5668\u901a\u9053\u3002\u901a\u8fc7\u8fd9\u4e2a\u901a\u9053\uff0cs[ms] \u4f5c\u4e3a ChatGPT \u7684\u9884\u6d4b\u7ed3\u679c\uff0c\u53ef\u80fd\u4f1a\u6bd4\u8f83\u7c97\u7cd9\u548c\u4e0d\u51c6\u786e\uff0c\u4f46\u53ef\u4ee5\u9002\u5f53\u5730\u5229\u7528\u5b83\u6765\u6307\u5bfc\u73b0\u6210\u7684\u7a7a\u767d\u80cc\u666f\u8fd0\u52a8\u6269\u6563\u6a21\u578b\uff0c\u751f\u6210\u573a\u666f\u611f\u77e5\u7684\u8fd0\u52a8\u5e8f\u5217\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u9996\u5148\u4ecb\u7ecd GPT \u751f\u6210\u5668\u901a\u9053\uff0c\u7136\u540e\u4ecb\u7ecd\u573a\u666f GPT \u901a\u9053\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/GPT-Connect/#gpt-generator-channel","title":"GPT-Generator Channel","text":"<p>\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u7b80\u8981\u56de\u987e\u4e86\uff08\u8fd0\u52a8\uff09\u6269\u6563\u6a21\u578b\u3002\u7136\u540e\u4ecb\u7ecd\u6211\u4eec\u6846\u67b6\u4e2d\u7684 GPT-Generator \u901a\u9053\u3002</p> <p>\u91cd\u65b0\u5ba1\u89c6\u6269\u6563\u6a21\u578b\u3002\u4e0e\u975e\u5e73\u8861\u70ed\u52a8\u529b\u6a21\u578b[29]\u7c7b\u4f3c\uff0c\u6269\u6563\u6a21\u578b\u4e00\u822c\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u5373\u5411\u566a\u58f0\u8fed\u4ee3\u6269\u6563\u5e72\u51c0\u6837\u672c\u7684\u6b63\u5411\u8fc7\u7a0b\u548c\u5411\u5e72\u51c0\u6837\u672c\u9010\u6e10\u53bb\u566a\u7684\u53cd\u5411\u8fc7\u7a0b\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u8fd9\u4e24\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5728\u63a8\u7406\u8fc7\u7a0b\u4e2d\u6211\u4eec\u901a\u5e38\u53ea\u9700\u8981\u6267\u884c\u53cd\u5411\u8fc7\u7a0b\u3002\u7531\u4e8e\u6269\u6563\u6a21\u578b\u7684\u6709\u6548\u6027\uff0c\u5b83\u5df2\u88ab\u5e94\u7528\u4e8e\u591a\u4e2a\u89c6\u89c9\u9886\u57df [7,11,21]\uff0c\u5982\u56fe\u50cf\u751f\u6210 [11] \u548c\u56fe\u50cf\u7f16\u8f91 [21]\u3002\u5176\u4e2d\uff0cTevet \u7b49\u4eba[32] \u5c06\u6269\u6563\u6a21\u578b\u5e94\u7528\u4e8e\u6587\u672c\u9a71\u52a8\u8fd0\u52a8\u751f\u6210\u4efb\u52a1\uff0c\u5728\u7a7a\u767d\u80cc\u666f\u4e2d\u751f\u6210\u8fd0\u52a8\u5e8f\u5217\uff0c\u5e76\u63d0\u51fa\u4e86\u76ee\u524d\u6d41\u884c\u7684\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u5c06\u91cd\u70b9\u91cd\u6e29\u8fd9\u4e00\u8fd0\u52a8\u6269\u6563\u6a21\u578b\uff0c\u7531\u4e8e\u5176\u6709\u6548\u6027\uff0c\u5b83\u662f\u6211\u4eec\u6846\u67b6\u4e2d\u4f7f\u7528\u7684\u73b0\u6210\u6a21\u578b\u3002</p> <p>\u8be5\u9891\u9053\u7684\u5168\u8c8c\u3002\u5728 GPT-Generator \u9891\u9053\u4e2d\uff0c\u9664\u4e86\u6587\u672c\u63d0\u793a t \u548c\u73b0\u6210\u7684\u6587\u672c\u9a71\u52a8\u8fd0\u52a8\u6269\u6563\u6a21\u578b fM DM \u5916\uff0c\u6211\u4eec\u8fd8\u5f97\u5230 s[ms] \u4f5c\u4e3a\u9891\u9053\u7684\u8f93\u5165\u3002\u56de\u60f3\u4e00\u4e0b\uff0cs[ms] \u6e90\u81ea SceneGPT \u901a\u9053\uff0c\u5b83\u5927\u81f4\u610f\u5473\u7740\u6839\u636e t \u751f\u6210\u7684\u8fd0\u52a8\u5e8f\u5217\u4e0e S3D \u6b63\u5e38\u4ea4\u4e92\u7684\u65b9\u5f0f\u3002\u8003\u8651\u5230\u8fd9\u4e9b\u8f93\u5165\uff0c\u9664\u4e86\u4ee5 t \u4e3a\u57fa\u7840\u7684\u53cd\u5411\u8fc7\u7a0b\u5916\uff0c\u5728\u8fd9\u4e2a\u901a\u9053\u4e2d\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u5c06\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u7684\u53cd\u5411\u8fc7\u7a0b\u9644\u52a0\u5230 s[ms] \u4e0a\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u80fd\u5f15\u5bfc\u53cd\u5411\u6269\u6563\u8fc7\u7a0b\u6700\u7ec8\u751f\u6210\u7684\u8fd0\u52a8\u5e8f\u5217 x0 \u4e0e\u4e09\u7ef4\u573a\u666f S3D \u6b63\u5e38\u4ea4\u4e92\u3002</p> <p>\u4e3a\u4e86\u5b9e\u73b0\u4e0a\u8ff0\u76ee\u6807\uff0c\u5bf9\u4e8e\u53cd\u5411\u6269\u6563\u8fc7\u7a0b\u4f5c\u4e3a\u4e00\u4e2a\u4ece xK \u9010\u6b65\u53bb\u566a\u5230 x0 \u7684\u6b65\u8fdb\u8fc7\u7a0b\uff0c\u5728\u6bcf\u4e00\u6b65 k \u4ece xk \u53bb\u566a\u5230 xk-1\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u53ef\u4ee5\u662f\u76f4\u63a5\u5c06\u5f53\u524d\u6b65\u8fdb\u7684\u8f93\u51fa xk-1 \u5bf9\u9f50\u5230 s[ms]\u3002\u8fd9\u6837\uff0c\u901a\u8fc7\u6b65\u4e0e\u6b65\u95f4\u7684\u5bf9\u9f50\uff0c\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u6700\u540e\u4e00\u6b65\uff08\u5373 k = 1 \u65f6\uff09\u7684\u8f93\u51fa x0 \u80fd\u5f88\u597d\u5730\u8d34\u5408 s[ms]\u3002\u7136\u800c\uff0c\u5b9e\u9645\u4e0a\uff0c\u8fd9\u79cd\u5929\u771f\u7684\u65b9\u6cd5\u53ef\u80fd\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u4e24\u4e2a\u95ee\u9898\uff0c\u4ece\u800c\u5bfc\u81f4\u6b21\u4f18\u7684\u7ed3\u679c\uff1a(1) \u5728\u53cd\u5411\u6269\u6563\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u4e00\u6b65 k \u7684\u8f93\u51fa xk-1 \u90fd\u5c5e\u4e8e\u4e00\u4e2a\u72ec\u7279\u7684\u5206\u5e03 Xk-1\uff0c\u5176\u566a\u58f0\u6c34\u5e73\u4e0e\u5176\u4ed6\u6b65\u9aa4\u4e0d\u540c\u3002\u56e0\u6b64\uff0c\u9664\u975e\u5728\u6700\u540e\u4e00\u6b65 k = 1 \u65f6\uff0c\u5426\u5219 Xk-1\u0338 = X0\u3002\u7136\u800c\uff0c\u4e0e\u6b64\u540c\u65f6\uff0cs[ms] \u53ef\u88ab\u89c6\u4e3a\u90e8\u5206 \"\u5e72\u51c0 \"\u7684\u9aa8\u67b6\u5e8f\u5217\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u867d\u7136 s[ms] \u7684\u5206\u5e03\u53ef\u4ee5\u88ab\u89c6\u4e3a\u63a5\u8fd1 X0\uff0c\u4f46\u5e76\u4e0d\u662f\u8bf4 s[ms] \u4e5f\u5fc5\u987b\u63a5\u8fd1\u5176\u4ed6 Xk-1\u0338 = X0\u3002\u8003\u8651\u5230\u4e0a\u8ff0\u60c5\u51b5\uff0c\u9664\u975e\u5728\u6700\u540e\u4e00\u6b65\uff08\u5373 k = 1 \u4e14 xk-1\u2208 Xk-1 = X0\uff09\uff0c\u5426\u5219\u76f4\u63a5\u5f3a\u884c\u5c06 xk-1 \u5bf9\u51c6 s[ms]\uff0c\u4f1a\u4f7f xk-1 \u504f\u79bb\u5176\u6240\u9700\u7684 Xk-1 \u5206\u5e03\u7a7a\u95f4\uff0c\u4ece\u800c\u4e2d\u65ad\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u7684\u53cd\u5411\u8fc7\u7a0b\u3002(2) \u6b64\u5916\uff0c\u8bf7\u6ce8\u610f\uff0cs[ms] \u662f\u7531 ChatGPT \u7684\u8f93\u51fa\u5f97\u51fa\u7684\uff0c\u56e0\u6b64\u53ef\u80fd\u5305\u542b\u8bef\u5dee\u3002\u56e0\u6b64\uff0c\u5728\u53cd\u5411\u8fc7\u7a0b\u7684\u6bcf\u4e00\u6b65\u4e2d\u90fd\u8fc7\u5ea6\u5730\u5c06 xk-1 \u5bf9\u9f50 s[ms]\uff0c\u4f1a\u4f7f\u6700\u7ec8\u7684\u8fd0\u52a8\u5e8f\u5217 x0 \u53d7\u5230 s[ms] \u4e2d\u7684\u4e0d\u51c6\u786e\u6027\u7684\u5f71\u54cd\uff0c\u8fd9\u4e5f\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u4e24\u4e2a\u95ee\u9898\uff0c\u5728\u6211\u4eec\u7684 GPT-Generator \u9891\u9053\u4e2d\uff0c\u6211\u4eec\u91c7\u7528\u4e86\u4e00\u79cd\u65b0\u7b56\u7565\uff0c\u5c06\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u7684\u53cd\u5411\u8fc7\u7a0b\u4f5c\u4e3a s[ms] \u7684\u6761\u4ef6\uff0c\u4e0e\u4e0a\u8ff0\u5728\u6574\u4e2a\u53cd\u5411\u8fc7\u7a0b\u4e2d\u76f4\u63a5\u5c06 xk-1 \u5bf9\u51c6 s[ms] \u7684\u5929\u771f\u65b9\u5f0f\u76f8\u6bd4\uff0c\u6211\u4eec\u505a\u4e86\u4ee5\u4e0b\u4e24\u5904\u4fee\u6539\uff1a</p> <p>\u4fee\u6539 1\uff1a\u5c06 \u02c6xk 0 \u6539\u4e3a\u5bf9\u9f50 s[ms]\u3002\u9996\u5148\uff0c\u5728\u6211\u4eec\u7684 GPTGenerator \u9891\u9053\u4e2d\uff0c\u5728\u53cd\u5411\u8fc7\u7a0b\u7684\u7b2c k \u6b65\uff0c\u6211\u4eec\u4e0d\u662f\u76f4\u63a5\u5c06 xk-1 \u4f5c\u4e3a\u5f53\u524d\u6b65\u9aa4\u7684\u8f93\u51fa\u5411 s[ms] \u5bf9\u9f50\uff0c\u800c\u662f\u5148\u5c06\u02c6xk 0 \u4f5c\u4e3a\u5f53\u524d\u6b65\u9aa4\u7684\u4e2d\u95f4\u503c\u5411 s[ms] \u5bf9\u9f50\uff0c\u7136\u540e\u4ece\u5bf9\u9f50\u540e\u7684\u02c6xk 0 \u7248\u672c\uff08\u5373 exk 0\uff09\u63a8\u5bfc\u51fa xk-1\u3002\u56de\u60f3\u4e00\u4e0b\uff0c\u02c6xk 0 \u4ee3\u8868\u4e86\u6269\u6563\u6a21\u578b\u5bf9\u5176\u53cd\u5411\u8fc7\u7a0b\u4e2d\u7b2c k \u6b65\u6700\u7ec8\u6e05\u6d01\u8fd0\u52a8\u7684\u9884\u6d4b\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u901a\u8fc7\u5728\u9006\u5411\u8fc7\u7a0b\u7684\u4e0d\u540c\u6b65\u9aa4\u4e2d\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\u914d\u51c6\uff0cs[ms]\u4e0e\u5206\u5e03\u7a7a\u95f4 X0 \u4e2d\u7684\u5143\u7d20\u4e4b\u95f4\u7684\u914d\u51c6\u5c31\u4f1a\u4e00\u81f4\uff0c\u9006\u5411\u6269\u6563\u8fc7\u7a0b\u5c31\u4e0d\u4f1a\u51fa\u73b0\u5c06 xk-1 \u62c9\u79bb Xk-1 \u7684\u95ee\u9898\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u4e3a\u4e86\u5b9e\u73b0 s[ms] \u548c \u02c6xk0 \u4e4b\u95f4\u7684\u5bf9\u9f50\uff0c\u6211\u4eec\u9996\u5148\u5c06\u5b83\u4eec\u4e4b\u95f4\u7684\u5dee\u8ddd\u5b9a\u4e49\u4e3a\uff1a</p> <p></p> <p>\u5176\u4e2d\uff0cfm-s(-) \u8868\u793a\u5c06\u8fd0\u52a8\u5e8f\u5217\u6295\u5f71\u5230\u76f8\u5e94\u9aa8\u67b6\u5e8f\u5217\u7684\u51fd\u6570\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u8fd9\u79cd\u8fd0\u52a8\u5230\u9aa8\u67b6\u7684\u6295\u5f71\u4e4b\u540e\uff0cfm-s(\u02c6xk 0 ) \u7684\u5f62\u72b6\u4e0e s \u76f8\u540c\uff0c\u5373 fm-s(\u02c6xk 0 )\u2208RN \u00d7J\u00d73\u3002\u56e0\u6b64\uff0c\u5982\u516c\u5f0f 3 \u6240\u793a\uff0c\u5229\u7528 fm-s(-)\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 s[ms] \u4e0e \u02c6xk 0 \u4e4b\u95f4\u7684\u5dee\u8ddd\u76f4\u63a5\u8868\u8ff0\u4e3a s[ms] \u4e0e fm_s(\u02c6xk 0 )[ms] \u4e4b\u95f4\u7684 L2 \u8ddd\u79bb\u3002\u5f97\u51fa s[ms] \u4e0e \u02c6xk 0 \u4e4b\u95f4\u7684\u5dee\u8ddd\u540e\uff0c\u5728\u53cd\u5411\u8fc7\u7a0b\u7684\u6b65\u9aa4 k \u4e2d\uff0c\u6211\u4eec\u5c06 \u02c6xk 0 \u5bf9\u9f50 s[ms]\uff0c\u5e76\u83b7\u5f97 exk 0 \u4f5c\u4e3a \u02c6xk 0 \u7684\u5bf9\u9f50\u7248\u672c\uff1a</p> <p></p> <p>\u5176\u4e2d\uff0c\u03bb \u662f\u7cfb\u6570\u8d85\u53c2\u6570\uff0c\u2207xk gk\uff08s[ms], \u02c6xk 0 \uff09\u662f\u6839\u636e gk\uff08s[ms], \u02c6xk 0 \uff09\u8ba1\u7b97\u51fa\u7684\u68af\u5ea6\u3002xk-1 \u6700\u540e\u53ef\u4ee5\u4ece exk 0 \u4e2d\u83b7\u5f97\uff0c\u5373</p> <p></p> <p>\u8bf7\u6ce8\u610f\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u4ece exk 0 \u5bfc\u51fa xk-1\uff0c\u76f4\u89c2\u5730\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 exk 0 \u95f4\u63a5\u5730\u5c06\u6709\u7528\u4fe1\u606f s[ms]\u4f5c\u4e3a xk-1 \u7684\u6761\u4ef6\uff0c\u540c\u65f6\u53c8\u4e0d\u4f1a\u5c06 xk-1 \u62c9\u79bb Xk-1\u3002\u6211\u4eec\u8fd8\u901a\u8fc7\u7ecf\u9a8c\u8bc1\u660e\u4e86\u8fd9\u79cd\u95f4\u63a5\u5bf9\u9f50\u8bbe\u8ba1\u7684\u6709\u6548\u6027\uff08\u5982\u8868 3 \u6240\u793a\uff09\u3002</p> <p>\u4fee\u6539 2\uff1a\u5728\u67d0\u4e9b\u6b65\u9aa4\u4e2d\u9009\u62e9\u6027\u5730\u505c\u7528\u5bf9\u9f50\u8fc7\u7a0b\u3002\u6b64\u5916\uff0c\u6211\u4eec\u6ce8\u610f\u5230\uff0cs[ms] \u867d\u7136\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u5148\u9a8c\u77e5\u8bc6\uff0c\u6709\u52a9\u4e8e\u4e0e 3D \u573a\u666f\u8fdb\u884c\u6b63\u786e\u7684\u4ea4\u4e92\uff0c\u4f46\u5b83\u53ea\u662f ChatGPT \u7684\u9884\u6d4b\uff0c\u800c\u4e0d\u662f \"\u5730\u9762\u5b9e\u51b5 \"\u7684\u6307\u5bfc\u3002\u56e0\u6b64\uff0cs[ms] \u6709\u65f6\u96be\u514d\u4f1a\u6709\u4e0d\u81ea\u7136\u6216\u4e0d\u51c6\u786e\u7684\u5730\u65b9\uff0c\u7279\u522b\u662f\u8003\u8651\u5230 ChatGPT \u672c\u8eab\u5e76\u4e0d\u662f\u4e13\u4e1a\u7684\u4eba\u7c7b\u9aa8\u9abc\u4e13\u5bb6\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u5728\u6211\u4eec\u7684 GPT-Generator \u9891\u9053\u4e2d\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u751f\u6210\u7684\u8fd0\u52a8\u5e8f\u5217\u903c\u771f\uff0c\u5728\u4ee5 s[ms] \u4e3a\u6307\u5bfc\u7684\u540c\u65f6\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u7528 s[ms] \u8fc7\u5ea6\u6307\u5bfc\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u7684\u8fd0\u52a8\u751f\u6210\u8fc7\u7a0b\u3002\u76f8\u53cd\uff0c\u5728\u67d0\u4e9b\u53cd\u5411\u6269\u6563\u6b65\u9aa4\u4e2d\uff0c\u5f53\u516c\u5f0f 3 \u4e2d\u5b9a\u4e49\u7684 s[ms] \u4e0e\u5f53\u524d\u6269\u6563\u6b65\u9aa4\u4e4b\u95f4\u7684\u5dee\u8ddd gk \u5df2\u7ecf\u5f88\u5c0f\u65f6\uff0c\u6211\u4eec\u5c31\u4f1a\u5173\u95ed\u5bf9\u9f50\u8fc7\u7a0b\uff0c\u800c\u5b8c\u5168\u4f9d\u9760\u73b0\u6210\u7684\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u4e2d\u4e30\u5bcc\u7684\u8fd0\u52a8\u76f8\u5173\u77e5\u8bc6\u6765\u8fdb\u884c\u8fd0\u52a8\u751f\u6210\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u4fee\u6539\uff0c\u6bcf\u6b21\u6211\u4eec\u4f7f\u7528\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u751f\u6210\u8fd0\u52a8\u5e8f\u5217\u65f6\uff0c\u5728\u4ece XK \u5230 XK-1 \u7684\u7b2c\u4e00\u4e2a\u53cd\u5411\u6b65\u9aa4\u53bb\u566a\u65f6\uff0c\u6211\u4eec\u9996\u5148\u5b58\u50a8\u7531\u516c\u5f0f 3 \u6d4b\u5f97\u7684\u76f8\u5e94\u95f4\u9699 gK\u3002\u4e4b\u540e\uff0c\u5728\u63a5\u4e0b\u6765\u7684\u6269\u6563\u6b65\u9aa4\u7684\u6bcf\u4e00\u6b65 k \u4e2d\uff0c\u53ea\u6709\u5f53 gk / gK &gt; \u03be\uff08\u5176\u4e2d \u03be \u662f\u4e00\u4e2a\u8d85\u53c2\u6570\uff09\u65f6\uff0c\u6211\u4eec\u624d\u4f1a\u4ece exk 0 \u5f00\u59cb\u6d4b\u91cf xk-1\uff0c\u4f5c\u4e3a \u02c6xk 0 \u7684\u5bf9\u9f50\u7248\u672c\uff0c\u5426\u5219\uff0c\u6211\u4eec\u4f1a\u76f4\u63a5\u4ece \u02c6xk 0 \u5f00\u59cb\u6d4b\u91cf xk-1\u3002</p> <p>\u8fdb\u884c\u4e0a\u8ff0\u4e24\u5904\u4fee\u6539\u540e\uff0c\u4ee5 t \u4ee5\u5916\u7684 s[ms]\u4e3a\u6761\u4ef6\uff0c\u6211\u4eec\u7684 GPT-Generator \u4fe1\u9053\u4e2d\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u7684\u53cd\u5411\u8fc7\u7a0b\u6700\u7ec8\u88ab\u8868\u8ff0\u4e3a</p> <p></p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u6a21\u578b\u6269\u6563\u6a21\u578b\u6700\u7ec8\u751f\u6210\u7684\u8fd0\u52a8\u5e8f\u5217 x0 \u7684\u957f\u5ea6\u662f\u56fa\u5b9a\u7684 N\u3002 \u7136\u800c\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5728\u4e0d\u540c\u7684\u4e09\u7ef4\u573a\u666f\u4e2d\uff0c\u6839\u636e\u4e0d\u540c\u7684\u6587\u672c\u63d0\u793a\uff0cs[ms] \u6240\u6697\u793a\u7684\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u5e8f\u5217\u53ef\u80fd\u5177\u6709\u4e0d\u540c\u7684\u957f\u5ea6\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5efa\u8bae\u4e0d\u76f4\u63a5\u4f7f\u7528 x0 \u4f5c\u4e3a\u5f53\u524d GPT-Generator \u901a\u9053\u7684\u8f93\u51fa\uff0c\u800c\u662f\u4f7f\u7528\u7531 s[ms] \u6b63\u786e\u5f15\u5bfc\u7684 x0 \u7684\u5b50\u5e8f\u5217\u4f5c\u4e3a\u901a\u9053\u7684\u6700\u7ec8\u8f93\u51fa\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5c06\u4e8c\u8fdb\u5236\u63a9\u7801 ms \u4e2d\u5305\u542b\u6fc0\u6d3b\u7684\u8eab\u4f53\u5173\u8282\u7684\u7b2c\u4e00\u5e27\u548c\u6700\u540e\u4e00\u5e27\u5206\u522b\u8bb0\u4e3a nstart \u548c nend\uff0c\u5f97\u51fa x0 \u540e\uff0c\u6211\u4eec\u518d\u4ece x0 \u4e2d\u526a\u8f91\u51fa xc 0\uff0c\u5373 xc 0 = x0[nstart : nend]\uff0c\u5e76\u5c06 xc 0 \u4f5c\u4e3a\u8be5\u901a\u9053\u7684\u6700\u7ec8\u8f93\u51fa\u3002\u8fd9\u6837\uff0c\u501f\u52a9 s[ms]\uff0c\u6211\u4eec\u5c31\u80fd\u6700\u7ec8\u5229\u7528\u73b0\u6210\u7684\u7a7a\u767d\u80cc\u666f\u8fd0\u52a8\u6269\u6563\u6a21\u578b\uff0c\u751f\u6210\u80fd\u4e0e\u4e09\u7ef4\u573a\u666f S3D \u6b63\u5e38\u4ea4\u4e92\u7684\u8fd0\u52a8\u5e8f\u5217\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/GPT-Connect/#scene-gpt-channel","title":"Scene-GPT Channel","text":"<p>\u5728\u6211\u4eec\u6846\u67b6\u7684\u573a\u666f-GPT \u9891\u9053\u4e2d\uff0c\u7531\u4e8e ChatGPT \u65e0\u6cd5\u7406\u89e3 S3D \u672c\u8eab\uff0c\u4f5c\u4e3a\u51c6\u5907\u5de5\u4f5c\uff0c\u6211\u4eec\u9996\u5148\u7528 ChatGPT \u53ef\u4ee5\u7406\u89e3\u7684\u683c\u5f0f\u89e3\u91ca\uff08\u63cf\u8ff0\uff09S3D\u3002\u7136\u540e\uff0c\u7ed9\u5b9a\u6587\u672c\u63d0\u793a t \u548c\u5bf9 S3D \u7684\u53ef\u7406\u89e3\u63cf\u8ff0\uff0c\u6211\u4eec\u6307\u793a ChatGPT \u8f93\u51fa \"\u6709\u7528\u4fe1\u606f \"s[ms]\uff0c\u7136\u540e\u5c06\u5176\u7528\u4e8e\u6211\u4eec\u6846\u67b6\u7684 GPT \u751f\u6210\u5668\u901a\u9053\uff0c\u4ee5\u6307\u5bfc 3.1 \u8282\u4e2d\u8ba8\u8bba\u7684\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u3002</p> <p>\u4e86\u89e3 S3D . \u5728\u573a\u666f-GPT \u9891\u9053\u5f00\u59cb\u65f6\uff0c\u6211\u4eec\u9996\u5148\u8981\u627e\u5230\u4e00\u79cd\u4e0d\u4ec5\u80fd\u63cf\u8ff0 S3D\uff0c\u800c\u4e14\u80fd\u8ba9 ChatGPT \u7406\u89e3\u7684\u683c\u5f0f\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u867d\u7136\u53ef\u4ee5\u4ece\u4e0d\u540c\u89d2\u5ea6\u63cf\u8ff0 S3D\uff0c\u4f46\u5f71\u54cd\u5176\u4e0e\u8fd0\u52a8\u5e8f\u5217\u4ea4\u4e92\u7684\u5173\u952e\u56e0\u7d20\u662f\u5176\u5e03\u5c40\uff0c\u800c\u4e0d\u662f\u573a\u666f\u4e2d\u7269\u4f53\u7684\u7eb9\u7406\u6216\u5916\u89c2\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u8fdb\u4e00\u6b65\u89c2\u5bdf\u5230\uff0cChatGPT \u5728\u9884\u8bad\u7ec3\u9636\u6bb5\u770b\u5230\u4e86\u5927\u91cf\u63cf\u8ff0\u4e0d\u540c\u7f51\u9875\u5e03\u5c40\u7684\u7f16\u7a0b\u8bed\u8a00\u811a\u672c\uff08\u5982 CSS \u811a\u672c\uff09\uff0c\u800c\u5728\u8fd9\u4e9b\u811a\u672c\u4e2d\uff0c\u7f51\u9875\u4e0a\u4e0d\u540c\u5bf9\u8c61\u7684\u5e03\u5c40\u901a\u5e38\u88ab\u63cf\u8ff0\u4e3a\u5176\u7c7b\u578b\u548c\u8fb9\u754c\u6846\u7684\u96c6\u5408[6]\u3002\u53d7\u6b64\u542f\u53d1\uff0c\u5728\u672c\u9891\u9053\u4e2d\uff0c\u6211\u4eec\u5efa\u8bae\u5c06 S3D \u5230 ChatGPT \u4e5f\u89e3\u91ca\u4e3a\u8be5\u4e09\u7ef4\u573a\u666f\u4e2d\u5bf9\u8c61\u7c7b\u578b\u548c\u8fb9\u754c\u6846\u7684\u96c6\u5408\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u8981\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u89e3\u91ca S3D\uff0c\u6211\u4eec\u9700\u8981\u6267\u884c\u4ee5\u4e0b 3 \u4e2a\u6b65\u9aa4\u3002(1) \u8bc6\u522b\u3002\u7ed9\u5b9a S3D\uff0c\u8981\u7ed1\u5b9a\u5176\u4e2d\u7684\u6bcf\u4e2a\u7269\u4f53\uff0c\u5982\u679c\u6211\u4eec\u6ca1\u6709\u4efb\u4f55\u5173\u4e8e S3D \u7684\u5148\u9a8c\u77e5\u8bc6\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u77e5\u9053\u8fd9\u4e2a\u573a\u666f\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u7269\u4f53\u7c7b\u578b\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u9996\u5148\u8981\u6e32\u67d3\u4e09\u7ef4\u573a\u666f\uff0c\u5e76\u4ece M \u4e2a\u4e0d\u540c\u7684\u76f8\u673a\u4f4d\u7f6e\u62cd\u6444 M \u5f20\u7167\u7247\u3002\u7136\u540e\uff0c\u6211\u4eec\u5229\u7528\u73b0\u6210\u7684\u5f00\u653e\u4e16\u754c\u8bc6\u522b\u6a21\u578b Recognize Anything (RAM) [45]\uff0c\u6765\u8bc6\u522b\u6bcf\u5f20\u7167\u7247\u4e2d\u5b58\u5728\u7684\u7269\u4f53\u5217\u8868\u3002\u6700\u540e\uff0c\u4ece M \u5f20\u7167\u7247\u4e2d\u5f97\u51fa\u7684 M \u4e2a\u7269\u4f53\u5217\u8868\u7684\u7edf\u4e00\u96c6\u5408\u88ab\u89c6\u4e3a S3D \u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u6240\u6709\u6f5c\u5728\u7269\u4f53\uff08\u6709\u5173\u8be5\u8bc6\u522b\u6b65\u9aa4\u7684\u66f4\u591a\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605\u8865\u5145\u8d44\u6599\uff09\u3002(2) \u8fb9\u6846\u63a8\u5bfc\u3002\u4e00\u65e6\u6211\u4eec\u4ece\u6b65\u9aa4\uff081\uff09\u6216\u5148\u9a8c\u77e5\u8bc6\u4e2d\u83b7\u5f97\u4e86 S3D \u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u7269\u4f53\u5217\u8868\uff0c\u6211\u4eec\u5c31\u4f1a\u5c06 S3D \u548c\u8be5\u5217\u8868\u4f20\u9012\u7ed9\u73b0\u6210\u7684\u4e09\u7ef4\u5f00\u653e\u8bcd\u6c47\u5b9e\u4f8b\u5206\u5272\u5668\uff0c\u4ee5\u63a8\u5bfc\u51fa S3D \u4e2d\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u7c7b\u578b\u548c\u4e09\u7ef4\u8fb9\u754c\u6846\u3002\u5728\u6211\u4eec\u7684\u6846\u67b6\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 OpenIns3D [13] \u4f5c\u4e3a\u8fd9\u79cd\u73b0\u6210\u7684\u5206\u5272\u5668\u3002(3) \u4f20\u9012\u7ed9 ChatGPT\u3002\u6700\u540e\uff0c\u5982\u56fe 2 \u6240\u793a\uff0c\u5728\u83b7\u53d6\u4e86 S3D \u4e2d\u5bf9\u8c61\u7684\u7c7b\u578b\u548c\u4e09\u7ef4\u8fb9\u754c\u6846\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06 S3D \u7684\u5e03\u5c40\u4ee5 ChatGPT \u53ef\u4ee5\u7406\u89e3\u7684\u683c\u5f0f\u89e3\u91ca\u7ed9 ChatGPT\uff0c\u5176\u4e2d\u6211\u4eec\u6700\u7ec8\u7528\u4e00\u4e2a\u5305\u542b\u516d\u4e2a\u503c\uff08\u5373 x_min\u3001x_max\u3001y_min\u3001y_max\u3001z_min \u548c z_max\uff09\u7684\u5217\u8868\u6765\u8868\u793a\u573a\u666f\u4e2d\u6bcf\u4e2a\u5bf9\u8c61\u7684\u4e09\u7ef4\u8fb9\u754c\u6846\u3002</p> <p>\u56fe 2\uff1a\u4ee5 ChatGPT \u53ef\u7406\u89e3\u7684\u683c\u5f0f\u53bb\u63cf\u8ff0 S3D \u7684\u8fc7\u7a0b\u793a\u610f\u56fe\u3002</p> <p>\u4ece ChatGPT \u5f97\u51fa s[ms]\u3002\u57fa\u4e8e\u6587\u672c\u63d0\u793a t \u548c S3D \u7684\u63cf\u8ff0\uff0c\u6211\u4eec\u7528 ChatGPT \u53ef\u4ee5\u7406\u89e3\u7684\u65b9\u5f0f\u63cf\u8ff0\u4e86 S3D\uff0c\u7136\u540e\u5f15\u5bfc ChatGPT \u4ee5\u90e8\u5206\u9aa8\u67b6\u5e8f\u5217\u7684\u683c\u5f0f\u8f93\u51fa \"\u6709\u7528\u4fe1\u606f \"s[ms]\u3002\u8bf7\u6ce8\u610f\uff0cChatGPT \u81ea\u7136\u6709\u53ef\u80fd\u6210\u4e3a\u9aa8\u67b6\u5e8f\u5217\u751f\u6210\u5668\uff0c\u5e76\u6b63\u786e\u751f\u6210 \"\u6709\u7528\u4fe1\u606f \"s[ms]\u3002\u8fd9\u662f\u56e0\u4e3a\uff0c\u4e00\u65b9\u9762\uff0cChatGPT \u7ecf\u8fc7\u4e86\u5927\u91cf\u8bed\u6599\u7684\u9884\u8bad\u7ec3\uff0c\u8fd9\u4e9b\u8bed\u6599\u901a\u5e38\u6d89\u53ca\u975e\u5e38\u4e30\u5bcc\u7684\u4eba\u4f53\u9aa8\u9abc\u548c\u4eba\u4f53\u52a8\u4f5c\u63cf\u8ff0[3]\uff0c\u56e0\u6b64 ChatGPT \u53ef\u4ee5\u5305\u542b\u975e\u5e38\u4e30\u5bcc\u7684\u4eba\u4f53\u9aa8\u9abc\u7ed3\u6784\u548c\u4eba\u4f53\u884c\u4e3a\u7684\u9690\u542b\u77e5\u8bc6[22]\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5bf9\u4e8e\u672c\u8d28\u4e0a\u662f\u8eab\u4f53\u5173\u8282\u5750\u6807\u7ec4\u5408\u548c\u8fde\u63a5\u7684\u9aa8\u9abc\u5e8f\u5217\u6765\u8bf4\uff0c\u7ecf\u8fc7\u6d77\u91cf\u7f16\u7a0b\u6570\u636e[6]\u9884\u8bad\u7ec3\u7684 ChatGPT \u5728\u9884\u8bad\u7ec3\u9636\u6bb5\u81ea\u7136\u4f1a\u770b\u5230\u5927\u91cf\u7684\u6570\u5b57\u548c\u5750\u6807\u3002\u7136\u800c\uff0c\u8bf7\u6ce8\u610f\uff0cChatGPT \u901a\u5e38\u6ca1\u6709\u7ecf\u8fc7\u4e13\u95e8\u7684\u9aa8\u67b6\u5e8f\u5217\u9884\u8bad\u7ec3\u3002\u56e0\u6b64\uff0c\u76f4\u63a5\u8981\u6c42 Chat-GPT \u751f\u6210\u80fd\u4e0e\u573a\u666f\u6b63\u786e\u4ea4\u4e92\u7684\u9aa8\u67b6\u5e8f\u5217\u5bf9\u5b83\u6765\u8bf4\u4ecd\u7136\u662f\u4e00\u9879\u975e\u5e38\u8270\u5de8\u7684\u4efb\u52a1\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u4e3a\u4e86\u4fbf\u4e8e ChatGPT \u7406\u89e3\u6211\u4eec\u7684\u9700\u6c42\u5e76\u5b8c\u6210\u8fd9\u9879\u8270\u5de8\u7684\u4efb\u52a1\uff0c\u5728\u6211\u4eec\u8bbe\u8ba1\u7684\u6307\u5bfc ChatGPT \u751f\u6210\u90e8\u5206\u9aa8\u67b6\u5e8f\u5217\u7684\u6307\u4ee4\u4e2d\uff0c\u9664\u4e86\u5411 ChatGPT \u6307\u660e\u4efb\u52a1\u76ee\u6807\u3001\u8f93\u5165\u683c\u5f0f\u548c\u9884\u671f\u8f93\u51fa\u683c\u5f0f\u5916\uff0c\u6211\u4eec\u8fd8\u6d89\u53ca\u4e86\u4e00\u4e2a\u9010\u6b65\u5f15\u5bfc\u7684\u673a\u5236\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u4ece\u73b0\u6709\u7684\u5de5\u4f5c[38]\u4e2d\u5f97\u5230\u542f\u53d1\uff1a\u5982\u679c\u5927\u578b\u8bed\u8a00\u6a21\u578b\u80fd\u591f\u9996\u5148\u5c06\u67d0\u9879\u4efb\u52a1\u5212\u5206\u4e3a\u51e0\u4e2a\u66f4\u7b80\u5355\u7684\u5b50\u4efb\u52a1\uff0c\u7136\u540e\u518d\u4e00\u6b65\u6b65\u5730\u5904\u7406\u6bcf\u4e2a\u5b50\u4efb\u52a1\uff0c\u90a3\u4e48\u5b83\u4eec\u5c31\u80fd\u66f4\u597d\u5730\u7406\u89e3\u548c\u5904\u7406\u8fd9\u9879\u4efb\u52a1\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5728\u4f20\u7ed9 Chat-GPT \u7684\u6307\u4ee4\u4e2d\uff0c\u4e5f\u5c06\u9996\u5148\u751f\u6210 s[ms] \u8fd9\u4e00\u8270\u5de8\u4efb\u52a1\u5212\u5206\u4e3a\u51e0\u4e2a\u8f83\u7b80\u5355\u7684\u5b50\u4efb\u52a1\uff0c\u5e76\u5f15\u5bfc ChatGPT \u9010\u6b65\u5904\u7406\u8fd9\u4e9b\u5b50\u4efb\u52a1\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u79cd\u6709\u6548\u7684\u65b9\u6cd5\u662f\u5f15\u5bfc ChatGPT \u5b8c\u6210\u4ee5\u4e0b\u56db\u4e2a\u5b50\u4efb\u52a1\uff1a\uff081\uff09\"\u9996\u5148\uff0c\u8bf7\u6839\u636e\u63d0\u4f9b\u7684\u8fb9\u754c\u6846\u627e\u5230\u6587\u672c\u63d0\u793a\u4e2d\u63d0\u5230\u7684\u76ee\u6807\u5bf9\u8c61\u3002 \"\uff1b(2) \"\u7b2c\u4e8c\uff0c\u8bf7\u63a8\u7406\u5e76\u89c4\u5212\u8fd0\u52a8\u8f68\u8ff9\uff0c\u5305\u62ec\u8d77\u70b9\u548c\u7ec8\u70b9\u3002\"\uff1b(3) \"\u7b2c\u4e09\uff0c\u8bf7\u63a8\u7406\u51fa\u4eba\u7684\u5408\u7406\u521d\u59cb\u65b9\u4f4d\u3002\"\uff1b(4) \"\u7b2c\u56db\uff0c\u8bf7\u6839\u636e\u6587\u672c\u63d0\u793a\u548c\u8fd0\u52a8\u8f68\u8ff9\u786e\u5b9a\u8fd0\u52a8\u4e2d\u7684\u5e27\u6570\u3002\u7ecf\u9a8c\u8868\u660e\uff0c\u5728\u4e0a\u8ff0\u56db\u4e2a\u5b50\u4efb\u52a1\u7684\u9010\u6b65\u5f15\u5bfc\u4e0b\uff0cChatGPT \u4f5c\u4e3a\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u73b0\u6210\u6a21\u578b\uff0c\u80fd\u591f\u7406\u89e3\u5176\u7ed9\u5b9a\u7684\u8270\u5de8\u4efb\u52a1\uff0c\u5e76\u751f\u6210\u4e0e t \u548c S3D \u90fd\u80fd\u5f88\u597d\u5339\u914d\u7684 s[ms]\u3002\u6211\u4eec\u8fd8\u5728\u8865\u5145\u6587\u6863\u4e2d\u6f14\u793a\u4e86 ChatGPT \u8f93\u51fa\u7684 s[ms] \u793a\u4f8b\uff0c\u4ee5\u53ca\u6211\u4eec\u4f20\u9012\u7ed9 ChatGPT \u7684\u5b8c\u6574\u6307\u4ee4\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/GPT-Connect/#overall-inference-process","title":"Overall Inference Process","text":"<p>\u4ee5\u4e0a\u6211\u4eec\u4ecb\u7ecd\u4e86 GPT-Connect \u6846\u67b6\u7684\u4e24\u4e2a\u901a\u9053\u3002\u5728\u6b64\uff0c\u6211\u4eec\u603b\u7ed3\u4e86\u6211\u4eec\u6846\u67b6\u7684\u6574\u4f53\u63a8\u7406\u8fc7\u7a0b\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u6211\u4eec\u7684\u6846\u67b6\u4e2d\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u4e09\u7ef4\u573a\u666f S3D \u548c\u4e00\u4e2a\u6587\u672c\u63d0\u793a t\uff0c\u6211\u4eec\u9996\u5148\u5c06\u5b83\u4eec\u4f20\u9012\u7ed9\u6846\u67b6\u7684\u573a\u666f-GPT \u901a\u9053\uff0c\u4ee5\u83b7\u5f97 \"\u6709\u7528\u4fe1\u606f \"s[ms]\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06 s[ms] \u548c t \u4f20\u9012\u7ed9\u6846\u67b6\u7684 GPT \u751f\u6210\u5668\u901a\u9053\uff0c\u4ece\u800c\u5f97\u5230\u6846\u67b6\u7684\u6700\u7ec8\u8f93\u51fa xc0\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u6846\u67b6\u7684\u6574\u4e2a\u63a8\u7406\u8fc7\u7a0b\u90fd\u53ef\u4ee5\u901a\u8fc7\u811a\u672c\u81ea\u52a8\u5b8c\u6210\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/GPT-Connect/#experiments","title":"Experiments","text":"<p>\u4e3a\u4e86\u8bc4\u4f30\u6211\u4eec\u63d0\u51fa\u7684\u6846\u67b6\u7684\u6709\u6548\u6027\uff0c\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5728 HUMANISE \u6570\u636e\u96c6 [35] \u4e0a\u5bf9\u6211\u4eec\u7684\u65b9\u6cd5\u8fdb\u884c\u4e86\u5b9a\u91cf\u8bc4\u4f30\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u5728 HUMANISE \u4e2d\u7684\u5ba4\u5185\u4e09\u7ef4\u573a\u666f\u548c HUMANISE \u4ee5\u5916\u7684\u5176\u4ed6\u4e09\u7ef4\u573a\u666f\uff08\u5982\u5ba4\u5916\u4e09\u7ef4\u573a\u666f\uff09\u4e0a\uff0c\u5c06\u6211\u4eec\u7684\u6846\u67b6\u4e0e\u73b0\u6709\u7684\u57fa\u4e8e\u8bad\u7ec3\u7684\u65b9\u6cd5\u8fdb\u884c\u4e86\u5b9a\u6027\u6bd4\u8f83\u3002</p> <p>\u56fe 3\uff1a \u6211\u4eec\u6846\u67b6\u7684\u5b9a\u6027\u7ed3\u679c\u3002(a-d\uff09\u4e3a HUMANISE \u4e2d\u7684\u4e09\u7ef4\u573a\u666f\uff0c\uff08e-f\uff09\u4e3a HUMANISE \u5916\u7684\u5ba4\u5916\u4e09\u7ef4\u573a\u666f\u3002\u4eba\u7c7b\u7f51\u683c\u7531\u6d45\u5230\u6df1\u7684\u989c\u8272\u8868\u793a\u65f6\u95f4\u3002\u66f4\u591a\u5b9a\u6027\u7ed3\u679c\u89c1\u8865\u5145\u8d44\u6599\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/GPT-Connect/#dataset-and-evaluation-metrics","title":"Dataset and Evaluation Metrics","text":"<p>HUMANISE [35] \u662f\u4e00\u4e2a\u4eba\u4f53\u8fd0\u52a8\u6570\u636e\u96c6\uff0c\u5305\u542b 643 \u4e2a\u4e0d\u540c 3D \u573a\u666f\u4e2d\u7684 19.6k \u4e2a\u4eba\u4f53\u8fd0\u52a8\u5e8f\u5217\u3002\u5728\u8be5\u6570\u636e\u96c6\u4e0a\uff0c\u9664\u4e86\u5bf9\u6574\u4e2a\u6d4b\u8bd5\u96c6\u8fdb\u884c\u8bc4\u4f30\u5916\uff0cWang \u7b49\u4eba[35]\u8fd8\u7279\u522b\u5728\u6d4b\u8bd5\u96c6\u7684\u4e00\u4e2a\u5b50\u96c6\u4e0a\u5bf9\u4ed6\u4eec\u7684\u65b9\u6cd5\u548c\u4e24\u4e2a\u66ff\u4ee3\u57fa\u7ebf\u8fdb\u884c\u4e86\u8fdb\u4e00\u6b65\u6bd4\u8f83\uff0c\u8be5\u5b50\u96c6\u4fa7\u91cd\u4e8e\u63cf\u8ff0 \"\u884c\u8d70 \"\u52a8\u4f5c\u7684\u4e0d\u540c\u6587\u672c\u63d0\u793a\u3002\u6309\u7167\u6587\u732e[35]\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u5bf9\u6574\u4e2a\u6d4b\u8bd5\u96c6\u548c \"\u884c\u8d70 \"\u5b50\u96c6\u8fdb\u884c\u8bc4\u4f30\u3002</p> <p>\u8bc4\u4f30\u6307\u6807\u3002\u4e3a\u4e86\u8bc4\u4f30\u5728\u4e0d\u540c\u4e09\u7ef4\u573a\u666f\u4e2d\u751f\u6210\u7684\u6587\u672c\u9a71\u52a8\u8fd0\u52a8\u5e8f\u5217\u7684\u8d28\u91cf\uff0c\u6839\u636e\u6587\u732e[35]\uff0c\u6211\u4eec\u9996\u5148\u91c7\u7528\u4e86\u4ee5\u4e0b\u4e09\u4e2a\u6307\u6807\uff1a\u8d28\u91cf\u5f97\u5206\u3001\u52a8\u4f5c\u5f97\u5206\u548c\u8eab\u4f53\u5230\u76ee\u6807\u7684\u8ddd\u79bb\u3002\u5176\u4e2d\uff0c\u4e3a\u4e86\u6d4b\u91cf\u8d28\u91cf\u5f97\u5206\u548c\u52a8\u4f5c\u5f97\u5206\uff08\u6bcf\u4e2a\u5f97\u5206\u7684\u8303\u56f4\u4e3a 1-5\uff0c\u8d8a\u9ad8\u8d8a\u597d\uff09\uff0c\u6211\u4eec\u6309\u7167\u6587\u732e[35]\u7684\u65b9\u6cd5\uff0c\u5bf9\u751f\u6210\u7684\u8fd0\u52a8\u5e8f\u5217\u7684\u6574\u4f53\u8d28\u91cf\u548c\u52a8\u4f5c\u8bed\u4e49\u51c6\u786e\u6027\u8fdb\u884c\u4e86\u4eba\u7c7b\u611f\u77e5\u7814\u7a76\u3002\u5bf9\u4e8e\u8eab\u4f53\u5230\u76ee\u6807\u7684\u8ddd\u79bb\uff0c\u8ba1\u7b97\u65b9\u6cd5\u662f\u7ed9\u5b9a\u6587\u672c\u63d0\u793a\u4e2d\u5b9a\u4e49\u7684\u6838\u5fc3\u7269\u4f53\u4e0e\u573a\u666f\u4e2d\u751f\u6210\u7684\u4eba\u4f53\u52a8\u4f5c\u5e8f\u5217\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\uff08\u4ee5\u7c73\u4e3a\u5355\u4f4d\uff09\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u8861\u91cf\u751f\u6210\u7684\u8fd0\u52a8\u5e8f\u5217\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u7269\u7406\u53ef\u4fe1\u5ea6\uff0c\u9664\u4e86\u4e0a\u8ff0\u4e09\u4e2a\u6307\u6807\u5916\uff0c\u6211\u4eec\u8fd8\u6839\u636e\u6587\u732e[33, 34]\uff0c\u589e\u52a0\u4e86\u4e24\u4e2a\u6307\u6807\uff1a\u975e\u78b0\u649e\u5f97\u5206\u548c\u63a5\u89e6\u5f97\u5206\uff08\u6bcf\u4e2a\u6307\u6807\u7684\u8303\u56f4\u4e3a 0-1\uff0c\u8d8a\u9ad8\u8d8a\u597d\uff09\u3002\u6211\u4eec\u8fd8\u5728\u8865\u5145\u8d44\u6599\u4e2d\u63d0\u4f9b\u4e86\u6709\u5173\u4e0a\u8ff0\u4e94\u4e2a\u6307\u6807\u7684\u66f4\u591a\u7ec6\u8282\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/GPT-Connect/#implementation-details","title":"Implementation Details","text":"<p>\u6211\u4eec\u5728 RTX 3090 GPU \u4e0a\u8fdb\u884c\u5b9e\u9a8c\u3002\u5bf9\u4e8e ChatGPT\uff0c\u6211\u4eec\u4f7f\u7528 GPT-4\u3002\u6b64\u5916\uff0c\u5bf9\u4e8e\u8fd0\u52a8\u6269\u6563\u6a21\u578b[32]\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u76f4\u63a5\u4ece\u5176\u5b98\u65b9 GitHub \u4ed3\u5e93\u4e0b\u8f7d\u7684 \"humanml-encoder-512 \"\u7248\u672c[1]\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5c06\u516c\u5f0f 4 \u4e2d\u4f7f\u7528\u7684\u7cfb\u6570\u8d85\u53c2\u6570 \u03bb \u8bbe\u4e3a 3\uff0c\u5c06\u516c\u5f0f 6 \u4e2d\u4f7f\u7528\u7684\u9608\u503c \u03be \u8bbe\u4e3a 0.2\uff0c\u5c06\u5728 S3D \u4e0a\u4ece\u4e0d\u540c\u76f8\u673a\u59ff\u52bf\u62cd\u6444\u7684\u7167\u7247 M \u6570\u91cf\u8bbe\u4e3a 16\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/GPT-Connect/#main-results","title":"Main Results","text":"<p>HUMANISE \u6574\u4e2a\u6d4b\u8bd5\u96c6\u7684\u5b9a\u91cf\u7ed3\u679c\u3002\u5982\u8868 1 \u6240\u793a \u5982\u8868 1 \u6240\u793a\uff0c\u4e0e\u73b0\u6709\u65b9\u6cd5 [35]\u76f8\u6bd4\uff0c\u5728\u5b8c\u5168\u65e0\u9700\u8bad\u7ec3\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u6846\u67b6\u5728\u4e0d\u540c\u7684\u8bc4\u4f30\u6307\u6807\u4e0a\u90fd\u53d6\u5f97\u4e86\u4f18\u5f02\u7684\u6027\u80fd\u3002\u8fd9\u8868\u660e\u4e86\u6211\u4eec\u6846\u67b6\u7684\u6709\u6548\u6027\u3002</p> <p>\u5173\u4e8e HUMANISE \"\u6b65\u884c \"\u5b50\u96c6\u7684\u5b9a\u91cf\u7ed3\u679c\u3002\u5728\u8868 2 \u4e2d\uff0c\u6309\u7167 [35] \u7684\u8bc4\u4f30\u8bbe\u7f6e\uff0c\u6211\u4eec\u8fd8\u5728\u6d4b\u8bd5\u96c6\u7684 \"\u884c\u8d70 \"\u5b50\u96c6\u4e0a\u8fdb\u4e00\u6b65\u6bd4\u8f83\u4e86\u6211\u4eec\u7684\u6846\u67b6\u3001PROFIBUS \u548c HUMANISE\u3002\u5728\u8868 2 \u4e2d\uff0c\u6309\u7167 [35] \u7684\u8bc4\u4f30\u8bbe\u7f6e\uff0c\u6211\u4eec\u8fd8\u5728\u6d4b\u8bd5\u96c6\u7684 \"\u884c\u8d70 \"\u5b50\u96c6\u4e0a\u8fdb\u4e00\u6b65\u6bd4\u8f83\u4e86\u6211\u4eec\u7684\u6846\u67b6\u3001[35] \u63d0\u51fa\u7684\u65b9\u6cd5\u548c [35] \u63d0\u51fa\u7684\u4e24\u4e2a\u57fa\u7ebf\uff08\u57fa\u7ebf A \u548c\u57fa\u7ebf B\uff09\u3002\u76f4\u89c2\u5730\u8bf4\uff0c\u8fd9\u4e24\u6761\u57fa\u7ebf\u4e0e[35]\u4e2d\u63d0\u51fa\u7684\u65b9\u6cd5\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5b83\u4eec\u8bbe\u8ba1\u7684\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u751f\u6210\u5668\u91c7\u7528\u4e86\u4e0d\u540c\u7684\u67b6\u6784\uff08\u6709\u5173\u8fd9\u4e24\u6761\u57fa\u7ebf\u7684\u66f4\u591a\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605\u9644\u5f55\uff09\u3002\u5982\u8868 2 \u6240\u793a \u5982\u8868 2 \u6240\u793a\uff0c\u6211\u4eec\u7684\u514d\u8bad\u7ec3\u6846\u67b6\u59cb\u7ec8\u4f18\u4e8e\u91c7\u7528\u4e0d\u540c\u8fd0\u52a8\u751f\u6210\u5668\u67b6\u6784\u7684\u73b0\u6709\u57fa\u4e8e\u8bad\u7ec3\u7684\u65b9\u6cd5\uff0c\u8fdb\u4e00\u6b65\u8bc1\u660e\u4e86\u6211\u4eec\u6846\u67b6\u7684\u4f18\u8d8a\u6027\u3002</p> <p>\u5b9a\u6027\u7ed3\u679c\u3002\u9664\u4e86\u5c06\u6211\u4eec\u7684\u6846\u67b6\u4e0e\u73b0\u6709\u65b9\u6cd5[35]\u8fdb\u884c\u5b9a\u91cf\u6bd4\u8f83\u5916\uff0c\u6211\u4eec\u8fd8\u5728\u56fe 3 \u4e2d\u5c55\u793a\u4e86\u6211\u4eec\u7684\u6846\u67b6\u5728 HUMANISE \u4e2d\u7684\u4e09\u7ef4\u573a\u666f\u548c HUMAN-ISE \u4ee5\u5916\u7684\u4e09\u7ef4\u573a\u666f\uff08\u53d6\u81ea Sketchfab\uff09\u4e2d\u7684\u5b9a\u6027\u7ed3\u679c\u3002\u5982\u56fe\u6240\u793a\uff0c\u5728\u4e0d\u540c\u7684\u4e09\u7ef4\u573a\u666f\u4e2d\uff0c\u6839\u636e\u4e0d\u540c\u7684\u6587\u672c\u63d0\u793a\uff0c\u6211\u4eec\u7684\u6846\u67b6\u53ef\u4ee5\u6301\u7eed\u751f\u6210\u53ef\u4fe1\u7684\u8fd0\u52a8\u5e8f\u5217\u3002\u540c\u65f6\uff0c\u4e0e [35] \u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u6846\u67b6\u8fd8\u80fd\u4e0e\u4e09\u7ef4\u573a\u666f\u8fdb\u884c\u4e00\u81f4\u7684\u4ea4\u4e92\u3002\u8fd9\u8fdb\u4e00\u6b65\u8bf4\u660e\u4e86\u6211\u4eec\u6846\u67b6\u7684\u6709\u6548\u6027\u548c\u53ef\u63a8\u5e7f\u6027\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/GPT-Connect/#ablation-studies","title":"Ablation Studies","text":"<p>GPT-Generator \u6e20\u9053\u4e2d\u5f15\u5bfc\u7b56\u7565\u7684\u5f71\u54cd\u3002\u5728\u6211\u4eec\u6846\u67b6\u7684 GPT-Generator \u6e20\u9053\u4e2d\uff0c\u4e3a\u4e86\u4f7f\u53cd\u5411\u6269\u6563\u8fc7\u7a0b\u6709\u6548\u5730\u4ee5 \"\u6709\u7528\u4fe1\u606f \"s[ms] \u4e3a\u6761\u4ef6\uff0c\u6211\u4eec\u5728\u53cd\u5411\u6269\u6563\u8fc7\u7a0b\u7684\u6bcf\u4e00\u6b65\u90fd\u76f4\u63a5\u5c06 xk-1 \u5bf9\u51c6 s[ms]\u7684\u5929\u771f\u65b9\u5f0f\u4e0a\u505a\u4e86\u4e24\u5904\u4fee\u6539\u3002\u4e3a\u4e86\u8bc4\u4f30\u8fd9\u4e9b\u4fee\u6539\u7684\u6548\u679c\uff0c\u6211\u4eec\u6d4b\u8bd5\u4e86\u4e09\u79cd\u53d8\u4f53\u3002\u5728\u7b2c\u4e00\u79cd\u53d8\u4f53\uff08\u4e0d\u5305\u542b\u8fd9\u4e24\u79cd\u4fee\u6539\uff09\u4e2d\uff0c\u6211\u4eec\u6309\u7167\u4e0a\u8ff0\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u76f4\u63a5\u4ee5 s[ms] \u4f5c\u4e3a\u53cd\u5411\u6269\u6563\u8fc7\u7a0b\u7684\u6761\u4ef6\u3002\u5728\u7b2c\u4e8c\u79cd\u53d8\u4f53\uff08\u4e0d\u542b\u4fee\u6539 1\uff09\u4e2d\uff0c\u5728\u4fee\u6539 2 \u672a\u505c\u7528\u914d\u51c6\u7684\u6269\u6563\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u76f4\u63a5\u5728 xk-1 \u548c s[ms] \u4e4b\u95f4\u8fdb\u884c\u914d\u51c6\uff0c\u800c\u4e0d\u5728 x\u02c60k \u548c s[ms] \u4e4b\u95f4\u8fdb\u884c\u914d\u51c6\u3002\u6b64\u5916\uff0c\u5728\u7b2c\u4e09\u79cd\u53d8\u4f53\uff08\u4e0d\u542b\u4fee\u6539 2\uff09\u4e2d\uff0c\u6211\u4eec\u4e0d\u662f\u5728\u67d0\u4e9b\u6b65\u9aa4\u4e2d\u505c\u7528\u914d\u51c6\uff0c\u800c\u662f\u5728\u53cd\u5411\u8fc7\u7a0b\u7684\u6bcf\u4e00\u6b65\u90fd\u6267\u884c x\u02c60k \u548c s[ms] \u4e4b\u95f4\u7684\u914d\u51c6\u3002\u5982\u8868 3 \u6240\u793a \u5982\u8868 3 \u6240\u793a\uff0c\u6211\u4eec\u7684\u6846\u67b6\u4f18\u4e8e\u6240\u6709\u4e09\u79cd\u53d8\u4f53\u3002\u8fd9\u8868\u660e\u6211\u4eec\u5bf9 GPT-Generator \u901a\u9053\u4e2d\u7684\u5f15\u5bfc\u7b56\u7565\u6240\u505a\u7684\u4e24\u79cd\u4fee\u6539\u90fd\u5f88\u6709\u6548\u3002\u66f4\u591a\u7684\u6d88\u878d\u7814\u7a76\uff0c\u5982\u573a\u666f-GPT \u901a\u9053\u548c\u8d85\u53c2\u6570\u5b9e\u9a8c\uff0c\u8bf7\u53c2\u89c1\u8865\u5145\u8d44\u6599\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/GPT-Connect/#conclusion","title":"Conclusion","text":"<p>\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u65b0\u9896\u7684\u573a\u666f\u611f\u77e5\u6587\u672c\u9a71\u52a8\u8fd0\u52a8\u751f\u6210\u6846\u67b6 GPT-Connect\u3002\u5728\u8fd9\u4e2a\u6846\u67b6\u4e2d\uff0c\u6211\u4eec\u4ece\u4e00\u4e2a\u65b0\u9896\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u5229\u7528 ChatGPT \u4f5c\u4e3a\u4e09\u7ef4\u573a\u666f\u548c\u73b0\u6210\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u4e4b\u95f4\u7684\u4e2d\u95f4\u8fde\u63a5\u5668\uff0c\u4ee5\u5b8c\u5168\u65e0\u9700\u8bad\u7ec3\u7684\u65b9\u5f0f\u751f\u6210\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u5e8f\u5217\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5728\u6846\u67b6\u4e2d\u8bbe\u8ba1\u4e86\u573a\u666f-GPT \u901a\u9053\u548c GPT-\u751f\u6210\u5668\u901a\u9053\uff0c\u4f7f ChatGPT \u80fd\u591f\u5f88\u597d\u5730\u626e\u6f14\u573a\u666f\u751f\u6210\u5668-\u8fde\u63a5\u5668\u7684\u89d2\u8272\u3002\u65e0\u9700\u4efb\u4f55\u8bad\u7ec3\uff0c\u6211\u4eec\u7684\u6846\u67b6\u5c31\u80fd\u5f88\u597d\u5730\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u5ba4\u5185\u548c\u5ba4\u5916\u4e09\u7ef4\u573a\u666f\uff0c\u800c\u4e14\u6027\u80fd\u59cb\u7ec8\u4f18\u4e8e\u4e4b\u524d\u57fa\u4e8e\u8bad\u7ec3\u7684\u65b9\u6cd5\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/","title":"Generating Continual Human Motion in Diverse 3D Scenes","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#abstract","title":"Abstract","text":"<p>\u6211\u4eec\u4ecb\u7ecd\u4e86\u4e00\u79cd\u5728\u52a8\u753b\u5e08\u6307\u5bfc\u4e0b\u5408\u6210\u4e09\u7ef4\u573a\u666f\u4e2d\u80e1\u4eba\u52a8\u4f5c\u7684\u65b9\u6cd5\u3002\u7ed9\u5b9a\u4e00\u7ec4\u7a00\u758f\u7684\uff083 \u6216 4 \u4e2a\uff09\u5173\u8282\u4f4d\u7f6e\uff08\u5982\u4eba\u7684\u624b\u548c\u4e24\u53ea\u811a\u7684\u4f4d\u7f6e\uff09\u548c\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u79cd\u5b50\u8fd0\u52a8\u5e8f\u5217\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u4ece\u79cd\u5b50\u8fd0\u52a8\u5f00\u59cb\u751f\u6210\u5408\u7406\u7684\u8fd0\u52a8\u5e8f\u5217\uff0c\u540c\u65f6\u6ee1\u8db3\u6240\u63d0\u4f9b\u5173\u952e\u70b9\u7684\u7ea6\u675f\u6761\u4ef6\u3002\u6211\u4eec\u5c06\u8fde\u7eed\u8fd0\u52a8\u5408\u6210\u95ee\u9898\u5206\u89e3\u4e3a\u6cbf\u7740\u5173\u952e\u70b9\u6307\u5b9a\u7684\u8def\u5f84\u884c\u8d70\u548c\u8fdb\u51fa\u5173\u952e\u70b9\u6307\u5b9a\u7684\u52a8\u4f5c\uff0c\u8fd9\u6837\u5c31\u80fd\u5728\u4e0d\u660e\u786e\u5305\u542b\u573a\u666f\u4fe1\u606f\u7684\u60c5\u51b5\u4e0b\u957f\u65f6\u95f4\u751f\u6210\u6ee1\u8db3\u573a\u666f\u7ea6\u675f\u6761\u4ef6\u7684\u8fd0\u52a8\u3002\u6211\u4eec\u7684\u65b9\u6cd5\u53ea\u4f7f\u7528\u4e0e\u573a\u666f\u65e0\u5173\u7684 mocap \u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u9002\u7528\u4e8e\u5404\u79cd\u51e0\u4f55\u5f62\u72b6\u7684\u4e09\u7ef4\u573a\u666f\u3002\u4e3a\u4e86\u5b9e\u73b0\u53ef\u4fe1\u7684\u65e0\u6f02\u79fb\u8fde\u7eed\u8fd0\u52a8\u5408\u6210\uff0c\u6211\u4eec\u7684\u4e3b\u8981\u8d21\u732e\u662f\u5728\u4ee5\u76ee\u6807\u4e3a\u4e2d\u5fc3\u7684\u6807\u51c6\u5750\u6807\u7cfb\u4e2d\u751f\u6210\u8fd0\u52a8\uff0c\u5176\u4e2d\u4e0b\u4e00\u4e2a\u76f4\u63a5\u76ee\u6807\u4f4d\u4e8e\u539f\u70b9\u3002\u6211\u4eec\u7684\u6a21\u578b\u53ef\u4ee5\u751f\u6210\u957f\u5e8f\u5217\u7684\u5404\u79cd\u52a8\u4f5c\uff0c\u5982\u6293\u53d6\u3001\u5750\u4e0b\u548c\u503e\u659c\u7b49\uff0c\u5e76\u4ee5\u4efb\u610f\u987a\u5e8f\u4e32\u8054\u5728\u4e00\u8d77\uff0c\u5728\u4e0d\u540c\u51e0\u4f55\u5f62\u72b6\u7684\u573a\u666f\u4e2d\u8fdb\u884c\u4e86\u6f14\u793a\uff1a HPS\u3001Replica\u3001Matterport\u3001ScanNet \u548c\u4f7f\u7528 NeRFs \u8868\u793a\u7684\u573a\u666f\u3002\u591a\u9879\u5b9e\u9a8c\u8bc1\u660e\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u4f18\u4e8e\u73b0\u6709\u7684\u4e09\u7ef4\u573a\u666f\u8def\u5f84\u5bfc\u822a\u65b9\u6cd5\u3002</p> <p>\u6211\u4eec\u7684\u65b9\u6cd5\u6982\u8ff0\u3002\u6211\u4eec\u901a\u8fc7\u5c06\u4eba\u4f53\u8fd0\u52a8\u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5\u6765\u751f\u6210\u6ee1\u8db3\u5173\u952e\u70b9\u7ea6\u675f\u6761\u4ef6\u7684\u4eba\u4f53\u8fd0\u52a8\uff1a\u884c\u8d70\u8fd0\u52a8\uff08\u5728\u5173\u952e\u70b9\u4e4b\u95f4\u884c\u8d70\u65f6\u4ea7\u751f\u52a8\u753b\uff09\u3001\u8fc7\u6e21\u8fd0\u52a8\uff08\u5c06\u884c\u8d70\u8fd0\u52a8\u4e0e\u5173\u952e\u70b9\u6307\u5b9a\u7684\u59ff\u52bf\u8fdb\u884c\u6df7\u5408\uff09\u548c\u8fc7\u6e21\u8fd0\u52a8\uff08\u5c06\u4eba\u4f53\u8fd0\u52a8\u6062\u590d\u5230\u884c\u8d70\u59ff\u52bf\u65f6\u4ea7\u751f\u52a8\u753b\uff09\u3002\u6211\u4eec\u4f7f\u7528\u81ea\u56de\u5f52\u53d8\u6362\u5668 WalkNet \u6765\u5408\u6210\u884c\u8d70\u52a8\u4f5c\uff0c\u5e76\u4f7f\u7528\u906e\u7f69\u5f0f\u81ea\u52a8\u7f16\u7801\u5668\u53d8\u6362\u5668\u6765\u751f\u6210\u6df7\u5408\u52a8\u4f5c\u3002\u901a\u8fc7\u5c06\u8fd0\u52a8\u79fb\u52a8\u5230\u4ee5\u76ee\u6807\u4e3a\u4e2d\u5fc3\u7684\u5178\u578b\u5750\u6807\u6846\u67b6\u4e2d\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u53ef\u9002\u7528\u4e8e\u591a\u79cd\u4e09\u7ef4\u573a\u666f\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#introduction","title":"Introduction","text":"<p>\u6211\u4eec\u7684\u76ee\u6807\u662f\u5728\u4efb\u610f\u4e09\u7ef4\u573a\u666f\u4e2d\u751f\u6210\u7531\u52a8\u753b\u5e08\u6307\u5bfc\u7684\u4e30\u5bcc\u7684\u957f\u671f\u4eba\u7c7b\u884c\u4e3a\uff0c\u5305\u62ec\u5404\u79cd\u52a8\u4f5c\u548c\u52a8\u4f5c\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u5982\u56fe 1 \u6240\u793a\uff0c\u8fd9\u6837\u7684\u7cfb\u7edf\u5e94\u5141\u8bb8\u5728\u76ee\u6807\u5f15\u5bfc\u4e0b\u751f\u6210\u4eba\u7c7b\u4ece\u4e00\u4e2a\u5730\u65b9\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u5730\u65b9\u7684\u884c\u4e3a\uff0c\u4f8b\u5982\uff0c\u8d70\u5411\u6c99\u53d1\u5750\u5728\u4e0a\u9762\uff0c\u7136\u540e\u7ad9\u8d77\u6765\u8d70\u5230\u67b6\u5b50\u4e0a\u62ff\u4e1c\u897f\u3002\u5b83\u5e94\u8be5\u5141\u8bb8\u7528\u6237\u4ee5\u6700\u5c11\u7684\u4ea4\u4e92\u6307\u5b9a\u8981\u6267\u884c\u7684\u52a8\u4f5c\u7c7b\u578b\uff0c\u540c\u65f6\u4fdd\u6301\u5408\u6210\u6570\u636e\u751f\u6210\u3001\u673a\u5668\u4eba\u3001VR/AR\u3001\u6e38\u620f\u7b49\u5e94\u7528\u6240\u9700\u7684\u771f\u5b9e\u611f\u548c\u8868\u73b0\u529b\u3002</p> <p>\u867d\u7136\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u7531\u6a21\u62df\u5668\u5f15\u5bfc\u7684\u8fd0\u52a8\u5408\u6210\u65b9\u9762\uff0c\u4e1a\u754c\u5df2\u7ecf\u53d6\u5f97\u4e86\u53ef\u559c\u7684\u8fdb\u5c55\uff0c\u4f46\u5927\u591a\u6570\u4f5c\u54c1\u4ec5\u9650\u4e8e\u5355\u4e00\u52a8\u4f5c\uff0c\u800c\u4e14\u4e0d\u5904\u7406\u8fc7\u6e21[73, 69, 62]\uff0c\u56e0\u6b64\u65e0\u6cd5\u4ea7\u751f\u957f\u8ddd\u79bb\u7684\u591a\u6837\u5316\u8fd0\u52a8\u3002\u5b83\u4eec\u4e5f\u65e0\u6cd5\u5e94\u7528\u4e8e\u5404\u79cd\u771f\u5b9e\u573a\u666f [58\u300165\u300166\u300126]\u3002\u7a76\u5176\u539f\u56e0\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u662f\u901a\u8fc7\u5bf9\u573a\u666f\u5730\u5f62\u8fdb\u884c\u8c03\u8282\u6765\u5408\u6210\u8fd0\u52a8\uff0c\u9700\u8981\u5728\u4e09\u7ef4\u573a\u666f\u548c\u7269\u4f53\u4e2d\u8fdb\u884c\u4e09\u7ef4\u4eba\u673a\u4ea4\u4e92\u7684\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3[27, 26, 73]\u3002\u8981\u5c06\u8fd9\u4e9b\u65b9\u6cd5\u5e94\u7528\u4e8e\u4efb\u610f\u4e09\u7ef4\u573a\u666f\uff0c\u5c31\u9700\u8981\u6536\u96c6\u65e0\u6570\u53ef\u80fd\u7684\u4e09\u7ef4\u573a\u666f\u548c\u7269\u4f53\u7684\u8fd0\u52a8\u6570\u636e\uff0c\u800c\u8fd9\u662f\u65e0\u6cd5\u6269\u5c55\u7684\u3002</p> <p>\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u4eba\u7c7b\u53ef\u4ee5\u5728\u6742\u4e71\u65e0\u7ae0\u7684\u573a\u666f\u4e2d\u7a7f\u68ad\uff0c\u4ece\u4ece\u672a\u89c1\u8fc7\u7684\u67b6\u5b50\u4e0a\u6311\u9009\u7269\u54c1\uff0c\u5750\u5728\u65b0\u5947\u7684\u5bb6\u5177\u548c\u8868\u9762\u4e0a\u3002\u573a\u666f\u4e2d\u7684\u5927\u90e8\u5206\u6742\u7269\u901a\u5e38\u90fd\u4f1a\u88ab\u5ffd\u7565\uff0c\u800c\u6700\u91cd\u8981\u7684\u4e0d\u662f\u7269\u4f53/\u573a\u666f\u51e0\u4f55\u5f62\u72b6\u7684\u786e\u5207\u5c3e\u90e8\uff0c\u800c\u662f\u5b83\u4eec\u662f\u5426\u80fd\u627f\u53d7\u6bcf\u4e2a\u52a8\u4f5c\u3002\u6211\u4eec\u7684\u5047\u8bbe\u662f\uff0c\u8fd0\u52a8\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u4e3a\u4e86\u907f\u5f00\u969c\u788d\u7269\uff0c\u4e13\u6ce8\u4e8e\u5230\u8fbe\u4e0b\u4e00\u4e2a\u76f4\u63a5\u76ee\u6807\u6216\u73af\u5883\u4e2d\u7684\u76ee\u6807\u63a5\u89e6\u70b9\u3002\u56e0\u6b64\uff0c\u5728\u4e0d\u8003\u8651\u4e09\u7ef4\u573a\u666f\u6240\u6709\u7ec6\u8282\u7684\u60c5\u51b5\u4e0b\u751f\u6210\u4eba\u7c7b\u52a8\u4f5c\u5e94\u8be5\u662f\u53ef\u80fd\u7684\u3002</p> <p>\u57fa\u4e8e\u8fd9\u4e00\u89c1\u89e3\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u9896\u7684\u6846\u67b6\uff0c\u7528\u4e8e\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u8fdb\u884c\u52a8\u753b\u5e08\u6307\u5bfc\u7684\u8fd0\u52a8\u5408\u6210\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u4f9d\u8d56\u573a\u666f\u6ce8\u518c\u7684\u8fd0\u52a8\u6570\u636e\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u53ef\u4ee5\u5728\u5e38\u89c4\u7684 mocap \u6570\u636e\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u800c\u8fd9\u79cd\u6570\u636e\u76f8\u5bf9\u5bb9\u6613\u6355\u6349\uff0c\u800c\u4e14\u975e\u5e38\u5bb9\u6613\u83b7\u5f97 [46]\u3002\u7531\u4e8e\u6211\u4eec\u7684\u65b9\u6cd5\u5e76\u4e0d\u660e\u786e\u4ee5\u573a\u666f\u7684\u51e0\u4f55\u5f62\u72b6\u4e3a\u6761\u4ef6\uff0c\u56e0\u6b64\u53ef\u7528\u4e8e\u5177\u6709\u4e0d\u540c\u51e0\u4f55\u5f62\u72b6\u7684\u4e09\u7ef4\u573a\u666f\u3002</p> <p>\u6211\u4eec\u7684\u65b9\u6cd5\u4f9d\u8d56\u4e8e\u4e24\u4e2a\u5173\u952e\u89c2\u5bdf\u70b9\uff1a\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u52a8\u4f5c\u8868\u793a\u4e3a\u4e00\u7ec4\u7a00\u758f\u7684\u6240\u9700\u8fbe\u5230\u7684\u76ee\u6807\u63a5\u89e6\u70b9\uff08\u6211\u4eec\u4f7f\u7528 3 \u6216 4 \u4e2a\u63a5\u89e6\u70b9\uff0c\u5982\u4e24\u53ea\u811a\u548c\u4e00\u53ea\u624b\u7684\u4f4d\u7f6e\u6216\u4e24\u53ea\u811a\u548c\u6839\u90e8\u7684\u4f4d\u7f6e\uff09\uff0c\u6211\u4eec\u5c06\u5176\u79f0\u4e3a\u52a8\u4f5c\u5173\u952e\u70b9\u3002\u8fd9\u4e9b\u5173\u952e\u70b9\u53ef\u4ee5\u7531\u52a8\u753b\u5e08\u4f7f\u7528\u754c\u9762\u63d0\u4f9b\uff0c\u4e5f\u53ef\u4ee5\u7531\u81ea\u52a8\u542f\u53d1\u5f0f\u7b97\u6cd5\u751f\u6210\uff0c\u4ece\u800c\u8ba9\u52a8\u753b\u5e08\u5728\u751f\u6210\u52a8\u4f5c\u7684\u901f\u5ea6\u548c\u63a7\u5236\u4e4b\u95f4\u8fdb\u884c\u6743\u8861\u3002\u672c\u6587\u7684\u4e00\u4e2a\u6709\u8da3\u53d1\u73b0\u662f\uff0c\u52a8\u4f5c\u5173\u952e\u70b9\u662f\u4e09\u7ef4\u573a\u666f\u4e2d\u591a\u4e2a\u52a8\u4f5c\u7684\u5f3a\u5927\u62bd\u8c61\uff0c\u53ef\u7528\u4e8e\u6267\u884c \"\u5750\u5728\u90a3\u91cc \"\u6216 \"\u6293\u4f4f\u8fd9\u4e2a\u9ad8\u5ea6 \"\u7b49\u6307\u4ee4\u3002\u5176\u6b21\uff0c\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u907f\u5f00\u969c\u788d\u7269\u53ef\u4ee5\u901a\u8fc7\u8def\u5f84\u8ddf\u8e2a\u6765\u5b9e\u73b0\u3002\u6211\u4eec\u9762\u4e34\u7684\u6311\u6218\u662f\uff0c\u5982\u4f55\u6cbf\u7740\u4efb\u610f\u957f\u7684\u8def\u5f84\uff0c\u4f7f\u4eba\u7c7b\u5e73\u7a33\u5730\u8fdb\u5165\u548c\u79bb\u5f00\u52a8\u4f5c\uff0c\u7136\u540e\u8d70\u5411\u4e0b\u4e00\u4e2a\u76ee\u6807\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u8fd0\u52a8\u5206\u4e3a\u4e09\u90e8\u5206\uff1a\u884c\u8d70\u3001\u8fdb\u5165\u548c\u79bb\u5f00\u52a8\u4f5c\u7684\u8f6c\u6362\u3002\u5bf9\u4e8e\u8def\u5f84\u8ddf\u968f\u548c\u8f6c\u6362\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u5b8c\u5168\u4f7f\u7528\u573a\u666f\u65e0\u5173\u7684\u8fd0\u52a8\u6570\u636e\u6765\u8bad\u7ec3\u8fd0\u52a8\u5408\u6210\u6a21\u578b\u7684\u60f3\u6cd5\uff0c\u4ee5\u8fbe\u5230\u4e00\u4e2a\u6807\u51c6\u5750\u6807\u6846\u67b6\u7684\u539f\u70b9\u3002\u5bf9\u4e8e\u5bfc\u822a\u8def\u5f84\uff0c\u8be5\u6a21\u578b\u901a\u8fc7\u8fed\u4ee3\u91c7\u6837\u6536\u655b\u4e8e\u4f7f\u7528\u8def\u5f84\u4e0a\u7684\u822a\u70b9\u548c\u5207\u7ebf\u5b9a\u4e49\u7684\u6807\u51c6\u5750\u6807\u6846\u67b6\u7684\u539f\u70b9\u3002\u5bf9\u4e8e\u8fdb\u51fa\u52a8\u4f5c\u7684\u8f6c\u6362\uff0c\u5219\u901a\u8fc7\u5c06\u76ee\u6807\u59ff\u52bf\u7f6e\u4e8e\u5178\u578b\u5750\u6807\u7cfb\u7684\u539f\u70b9\u6765\u5408\u6210\u8fd0\u52a8\u3002\u901a\u8fc7\u5728\u5178\u578b\u5750\u6807\u7cfb\u4e2d\u8fed\u4ee3\u5408\u6210\u8fd0\u52a8\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u8fdc\u8ddd\u79bb\u8fd0\u52a8\u5408\u6210\uff0c\u4ece\u800c\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u5b9e\u73b0\u884c\u8d70\u548c\u5404\u79cd\u52a8\u4f5c\u4e4b\u95f4\u7684\u8f6c\u6362\u3002</p> <p>\u4e0e\u73b0\u6709\u7684\u8fd0\u52a8\u5408\u6210\u65b9\u6cd5\u4e0d\u540c[26, 58]\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u65e0\u9700\u4efb\u4f55\u4eba\u5de5\u9636\u6bb5\u6216\u52a8\u4f5c\u6ce8\u91ca\u5373\u53ef\u5408\u6210\u8fd0\u52a8\u3002</p> <p>\u6211\u4eec\u9996\u6b21\u5728\u5927\u91cf\u573a\u666f\u6570\u636e\u96c6\u4e0a\u6f14\u793a\u4e86\u8fdc\u8ddd\u79bb\u4eba\u4f53\u8fd0\u52a8\u5408\u6210\uff1a Replica [61]\u3001Matterport [8]\u3001HPS [22]\u3001Scannet [10] \u548c NeRF \u573a\u666f\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u5c55\u793a\u4e86\u6211\u4eec\u7684\u6a21\u578b\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u5730\u65b9\u6267\u884c\u52a8\u4f5c\uff0c\u4f8b\u5982\u4ece\u4efb\u4f55\u9ad8\u5ea6\u7684\u67b6\u5b50\u3001\u684c\u5b50\u6216\u6a71\u67dc\u4e0a\u6293\u53d6\u7269\u54c1\uff0c\u6216\u5750\u5728\u4efb\u4f55\u53ef\u4ee5\u5750\u4e0b\u7684\u8868\u9762\u4e0a\u3002\u6211\u4eec\u5c06\u516c\u5f00\u6211\u4eec\u7684\u4ee3\u7801\u548c\u6a21\u578b\uff0c\u4f9b\u52a8\u753b\u5e08\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u540c\u6b65\u76ee\u6807\u5bfc\u5411\u7684\u4eba\u4f53\u52a8\u4f5c\u3002</p> <p>\u6982\u62ec\u8d77\u6765\uff0c\u6211\u4eec\u7684\u8d21\u732e\u5982\u4e0b\uff1a</p> <ul> <li>\u6211\u4eec\u63d0\u51fa\u7684\u65b9\u6cd5\u4e0d\u540c\u4e8e\u73b0\u6709\u7684\u4e09\u7ef4\u573a\u666f\u8fd0\u52a8\u5408\u6210\u65b9\u6cd5\uff0c\u5b83\u53ea\u4f7f\u7528\u5e38\u89c4\u7684\u8fd0\u52a8\u6355\u6349\u6570\u636e\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u4e09\u7ef4\u573a\u666f\u4e2d\u4f7f\u7528\u3002</li> <li>\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u9896\u7684\u60f3\u6cd5\uff0c\u5373\u5728\u5178\u578b\u5750\u6807\u6846\u67b6\u7684\u539f\u70b9\u8fed\u4ee3\u6536\u655b\u8fd0\u52a8\uff0c\u4ece\u800c\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u5408\u6210\u8fdc\u8ddd\u79bb\u8fd0\u52a8\u3002</li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#related-work","title":"Related Work","text":"<p>\u65e0\u4e09\u7ef4\u573a\u666f\u4e0b\u7684\u4eba\u4f53\u8fd0\u52a8\u9884\u6d4b\u3002\u4eba\u7c7b\u8fd0\u52a8\u52a8\u6001\u9884\u6d4b\u662f\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u56fe\u5f62\u5b66\u9886\u57df\u7814\u7a76\u5df2\u4e45\u7684\u95ee\u9898\u3002\u7ecf\u5178\u7684\u7814\u7a76\u6210\u679c\u5305\u62ec\u4f7f\u7528\u9690\u9a6c\u5c14\u53ef\u592b\u94fe [5] \u548c\u9ad8\u65af\u8fc7\u7a0b [64] \u4ee5\u53ca\u57fa\u4e8e\u7269\u7406\u5b66\u7684\u6a21\u578b [44] \u9884\u6d4b\u672a\u6765\u7684\u8fd0\u52a8\u3002\u6700\u8fd1\uff0c\u5faa\u73af\u795e\u7ecf\u7f51\u7edc[19, 31]\u88ab\u7528\u4e8e\u8fd0\u52a8\u9884\u6d4b[17, 48, 3]\uff0c\u8fd8\u4e0e\u56fe\u795e\u7ecf\u7f51\u7edc[36, 47, 40, 11]\u548c\u53d8\u5f02\u81ea\u52a8\u7f16\u7801\u5668[35]\u7ed3\u5408\u4f7f\u7528\uff0c\u4ee5\u589e\u52a0\u591a\u6837\u6027[23, 74]\u3002Yuan\u7b49\u4eba[71]\u3002\u5faa\u73af\u65b9\u6cd5\u7684\u4e00\u4e2a\u56fa\u6709\u95ee\u9898\u662f\u968f\u65f6\u95f4\u6f02\u79fb[1]\u3002 \u6700\u8fd1\u7684\u4e00\u4e9b\u65b9\u6cd5\u91c7\u7528\u53d8\u6362\u5668\u6765\u751f\u6210\u65e0\u6761\u4ef6\u7684\u6216\u4ee5\u6587\u5b57\u548c\u97f3\u4e50\u4e3a\u6761\u4ef6\u7684\u8fd0\u52a8\u5e8f\u5217 [1, 41, 39, 51, 52]\u3002\u6211\u4eec\u4e5f\u662f\u57fa\u4e8e\u53d8\u6362\u5668\u67b6\u6784\uff0c\u4f46\u76ee\u6807\u662f\u5728\u771f\u5b9e\u4e09\u7ef4\u573a\u666f\u4e2d\u751f\u6210\u8fd0\u52a8\u3002 Motion Inbetweening [14, 25, 49, 70, 2, 34] \u662f\u8fd0\u52a8\u5408\u6210\u7684\u53e6\u4e00\u79cd\u7ecf\u5178\u6a21\u5f0f\uff0c\u5176\u4efb\u52a1\u662f\u5728\u52a8\u753b\u5e08\u63d0\u4f9b\u7684\u5173\u952e\u5e27\u4e4b\u95f4\u586b\u5145\u5e27\u3002 \u6211\u4eec\u7684\u65b9\u6cd5\u57fa\u4e8e\u6700\u8fd1\u5728\u53d8\u6362\u5668\u67b6\u6784\u65b9\u9762\u53d6\u5f97\u7684\u8fdb\u5c55[41]\uff0c\u4ee5\u53ca\u8fd0\u52a8\u4e2d\u95f4\u5316\u7b49\u7ecf\u5178\u7406\u5ff5\uff0c\u5e76\u7ed3\u5408\u4e86\u5178\u578b\u5750\u6807\u5e27\u548c\u52a8\u4f5c\u5173\u952e\u70b9\u8868\u793a\u6cd5\u7684\u65b0\u601d\u8def\uff0c\u4ee5\u751f\u6210\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u8fd0\u52a8\u3002</p> <p>\u89c6\u9891\u6e38\u620f\u4e2d\u7684\u89d2\u8272\u63a7\u5236\u3002\u8fd0\u52a8\u5339\u914d[54]\u3001\u5176\u5b66\u4e60\u53d8\u4f53[9, 32]\u548c\u8fd0\u52a8\u56fe[38, 15, 37, 56, 55]\u662f\u4e1a\u754c\u5e38\u7528\u7684\u751f\u6210\u8fd0\u52a8\u5e8f\u5217\u7684\u7ecf\u5178\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u8fd0\u52a8\u5e8f\u5217\u7531\u73af\u5883\u548c\u7528\u6237\u6307\u5b9a\u7684\u7ea6\u675f\u6761\u4ef6\u63a7\u5236\u3002\u4e0e\u6211\u4eec\u7684\u76ee\u6807\u7c7b\u4f3c\uff0c\u4e00\u4e9b\u4f5c\u54c1[53, 7]\u5c06\u8fd9\u4e9b\u65b9\u6cd5\u4e0e IK \u7ed3\u5408\u4f7f\u7528\uff0c\u751f\u6210\u5408\u6210\u573a\u666f\u4e2d\u7684\u4eba\u7c7b\u884c\u4e3a\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u9700\u8981\u5927\u91cf\u4eba\u529b\u624d\u80fd\u5236\u4f5c\u51fa\u903c\u771f\u7684\u52a8\u753b\uff0c\u800c IK \u65b9\u6cd5\u5f88\u5bb9\u6613\u4ea7\u751f\u975e\u903c\u771f\u7684\u52a8\u753b\u3002 Holden \u7b49\u4eba[33] \u7684\u6df1\u5ea6\u5b66\u4e60\u53d8\u4f53\u5728 RNN \u4e2d\u5f15\u5165\u4e86\u76f8\u4f4d\u6761\u4ef6\uff0c\u4ee5\u6a21\u62df\u884c\u8d70\u8fd0\u52a8\u7684\u5468\u671f\u6027\u3002\u5728 Starke \u7b49\u4eba[58, 60, 59]\u7684\u51e0\u9879\u7814\u7a76\u4e2d\uff0c\u5c40\u90e8\u76f8\u4f4d\u7684\u6982\u5ff5\u88ab\u6269\u5c55\u7528\u4e8e\u5408\u6210\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u3001\u7bee\u7403\u8fd0\u52a8\u548c\u6b66\u672f\u8fd0\u52a8\u3002\u6240\u6709\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u80fd\u751f\u6210\u4ee4\u4eba\u4fe1\u670d\u7684\u8fd0\u52a8\uff0c\u4f46\u5bf9\u4e8e\u975e\u5468\u671f\u6027\u8fd0\u52a8\u800c\u8a00\uff0c\u76f8\u4f4d\u5e76\u4e0d\u76f4\u89c2\uff0c\u901a\u5e38\u9700\u8981\u624b\u52a8\u6807\u6ce8\u3002</p> <p>\u4ee5\u573a\u666f\u4e3a\u6761\u4ef6\u7684\u9759\u6001\u4eba\u4f53\u59ff\u6001\u3002\u4eba\u3001\u573a\u666f\u548c\u7269\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u56fe\u5f62\u5b66\u4e2d\u53e6\u4e00\u4e2a\u7ecf\u5e38\u7814\u7a76\u7684\u8bfe\u9898\u3002\u7ecf\u5178\u4f5c\u54c1\u5305\u62ec\u4e09\u7ef4\u7269\u4f53\u53bb\u4fdd\u62a4\u65b9\u6cd5 [20, 21] \u548c\u5229\u7528\u4eba\u4f53\u59ff\u52bf\u8fdb\u884c\u627f\u53d7\u529b\u9884\u6d4b\u7684\u65b9\u6cd5 [12, 18, 16]\u3002 \u6700\u8fd1\u6709\u51e0\u9879\u7814\u7a76\u5229\u7528\u6700\u8fd1\u6355\u83b7\u7684\u4eba\u673a\u4ea4\u4e92\u6570\u636e\u96c6[27, 22, 57, 4, 63, 6]\uff0c\u4ee5\u4e09\u7ef4\u573a\u666f\u4e3a\u6761\u4ef6\u751f\u6210\u53ef\u4fe1\u7684\u9759\u6001\u59ff\u52bf[42, 74, 68, 72, 28, 76]\u3002\u4e0e\u9759\u6001\u59ff\u52bf\u4e0d\u540c\uff0c\u6211\u4eec\u8981\u751f\u6210\u4e0e\u573a\u666f\u76f8\u4e00\u81f4\u7684\u52a8\u4f5c\uff0c\u800c\u8fd9\u8981\u96be\u5f97\u591a\u3002</p> <p>\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u5408\u6210\u3002\u4e00\u4e9b\u7814\u7a76\u5229\u7528\u5f3a\u5316\u5b66\u4e60\u6765\u5408\u6210\u5408\u6210\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u5bfc\u822a[43, 75]\u3002\u5176\u4ed6\u4f5c\u54c1\u5219\u4e13\u6ce8\u4e8e\u5355\u4e00\u52a8\u4f5c\uff0c\u5982\u6293\u53d6 [62, 69]\uff0c\u4f46\u6ca1\u6709\u5c55\u793a\u65b0\u52a8\u4f5c\u7684\u8f6c\u6362\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5e76\u6ca1\u6709\u5728\u6709\u591a\u4e2a\u7269\u4f53\u548c\u6742\u6ce2\u7684\u771f\u5b9e\u4e09\u7ef4\u573a\u666f\u4e2d\u8fdb\u884c\u6f14\u793a\u3002\u6700\u8fd1\u7684\u771f\u5b9e\u52a8\u4f5c\u6570\u636e\u96c6 [27, 22, 57, 4, 63, 6] \u4e3a\u5408\u6210\u4e09\u7ef4\u573a\u666f\u611f\u77e5\u52a8\u4f5c\u7684\u65b9\u6cd5\u63d0\u4f9b\u4e86\u52a8\u529b [66, 65, 6, 67]\u3002\u8fd9\u4e9b\u6570\u636e\u96c6\u5bf9\u63a8\u52a8\u7814\u7a76\u8fdb\u5c55\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u5374\u65e0\u6cd5\u6355\u6349\u771f\u5b9e\u4e16\u754c\u573a\u666f\u7684\u4e30\u5bcc\u6027\u548c\u591a\u6837\u6027\u3002\u56e0\u6b64\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u901a\u5e38\u53ea\u5728 PROX [27] \u548c Matterport [8] \u7684\u5c0f\u573a\u666f\u4e0a\u8fdb\u884c\u6f14\u793a\u3002 \u6211\u4eec\u4ece Hassan \u7b49\u4eba\u7684\u7814\u7a76[26]\u548c Zhang \u7b49\u4eba\u7684\u7814\u7a76[73]\u4e2d\u6c72\u53d6\u7075\u611f\uff0c\u524d\u8005\u5c06\u8def\u5f84\u89c4\u5212\u4e0e\u795e\u7ecf\u8fd0\u52a8\u5408\u6210\u76f8\u7ed3\u5408\uff0c\u540e\u8005\u5219\u5408\u6210\u4e86\u63a5\u89e6\u63a7\u5236\u7684\u4eba\u6905\u4e92\u52a8\u3002\u8fd9\u4e9b\u65b9\u6cd5\u9700\u8981\u5c06\u5b64\u7acb\u7684\u4ea4\u4e92\u5bf9\u8c61\u7684\u51e0\u4f55\u5f62\u72b6\u4f5c\u4e3a\u8f93\u5165\uff0c\u56e0\u6b64\u5f88\u96be\u63a8\u5e7f\u5230\u771f\u5b9e\u7684\u4e09\u7ef4\u573a\u666f\u4e2d\u3002\u4e0e\u8fd9\u4e9b\u65b9\u6cd5\u4e0d\u540c\u7684\u662f\uff0c\u6211\u4eec\u5728\u901a\u7528\u7684\u771f\u5b9e\u4e09\u7ef4\u573a\u666f\u4e2d\u6f14\u793a\u4e86\u957f\u94fe\u5f0f\u52a8\u4f5c\u5e8f\u5217\uff0c\u6211\u4eec\u7684\u539f\u70b9\u89c4\u8303\u5316\u548c\u52a8\u4f5c\u5173\u952e\u70b9\u4f7f\u5176\u6210\u4e3a\u53ef\u80fd\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#method","title":"Method","text":"<p>\u6211\u4eec\u7684\u65b9\u6cd5\u5c06\u4e00\u4e2a\u79cd\u5b50\u8fd0\u52a8\u5e8f\u5217\u548c\u4e00\u7cfb\u5217\u52a8\u4f5c\u5173\u952e\u70b9 {a1, . an} \u6307\u5b9a\u573a\u666f\u4e2d\u4e0d\u540c\u4f4d\u7f6e\u7684\u4e92\u52a8\u3002\u8fd9\u4e9b\u5173\u952e\u70b9\u53ef\u4ee5\u7531\u7528\u6237\u6307\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8bed\u8a00\u547d\u4ee4\u548c\u573a\u666f\u5206\u5272\u751f\u6210\uff08\u7b2c 3.2 \u8282\uff09\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u5408\u6210\u4ece\u79cd\u5b50\u52a8\u4f5c\u5f00\u59cb\u5e76\u5728\u8f93\u5165\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u52a8\u4f5c\u5173\u952e\u70b9\u4e4b\u95f4\u8fc7\u6e21\u7684\u52a8\u4f5c\u3002 \u7b2c\u4e00\u6b65\u662f\u5229\u7528\u9006\u8fd0\u52a8\u5b66\u548c\u59ff\u52bf\u5148\u51b3\u6761\u4ef6\uff083.3\uff09\u4f18\u5316\u9002\u5408\u76ee\u6807\u4f4d\u7f6e\u52a8\u4f5c\u5173\u952e\u70b9\u7684\u59ff\u52bf\u3002\u8fd9\u4e9b\u59ff\u52bf\u4e0e\u8d77\u59cb\u79cd\u5b50\u52a8\u4f5c\u4e00\u8d77\u4f5c\u4e3a\u951a\u70b9\uff0c\u6307\u5bfc\u52a8\u4f5c\u5408\u6210\u8fc7\u7a0b\u3002 \u901a\u8fc7\u5c06\u573a\u666f\u65e0\u5173\u7684\u8fd0\u52a8\u6355\u6349\u6570\u636e\u7f6e\u4e8e\u4ee5\u76ee\u6807\u4e3a\u4e2d\u5fc3\u7684\u6807\u51c6\u5750\u6807\u6846\u67b6\u4e2d\uff08\u7b2c 3.4 \u8282\uff09\uff0c\u6211\u4eec\u8bad\u7ec3 Walknet\uff08\u7b2c 3.5 \u8282\uff09\u548c TransNet\uff08\u7b2c 3.6 \u8282\uff09\uff0c\u524d\u8005\u7528\u4e8e\u5408\u6210\u4e0e\u6807\u51c6\u5750\u6807\u6846\u67b6\u539f\u70b9\u76f8\u63a5\u7684\u6b65\u884c\u8fd0\u52a8\uff0c\u540e\u8005\u7528\u4e8e\u5408\u6210\u79cd\u5b50\u8fd0\u52a8\u5e8f\u5217\u4e0e\u540c\u6837\u4f4d\u4e8e\u539f\u70b9\u7684\u76ee\u6807\u59ff\u52bf\u4e4b\u95f4\u7684\u8fd0\u52a8\u3002\u5728\u6d4b\u8bd5\u65f6\uff08\u89c1\u56fe 2\uff09\uff0cWalkNet \u7528\u4e8e\u6cbf\u7740\u7528\u8def\u5f84\u89c4\u5212\u7b97\u6cd5\u8ba1\u7b97\u51fa\u7684\u8def\u5f84\u5230\u8fbe\u89c4\u8303\u5316\u7684\u4e2d\u95f4\u76ee\u6807\uff0c\u4ece\u800c\u901a\u8fc7\u8fde\u7eed\u5230\u8fbe\u539f\u70b9\u4ea7\u751f\u957f\u65f6\u95f4\u8fd0\u52a8\u3002\u4e00\u65e6\u884c\u8d70\u8fd0\u52a8\u5230\u8fbe\u951a\u59ff\u52bf\u9644\u8fd1\uff0cTransNet \u5c31\u4f1a\u5408\u6210\u4ece\u884c\u8d70\u8fd0\u52a8\u5230\u951a\u59ff\u52bf\u7684\u8f6c\u6362\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5408\u6210\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u8fd0\u52a8\uff0c\u800c\u65e0\u9700\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u8fd0\u52a8\u6570\u636e\u3002\u6211\u4eec\u7684\u6846\u67b6\u5177\u6709\u901a\u7528\u6027\u548c\u9ad8\u5ea6\u6a21\u5757\u5316\u7684\u7279\u70b9\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u65b0\u7684\u8fd0\u52a8\u5408\u6210\u65b9\u6cd5\u5bf9\u5176\u8fdb\u884c\u66f4\u65b0\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#smpl-body-model","title":"SMPL Body Model","text":"<p>\u6211\u4eec\u4f7f\u7528 SMPL \u8eab\u4f53\u6a21\u578b [45] \u6765\u8868\u793a\u4eba\u4f53\u3002SMPL \u662f\u4e00\u4e2a\u53ef\u5fae\u51fd\u6570 M(j,\u03b8,t,\u03b2)\uff0c\u5b83\u5c06\u5168\u5c40\u8eab\u4f53\u65b9\u5411 \u03d5\u3001\u59ff\u52bf \u03b8\u3001\u5e73\u79fb t \u548c\u5f62\u72b6 \u03b2 \u53c2\u6570\u6620\u5c04\u5230\u4eba\u4f53\u7f51\u683c\u7684\u9876\u70b9\u4ee5\u53ca SMPL \u9aa8\u67b6\u7684\u4e09\u7ef4\u5173\u8282\u4f4d\u7f6e\u3002\u6211\u4eec\u5047\u8bbe \u03b2 \u5728\u6211\u4eec\u7684\u65b9\u6cd5\u4e2d\u59cb\u7ec8\u4fdd\u6301\u9759\u6001\u3002\u6211\u4eec\u7528 SMPL \u53c2\u6570\u5143\u7ec4\u7684\u6709\u5e8f\u5217\u8868\u6765\u8868\u793a\u8fd0\u52a8\u5e8f\u5217\u3002\u4f8b\u5982\uff0cC = [(r, \u03d5, \u03b8)j ]j=1:D \u8868\u793a\u5305\u542b D \u4e2a\u5e27\u7684\u8fd0\u52a8\u5e8f\u5217\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#generating-keypoints-in-a-scene","title":"Generating Keypoints in a Scene","text":"<p>\u5173\u952e\u70b9\u53ef\u4ee5\u901a\u8fc7\u4e09\u7ef4\u7528\u6237\u754c\u9762\u6709\u6548\u6536\u96c6\uff08\u5982\u9644\u56fe\u6240\u8ff0\uff09\uff0c\u4e5f\u53ef\u4ee5\u4ece\u573a\u666f\u7684\u51e0\u4f55\u56fe\u5f62\u4e2d\u63a8\u65ad\u51fa\u5173\u952e\u70b9\uff0c\u7136\u540e\u901a\u8fc7\u52a8\u4f5c\u6807\u7b7e\u6216\u8bed\u8a00\u751f\u6210\u3002\u56fe 4 \u662f\u81ea\u52a8\u751f\u6210\u5173\u952e\u70b9\u7684\u4e00\u4e2a\u793a\u4f8b\u3002\u7ed9\u5b9a\u4e00\u4e2a\u5e26\u6709\u8bed\u4e49\u6807\u7b7e\u548c\u4efb\u52a1\u8bed\u8a00\u63cf\u8ff0\u7684\u573a\u666f\u70b9\u4e91\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7b80\u5355\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u6765\u751f\u6210\u5173\u952e\u70b9\uff0c\u4ece\u800c\u5408\u6210\u6240\u63cf\u8ff0\u7684\u8fd0\u52a8\u3002\u66f4\u591a\u8be6\u60c5\u8bf7\u53c2\u89c1\u9644\u6ce8\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#from-action-keypoints-to-an-anchor-pose","title":"From Action Keypoints to an Anchor Pose","text":"<p>\u7b2c\u4e00\u6b65\u662f\u6839\u636e\u76ee\u6807\u4f4d\u7f6e a = {ki}i=1 \u7684\u52a8\u4f5c\u5173\u952e\u70b9\u63a8\u65ad\u59ff\u52bf\uff0c\u5176\u4e2d ki\u2208 R3 \u8868\u793a\u76f8\u5e94 SMPL \u5173\u8282\u7684\u7406\u60f3\u4f4d\u7f6e\uff0c\u7528 mi(-) \u8868\u793a\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u901a\u5e38\u53ea\u8981\u4e09\u5230\u56db\u4e2a\u5173\u8282\uff08P = 3\uff0c4\uff09\u5c31\u8db3\u591f\u4e86\u3002\u7531\u4e8e\u95ee\u9898\u4e25\u91cd\u53d7\u9650\uff0c\u6211\u4eec\u5bf9 VPOSER [50] \u7684\u6f5c\u7a7a\u95f4\u8fdb\u884c\u4f18\u5316\uff0c\u7528 z \u8868\u793a\u3002\u5c06 f(z) \ue037\u2192 (\u03d5, \u03b8) \u4f5c\u4e3a\u4ece\u6f5c\u7a7a\u95f4 z \u5230 SMPL \u59ff\u6001\u53c2\u6570\u7684\u6620\u5c04\uff0c\u6211\u4eec\u6700\u5c0f\u5316\u4ee5\u4e0b\u76ee\u6807</p> <p></p> <p>\u8bf7\u53c2\u9605\u8865\u5145\u6750\u6599\u4e86\u89e3\u66f4\u591a\u7ec6\u8282\uff0c\u4ee5\u786e\u4fdd\u4f18\u5316\u6548\u679c\u826f\u597d\u3002\u6211\u4eec\u5bf9\u6bcf\u4e2a\u76ee\u6807\u52a8\u4f5c a1 ... aN \u91cd\u590d\u8fd9\u4e00\u6b65\u9aa4\uff0c\u5f97\u5230 N \u4e2a\u59ff\u52bf\u951a A = {tiA, \u03d5i , \u03b8i }i=1:N \u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#canonical-coordinate-frame","title":"Canonical Coordinate Frame","text":"<p>\u6211\u4eec\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u5408\u6210\u8fd0\u52a8\u7684\u5173\u952e\u60f3\u6cd5\u4e4b\u4e00\uff0c\u5c31\u662f\u8ba9\u53d8\u6362\u5668\u5408\u6210\u7684\u8fd0\u52a8\u59cb\u7ec8\u5728\u4e00\u4e2a\u6807\u51c6\u5750\u6807\u6846\u67b6\u7684\u539f\u70b9\u5904\u6c47\u5408\u3002\u8fd9\u6837\uff0c\u5728\u6d4b\u8bd5\u65f6\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fde\u7eed\u5230\u8fbe\u539f\u70b9\u5904\u7684\u4e0b\u4e00\u4e2a\u76ee\u6807\u6765\u5408\u6210\u957f\u8fd0\u52a8\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5229\u7528\u5e8f\u5217\u7247\u6bb5\u4e2d\u6700\u540e\u4e00\u5e27\u7684\u5e73\u9762\u53d8\u6362 tC \u548c\u65cb\u8f6c RC \u5bf9\u8bad\u7ec3\u5e8f\u5217\u7247\u6bb5\u8fdb\u884c\u89c4\u8303\u5316\u5904\u7406\uff0c\u5177\u4f53\u65b9\u6cd5\u5982\u4e0b</p> <p></p> <p>\u6839\u636e\u6784\u9020\uff0c\u8fd9\u79cd\u53d8\u6362\u4f1a\u8f93\u51fa\u4e00\u7ec4\u65b0\u7684 L \u5e27[(rC , \u8812C , \u80c3)j ]j=1:L\uff0c\u5176\u4e2d\u6700\u540e\u4e00\u4e2a\u59ff\u52bf\u4f4d\u4e8e\u539f\u70b9\uff0c\u5e76\u671d\u5411\u7edf\u4e00\u7684\u5b9a\u5411\u8f74\u7eac\uff08\u4efb\u610f\u56fa\u5b9a\u8f74\uff09\u3002\u8ba9 X \u8868\u793a\u4e00\u4e2a\u77e9\u9635\uff0c\u5176\u5217\u662f\u77e2\u91cf\u5316\u7684\u8fd0\u52a8\u53c2\u6570\uff08\u59ff\u52bf\u548c\u53d8\u6362\u7684\u7ec4\u5408\uff09\u3002 \u6211\u4eec\u5c06\u4f7f\u7528\u4ee5\u4e0b\u7b26\u53f7\u6765\u53bb\u6389\u516c\u5f0f\uff082\uff09\u4e2d\u5bf9\u4e00\u4e2a\u5b8c\u6574\u5e8f\u5217\u7684\u5178\u578b\u5316\uff0c\u5373</p> <p></p> <p>\u5728\u4ee5\u76ee\u6807\u4e3a\u4e2d\u5fc3\u7684\u5178\u578b\u534f\u540c\u5e27\u4e2d\u5408\u6210\u8fd0\u52a8\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u5408\u6210\u4e09\u7ef4\u573a\u666f\u4e2d\u6cbf\u8def\u5f84\u884c\u8d70\u7684\u8fd0\u52a8\uff08\u7b2c 3.5 \u8282\uff09\u4ee5\u53ca\u8fdb\u51fa\u52a8\u4f5c\u7684\u8f6c\u6362\uff08\u7b2c 3.6 \u8282\uff09\uff0c\u800c\u65e0\u9700\u573a\u666f\u6ce8\u518c\u6570\u636e\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#walknet","title":"WalkNet","text":"<p>\u8bad\u7ec3 \u6211\u4eec\u4f7f\u7528\u957f\u5ea6\u53ef\u53d8\u7684 L \u89c4\u8303\u5316\u884c\u8d70\u5e8f\u5217\u7247\u6bb5\uff08\u6700\u540e\u4e00\u4e2a\u59ff\u52bf\u4f4d\u4e8e\u539f\u70b9\uff09\u6765\u8bad\u7ec3 WalkNet\u3002WalkNet \u5c06 K \u4e2a\u8fd0\u52a8\u5e27\u4f5c\u4e3a\u8f93\u5165 Winp = [(rW , \u03d5W , \u03b8W )j ]j=1:K \u5e76\u9884\u6d4b\u5e8f\u5217\u4e2d\u7684\u4e0b K \u4e2a\u5e27 Wout = [(rW , \u03d5W , \u03b8W )j ]j=K:2K \u3002\u4ece\u8bad\u7ec3\u884c\u8d70\u5e8f\u5217\u4e2d\u968f\u673a\u62bd\u53d6\u5927\u5c0f\u4e3a 2K &lt; L \u7684\u8bad\u7ec3\u5b50\u7247\u6bb5\u3002 \u5982\u4e0a\u4e00\u8282\u6240\u8ff0\uff0c\u53d8\u6362\u5668\u5c06\u5e8f\u5217\u8868\u793a\u4e3a\u77e9\u9635\uff08\u5217\u4e3a\u53d8\u6362\u548c\u59ff\u52bf\uff09\uff0c\u8f93\u5165\u77e9\u9635 Xin\u2208RK\u00d7219 \uff0c\u8f93\u51fa\u77e9\u9635 Xout\u2208RK\u00d7219 \u3002\u6211\u4eec\u5c06\u5b66\u4e60\u5230\u7684\u6620\u5c04\u5e73\u8868\u793a\u4e3a T : Xin \ue037\u2192 Xout\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u8f93\u5165\u7684\u59ff\u52bf\u662f\u77e2\u91cf\u5316\u7684\u5173\u8282\u65cb\u8f6c\u77e9\u9635\uff0c\u8fd9\u4f7f\u5f97\u5b66\u4e60\u6bd4\u4f7f\u7528\u5173\u8282\u89d2\u5ea6\u66f4\u7a33\u5b9a\u3002</p> <p>\u6d4b\u8bd5\u65f6\u95f4\u3002\u6211\u4eec\u4f7f\u7528 WalkNet \u6cbf\u7740\u8f83\u957f\u7684\u8def\u5f84\u884c\u8fdb\uff0c\u65b9\u6cd5\u662f\u5c06\u8def\u5f84\u5206\u89e3\u4e3a\u4e0e\u539f\u70b9\u5bf9\u5e94\u7684\u4e2d\u95f4\u76ee\u6807\uff08\u56fe 3\uff09\u3002\u4e3a\u4e86\u907f\u5f00\u969c\u788d\u7269\u7a7f\u8d8a\u573a\u666f\uff0c\u6211\u4eec\u4f7f\u7528 A-star[24]\u8ba1\u7b97\u79cd\u5b50\u8fd0\u52a8 I \u548c\u7b2c\u4e00\u4e2a\u951a\u59ff\u52bf A1 \u4e4b\u95f4\u7684\u8def\u5f84\u3002\u6cbf\u7740\u8def\u5f84\uff0c\u6211\u4eec\u5bf9 P \u4e2a\u76ee\u6807\u8fdb\u884c\u91c7\u6837\uff0c\u5e76\u8ba1\u7b97\u8def\u5f84\u7684\u5207\u7ebf\uff1a{qp, lp \u2208 R3}p=1...P \u3002\u7136\u540e\uff0c\u6211\u4eec\u8fdb\u884c\u9012\u5f52\u89c4\u8303\u5316\uff0c\u4f7f\u5207\u7ebf lp \u4e0e\u89c4\u8303\u8f74 \u03b3 \u5bf9\u9f50\u3002</p> <p></p> <p>\u5176\u4e2d\uff0cexp(-)\u662f\u4ece\u87ba\u65cb\u5bf9\u79f0\u77e9\u9635 lp \u00d7 \u03b3 \u4e2d\u6062\u590d\u65cb\u8f6c\u7684\u6307\u6570\u6620\u5c04\u3002 \u56e0\u6b64\uff0c\u4ece\u76ee\u6807 p - 1 \u5230\u76ee\u6807 p \u7684\u8fd0\u52a8\u5e8f\u5217\u53ef\u4ee5\u901a\u8fc7\u89c4\u8303\u5316\u3001\u7528\u5b66\u4e60\u5230\u7684\u6620\u5c04 T \u9884\u6d4b\u672a\u6765\u8fd0\u52a8\u548c\u975e\u89c4\u8303\u5316\u6765\u83b7\u5f97</p> <p></p> <p>\u867d\u7136\u8f6c\u6362\u5668\u4f1a\u8f93\u51fa K \u4e2a\u672a\u6765\u5e27\uff0c\u4f46\u5728\u6d4b\u8bd5\u65f6\uff0c\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u6211\u4eec\u4f1a\u4ee5 1 \u7684\u6b65\u957f\u9012\u5f52\u4f7f\u7528\u8f6c\u6362\u5668\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6bcf\u6b21\u53ea\u9884\u6d4b\u4e00\u4e2a\u59ff\u52bf\uff0c\u800c\u820d\u5f03 K + 1 : 2K \u5e27\u3002\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\uff0c\u8fd0\u52a8\u59cb\u7ec8\u4ee5\u539f\u70b9\u4e3a\u4e2d\u5fc3\uff0c\u6211\u4eec\u65e0\u9700\u660e\u786e\u5730\u5c06\u76ee\u6807\u5750\u6807\u4f5c\u4e3a\u8f93\u5165\u53d1\u9001\u7ed9\u7f51\u7edc\uff0c\u4e5f\u4e0d\u4f1a\u53d1\u751f\u6f02\u79fb\u3002\u5f53\u6211\u4eec\u8db3\u591f\u63a5\u8fd1\u951a\u70b9\u59ff\u6001\u65f6\uff0c\u6211\u4eec\u4f7f\u7528 TransNet \u9884\u6d4b\u8fc7\u6e21\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#transnet","title":"TransNet","text":"<p>\u6211\u4eec\u5728\u4e00\u4e2a\u5178\u578b\u5316\u7684\u6846\u67b6\u4e2d\u518d\u6b21\u5408\u6210\u884c\u8d70\u548c\u52a8\u4f5c\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u653e\u7f6e\u5728\u5178\u578b\u5750\u6807\u6846\u67b6\u4e2d\u7684 AMASS \u5e8f\u5217\u6765\u8bad\u7ec3 TransNet\uff08\u57fa\u4e8e\u53d8\u6362\u5668\u7684\u8fd0\u52a8\u5207\u6362\u5668\uff09\u3002TransNet \u7684\u4efb\u52a1\u662f\u4ece\u79cd\u5b50\u5e8f\u5217 Xin \u5230\u76ee\u6807\u951a\u59ff\u52bf\u7684\u8fd0\u52a8\u586b\u5145\u3002</p> <p>\u8fd9\u90e8\u5206\u4e0d\u597d\u590d\u5236\uff0c\u4e0d\u7ffb\u8bd1\u4e86</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#chained-actions","title":"Chained actions","text":"<p>\u6709\u4e86\u6211\u4eec\u7684\u6a21\u578b\u548c\u8868\u5f81\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u8fde\u9501\u64cd\u4f5c\u3002\u5728\u8fd0\u884c\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u4e0d\u540c\u7684\u4f4d\u7f6e\u6ee1\u8db3\u4efb\u610f\u6570\u91cf\u7684\u52a8\u4f5c\u5173\u952e\u70b9 {a1, ... aN }\u3002\u9996\u5148\uff0c\u6211\u4eec\u6309\u7167 3.3 \u8282\u4e2d\u7684\u8bf4\u660e\u8ba1\u7b97\u951a\u70b9\u4f4d\u7f6e\u3002\u7528 A* \u8ba1\u7b97\u51fa\u8fde\u63a5\u884c\u52a8\u4f4d\u7f6e\u7684\u65e0\u969c\u788d\u8def\u5f84\u3002\u6211\u4eec\u4f9d\u9760 WalkNet \u8ffd\u8e2a\u8def\u5f84\uff0c\u76f4\u5230\u8db3\u591f\u63a5\u8fd1\u7b2c\u4e00\u4e2a\u951a\u70b9\u4f4d\u7f6e\u3002\u6211\u4eec\u5c06 WalkNet \u7684\u6700\u540e M/2 \u4e2a\u9884\u6d4b\u5e27\u548c\u951a\u70b9\u59ff\u52bf\u8f93\u5165 TransNet\uff0c\u9884\u6d4b\u5411\u7b2c\u4e00\u4e2a\u951a\u70b9\u59ff\u52bf\u7684\u8fc7\u6e21\u3002\u4e3a\u4e86\u8fc7\u6e21\u5230\u5176\u4ed6\u4f4d\u7f6e\uff0c\u6211\u4eec\u4e5f\u4f7f\u7528 TransNet\uff0c\u4f46\u4e0d\u505a\u4efb\u4f55\u4fee\u6539\u3002\u6211\u4eec\u6cbf\u7740\u4ece a1 \u5230 a2 \u7684\u8def\u5f84\uff0c\u4ee5\u56fa\u5b9a\u8ddd\u79bb \u03b4 \u53d6\u6837\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5e76\u4ece\u6570\u636e\u5e93\u4e2d\u653e\u7f6e\u4e00\u4e2a\u884c\u8d70\u59ff\u52bf\u3002\u7136\u540e\uff0cTransNet \u53ef\u4ee5\u8fc7\u6e21\u5230\u8fd9\u4e2a\u884c\u8d70\u59ff\u6001\uff08\u56fe 5\uff09\u3002\u7136\u540e\uff0c\u6211\u4eec\u6fc0\u6d3b WalkNet\uff0c\u91cd\u590d\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u76f4\u5230\u6240\u6709\u52a8\u4f5c\u90fd\u6267\u884c\u5b8c\u6bd5\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528 TransNet \u5728\u540c\u4e00\u4f4d\u7f6e\u6267\u884c\u591a\u4e2a\u52a8\u4f5c\uff0c\u4f8b\u5982\u5728\u4e0d\u540c\u9ad8\u5ea6\u6293\u53d6\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#experiments","title":"Experiments","text":"<p>\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u6211\u4eec\u65b9\u6cd5\u7684\u5b9e\u65bd\u7ec6\u8282\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u628a\u6211\u4eec\u7684\u65b9\u6cd5\u4e0e\u73b0\u6709\u65b9\u6cd5\u8fdb\u884c\u6bd4\u8f83\u3002\u5b9e\u9a8c\u8868\u660e\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u660e\u663e\u4f18\u4e8e\u73b0\u6709\u7684\u57fa\u7ebf\u65b9\u6cd5\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u6211\u4eec\u7684\u8bbe\u8ba1\u9009\u62e9\uff0c\u6700\u540e\u4ecb\u7ecd\u6211\u4eec\u65b9\u6cd5\u7684\u5b9a\u6027\u7ed3\u679c\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#implementation-details","title":"Implementation Details","text":"<p>WalkNet \u548c TransNet \u662f BERT [13] \u98ce\u683c\u7684\u5168\u6ce8\u610f\u529b\u8f6c\u6362\u5668\u3002\u4e24\u8005\u90fd\u7531 3 \u4e2a\u6ce8\u610f\u529b\u5c42\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5c42\u7531 8 \u4e2a\u6ce8\u610f\u529b\u5934\u7ec4\u6210\u3002\u6211\u4eec\u5bf9\u8fd9\u4e24\u79cd\u8f6c\u6362\u5668\u7684\u5d4c\u5165\u5927\u5c0f\u90fd\u8bbe\u5b9a\u4e3a 512\u3002\u66f4\u591a\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605\u8865\u5145\u6750\u6599\u3002\u5728\u8bad\u7ec3\u4e24\u4e2a\u8f6c\u6362\u5668\u65f6\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u7387\u8bbe\u7f6e\u4e3a 1e-5\u3002\u4e24\u4e2a\u7f51\u7edc\u90fd\u4f7f\u7528 L2 \u635f\u5931\u8fdb\u884c\u8bad\u7ec3\u3002\u6211\u4eec\u8bbe\u7f6e M = 120\uff0cK = 30\u3002\u6211\u4eec\u5bf9\u4e09\u4e2a\u4e0d\u540c\u7684 M \u503c\u8fdb\u884c\u4e86\u5b9e\u9a8c\uff0c\u53d1\u73b0 M = 120 \u4ea7\u751f\u7684\u6ed1\u811a\u73b0\u8c61\u6700\u5c11\u3002\u8bf7\u53c2\u9605\u8be5\u5b9e\u9a8c\u7684\u8865\u5145\u6750\u6599\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#datasets","title":"Datasets","text":"<p>\u8fd0\u52a8\u6570\u636e\uff1a \u4e3a\u4e86\u8bad\u7ec3 TransNet \u548c Walknet\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u5927\u578b mocap \u6570\u636e\u96c6 AMASS [46]\u3002\u5177\u4f53\u65b9\u6cd5\u8bf7\u53c2\u89c1\u8865\u5145\u6750\u6599\u3002</p> <p>\u573a\u666f\u6570\u636e\u96c6\uff1a \u6211\u4eec\u8bc1\u660e\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u80fd\u591f\u5728 Matter-port-3D\u3001HPS\u3001Replica \u548c ScanNet \u6570\u636e\u96c6\u7684\u573a\u666f\u4e2d\u751f\u6210\u903c\u771f\u7684\u4eba\u4f53\u8fd0\u52a8\u3002\u6240\u6709\u8fd9\u4e9b\u6570\u636e\u96c6\u90fd\u662f\u4f7f\u7528 RGB-D \u626b\u63cf\u4eea\u6216\u6fc0\u5149\u96f7\u8fbe\u626b\u63cf\u4eea\u91cd\u5efa\u7684\uff0c\u626b\u63cf\u9762\u79ef\u4ece 20 \u5e73\u65b9\u7c73\u5230 1000 \u5e73\u65b9\u7c73\u4e0d\u7b49\u3002Replica \u548c Matterport \u573a\u666f\u5305\u542b\u5b8c\u7f8e\u7684\u51e0\u4f55\u56fe\u5f62\uff0c\u800c ScanNet \u573a\u666f\u5219\u4e0d\u7136\u3002\u6211\u4eec\u7684\u65b9\u6cd5\u80fd\u591f\u9002\u7528\u4e8e\u6240\u6709\u8fd9\u4e9b\u573a\u666f\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#evaluation-metrics","title":"Evaluation Metrics:","text":"<p>\u6211\u4eec\u5229\u7528\u611f\u77e5\u7814\u7a76\u548c\u811a\u90e8\u6ed1\u884c\u6307\u6807\uff0c\u5c06\u6211\u4eec\u7684\u65b9\u6cd5\u4e0e\u73b0\u6709\u7684\u57fa\u7ebf\u65b9\u6cd5\u8fdb\u884c\u6bd4\u8f83\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u4f7f\u7528\u76f8\u540c\u7684\u811a\u6ed1\u5ea6\u91cf\u6807\u51c6\u6d88\u51cf\u4e86\u6211\u4eec\u65b9\u6cd5\u7684\u5404\u4e2a\u7ec4\u6210\u90e8\u5206\u3002 \u611f\u77e5\u7814\u7a76\uff1a \u6211\u4eec\u5408\u6210\u4e24\u4e2a\u8fd0\u52a8\u5e8f\u5217--\u4e00\u4e2a\u4f7f\u7528\u6211\u4eec\u7684\u65b9\u6cd5\uff0c\u53e6\u4e00\u4e2a\u4f7f\u7528\u57fa\u7ebf\u65b9\u6cd5\uff0c\u5e76\u5728\u611f\u77e5\u7814\u7a76\u4e2d\u5411\u53c2\u4e0e\u8005\u5c55\u793a\u8fd9\u4e24\u4e2a\u5408\u6210\u5e8f\u5217\u3002\u53c2\u4e0e\u8005\u9700\u8981\u56de\u7b54 \"\u54ea\u4e2a\u52a8\u4f5c\u770b\u8d77\u6765\u6700\u903c\u771f\uff1f\"\u548c \"\u54ea\u4e2a\u52a8\u4f5c\u6700\u80fd\u6ee1\u8db3\u573a\u666f\u7ea6\u675f\u6761\u4ef6\uff1f\u7814\u7a76\u7684\u65b9\u5f0f\u662f\u8feb\u4f7f\u53c2\u4e0e\u8005\u4ece\u9762\u524d\u7684\u4e24\u4e2a\u52a8\u4f5c\u4e2d\u9009\u62e9\u4e00\u4e2a\u3002 \u811a\u5e95\u6ed1\u884c (FS)\uff1a \u811a\u90e8\u6ed1\u52a8\u5ea6\u91cf\u662f\u6307\u5728\u5408\u6210\u8fd0\u52a8\u8fc7\u7a0b\u4e2d\u811a\u90e8\u6ed1\u52a8\u7684\u7a0b\u5ea6\uff0c\u5355\u4f4d\u4e3a\u5398\u7c73/\u5e27\u3002\u5bf9\u4e8e N \u5e27\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b</p> <p></p> <p>\u5176\u4e2d\uff0chp \u662f\u9876\u70b9\u7684\u9ad8\u5ea6\uff0cvp \u662f\u53f3\u811a\u8dbe\u4e0a\u7684\u811a\u9876\u70b9\u5728\u5e27 p \u4e2d\u7684\u901f\u5ea6\uff0cH = 2.5 \u5398\u7c73</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#comparison-with-baselines","title":"Comparison with Baselines","text":"<p>\u5982\u4e0a\u6240\u8ff0\uff0c\u76ee\u524d\u8fd8\u6ca1\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u5728\u4efb\u610f\u4e09\u7ef4\u573a\u666f\u4e2d\u8fdb\u884c\u8fde\u7eed\u8fd0\u52a8\u5408\u6210\u7684\u4efb\u52a1\u3002\u4e3a\u6c42\u5b8c\u6574\uff0c\u6211\u4eec\u5c3d\u529b\u5c06\u6211\u4eec\u7684\u65b9\u6cd5\u4e0e\u73b0\u6709\u7684\u4e09\u79cd\u65b9\u6cd5\u8fdb\u884c\u6bd4\u8f83\uff1a SAMP[26]\u3001GAMMA[75]\u3001Wang \u7b49\u4eba[66]\uff0c\u5b83\u4eec\u90fd\u662f\u901a\u8fc7\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u5bfc\u822a A* \u8def\u5f84\u6765\u751f\u6210\u52a8\u753b\u5f15\u5bfc\u8fd0\u52a8\u3002\u867d\u7136\u8fd9\u4e9b\u65b9\u6cd5\u4f7f\u7528\u4e86\u4e0d\u540c\u5f62\u5f0f\u7684\u52a8\u753b\u5f15\u5bfc\uff08\u5982\u52a8\u4f5c\u6807\u7b7e\uff09\uff0c\u4f46\u6211\u4eec\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u52a0\u5165\u4e86\u6211\u4eec\u7684\u65b9\u6cd5\u6240\u4f7f\u7528\u7684 KP \u4fe1\u606f\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u9664 GAMMA \u5916\uff0c\u8fd9\u4e9b\u57fa\u7ebf\u90fd\u65e0\u6cd5\u5728\u4e0d\u505a\u91cd\u5927\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u5e94\u7528\u4e8e\u4efb\u610f\u4e09\u7ef4\u573a\u666f\uff0c\u4e0b\u6587\u5c06\u5bf9\u6b64\u8fdb\u884c\u8bf4\u660e\u3002</p> <p>SAMP\uff1aSAMP \u5b8c\u5168\u7531 Unity \u7f16\u5199\uff0c\u53ea\u80fd\u5728\u5408\u6210\u573a\u666f\u4e2d\u5408\u6210\u5750\u548c\u8eba\u7684\u52a8\u4f5c\u3002\u4e0e SAMP \u4e0d\u540c\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u4e0d\u9700\u8981\u4eba\u5de5\u52a8\u4f5c\u6ce8\u91ca\u3002\u4ea4\u4e92\u5bf9\u8c61\u548c\u8981\u6267\u884c\u7684\u52a8\u4f5c\u662f\u4f5c\u4e3a\u8f93\u5165\u63d0\u4f9b\u7ed9 SAMP \u7684\u52a8\u753b\u6307\u5bfc\u3002SAMP \u901a\u8fc7\u4ea4\u4e92\u5bf9\u8c61\u7684\u5730\u7406\u6761\u4ef6\u548c\u5bfc\u822a A* \u8def\u5f84\u6765\u5408\u6210\u52a8\u4f5c\u3002\u4e3a\u4e86\u4e0e SAMP \u8fdb\u884c\u6bd4\u8f83\uff0c\u6211\u4eec\u5728\u4e00\u4e2a\u6d4b\u8bd5\u573a\u666f\u4e2d\u4f7f\u7528 Unity \u4e2d\u7684\u5408\u6210\u5bf9\u8c61\u6765\u8868\u793a\u4ea4\u4e92\u5bf9\u8c61\u3002\u6211\u4eec\u4f7f\u7528 KPs \u8868\u793a\u6d4b\u8bd5\u573a\u666f\u4e2d\u7684\u52a8\u4f5c\u65b9\u5411\uff0c\u5e76\u4f7f\u7528\u8be5\u65b9\u5411\u5c06\u6d4b\u8bd5\u4e09\u7ef4\u573a\u666f\u4e2d\u4f7f\u7528\u7684 A* \u8def\u5f84\u79fb\u690d\u5230 Unity \u4e2d\uff0c\u7136\u540e\u8fd0\u884c\u516c\u5f00\u53ef\u7528\u7684 SAMP \u4ee3\u7801\u3002\u6709\u5173\u5177\u4f53\u7ec6\u8282\uff0c\u8bf7\u53c2\u9605\u9644\u6ce8\u3002\u8bf7\u6ce8\u610f\uff0cSAMP \u4e0d\u80fd\u5408\u6210\u94fe\u5f0f\u52a8\u4f5c\uff0c\u4e5f\u4e0d\u80fd\u5728\u4efb\u610f\u4e09\u7ef4\u573a\u666f\u4e2d\u90e8\u7f72\u3002\u4f8b\u5982\uff0c\u5b83\u4e0d\u80fd\u5750\u5728\u697c\u68af\u4e0a\uff0c\u4e5f\u4e0d\u80fd\u5728\u4e66\u67b6\u9644\u8fd1\u6267\u884c\u6293\u53d6\u52a8\u4f5c\u3002\u7531\u4e8e SAMP \u4e5f\u80fd\u5728 A* \u8def\u5f84\u4e0a\u5bfc\u822a\uff0c\u56e0\u6b64\u4e3a\u4e86\u5b8c\u6574\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u6bd4\u8f83\u7ed3\u679c\u5305\u62ec\u5728\u5185\u3002</p> <p>Wang \u7b49\u4eba \u6211\u4eec\u5728 HPS\u3001Replica \u548c Matterport \u6570\u636e\u96c6\u7684\u573a\u666f\u4e0a\u8fd0\u884c Wang \u7b49\u4eba\u7684\u9884\u8bad\u7ec3\u4ee3\u7801\u3002\u6211\u4eec\u6ca1\u6709\u4f7f\u7528\u539f\u8bba\u6587\u4e2d\u7684\u52a8\u4f5c\u6807\u7b7e\u6765\u751f\u6210\u951a\u70b9\u59ff\u52bf\uff0c\u800c\u662f\u7528\u6211\u4eec\u7684\u9006\u8fd0\u52a8\u5b66\u6b65\u9aa4\u751f\u6210\u7684\u8fd0\u52a8\u951a\u70b9\u53d6\u4ee3\u4e86\u8fd9\u4e00\u6b65\u9aa4\u3002\u7531\u4e8e Wang \u7b49\u4eba\u7684\u7814\u7a76[66]\u662f\u4f7f\u7528 PROX \u6570\u636e\u96c6\u8fdb\u884c\u8bad\u7ec3\u7684\uff0c\u5e76\u901a\u8fc7\u660e\u786e\u7684\u573a\u666f\u51e0\u4f55\u6761\u4ef6\u6765\u540c\u6b65 A* \u8def\u5f84\u4e0a\u7684\u5bfc\u822a\u8fd0\u52a8\uff0c\u56e0\u6b64\u5b83\u6839\u672c\u65e0\u6cd5\u63a8\u5e7f\u5230\u8fd9\u4e9b\u6570\u636e\u96c6\u4e4b\u5916\u7684\u4e09\u7ef4\u573a\u666f\u3002</p> <p>GAMMA\uff1a GAMMA \u53ea\u80fd\u5bfc\u822a\u4e09\u7ef4\u573a\u666f\uff0c\u65e0\u6cd5\u5408\u6210\u4eba\u4e0e\u573a\u666f\u7684\u4e92\u52a8\u3002\u4e0e\u6211\u4eec\u65b9\u6cd5\u4e2d\u7684\u5bfc\u822a\u90e8\u5206\u7c7b\u4f3c\uff0c\u5b83\u4f7f\u7528\u8def\u5f84\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u4f5c\u4e3a\u52a8\u753b\u5f15\u5bfc\u3002\u4e3a\u4e86\u8fdb\u884c\u6bd4\u8f83\uff0c\u6211\u4eec\u4f7f\u7528 A* \u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u751f\u6210\u4e86\u4e00\u7ec4\u8def\u5f84\uff0c\u5e76\u4f7f\u7528 GAMMA \u548c\u6211\u4eec\u7684\u65b9\u6cd5\u5408\u6210\u4e86\u6cbf\u8be5\u8def\u5f84\u7684\u884c\u8d70\u52a8\u4f5c\u3002GAMMA \u65e0\u6cd5\u9075\u5faa\u8def\u5f84\u7684\u7cbe\u786e\u822a\u70b9\uff0c\u56e0\u6b64\u4f1a\u4e0e 3D \u573a\u666f\u4ea7\u751f\u660e\u663e\u7684\u7a7f\u63d2\u3002</p> <p>\u6709\u5173\u8fd9\u4e9b\u57fa\u7ebf\u5408\u6210\u7684\u8fd0\u52a8\u89c6\u89c9\u6548\u679c\uff0c\u8bf7\u53c2\u9605\u8865\u5145\u89c6\u9891\u3002\u6211\u4eec\u4f7f\u7528\u6bcf\u79cd\u65b9\u6cd5\u5728 5 \u4e2a\u4e0d\u540c\u573a\u666f\u4e2d\u5408\u6210\u4e86 5 \u4e2a\u603b\u65f6\u957f 300 \u79d2\u7684\u8fd0\u52a8\u5e8f\u5217\uff0c\u7528\u4e8e\u611f\u77e5\u7814\u7a76\u3002\u8868 1 1 \u4e2d\uff0c\u6211\u4eec\u62a5\u544a\u4e86 50 \u540d\u53c2\u4e0e\u8005\u7684\u611f\u77e5\u7814\u7a76\u7ed3\u679c\uff08\u89c1\u7b2c 4.3 \u8282\uff09\u3002\u6bcf\u4e00\u5217\u5bf9\u5e94\u7684\u662f\u9009\u62e9\u8be5\u5217\u6807\u9898\u5bf9\u5e94\u65b9\u6cd5\u7684\u7528\u6237\u767e\u5206\u6bd4\u3002\u6211\u4eec\u7684\u7ed3\u679c\u5f97\u5230\u4e86\u7edd\u5927\u591a\u6570\u53c2\u4e0e\u8005\u7684\u9752\u7750\u3002\u8868 3 3 \u4e2d\uff0c\u6211\u4eec\u62a5\u544a\u4e86\u4e0e\u811a\u6ed1\u6307\u6807\u76f8\u5bf9\u5e94\u7684\u6570\u5b57\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#ablation-studies","title":"Ablation Studies","text":"<p>\u6211\u4eec\u6bd4\u8f83\u4e86 TransNet \u548c SoTA Inbetweening \u65b9\u6cd5 NeMF [29]\uff0c\u5b83\u4eec\u90fd\u80fd\u5b8c\u6210\u8f6c\u5165\u548c\u8f6c\u51fa\u4efb\u52a1\u3002\u5bf9\u4e8e\u6211\u4eec\u5728\u6807\u51c6\u5750\u6807\u6846\u67b6\u4e2d\u586b\u5145 M -1 \u5e27\u7684\u4efb\u52a1\uff0cTransNet \u80fd\u4ea7\u751f\u66f4\u81ea\u7136\u7684\u52a8\u4f5c\uff0c\u800c\u811a\u90e8\u6ed1\u52a8\u8f83\u5c11\u3002\u6211\u4eec\u63a8\u6d4b\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u539f\u56e0\u662f NeMF \u662f\u4e00\u79cd\u901a\u7528\u7684\u5185\u7a7f\u68ad\u5668\uff0c\u53ef\u4ee5\u586b\u5145\u4efb\u610f\u6570\u91cf\u7684\u5e27\uff0c\u800c TransNet \u662f\u4e00\u79cd\u8fd0\u52a8\u5185\u7a7f\u68ad\u5668\uff0c\u4e13\u4e3a\u5728\u6807\u51c6\u5750\u6807\u5e27\u4e2d\u586b\u5145 M/2 -1 \u4e2a\u8fd0\u52a8\u5e27\u800c\u8bbe\u8ba1\u3002\u6211\u4eec\u5bf9 36 \u540d\u53c2\u4e0e\u8005\u8fdb\u884c\u4e86\u4e00\u9879\u65b0\u7684\u7528\u6237\u7814\u7a76\uff0c\u8981\u6c42\u7528\u6237\u901a\u8fc7 NeMF \u548c TransNet \u5bf9 20 \u4e2a\u8fd0\u52a8\u5e8f\u5217\u7684\u81ea\u7136\u5ea6\u8fdb\u884c\u8bc4\u5206\u3002\u7ed3\u679c\u89c1\u8868 2\u3002</p> <p>\u5176\u4ed6\u8def\u5f84\u8ddf\u8e2a\u65b9\u6cd5\u80fd\u5426\u53d6\u4ee3 WalkNet\uff1f\u6211\u4eec\u63d0\u4f9b\u4e86\u4e0e SAMP\u3001Wang \u7b49\u4eba\u548c GAMMA \u7684\u6bd4\u8f83\uff0c\u5b83\u4eec\u90fd\u662f\u5bfc\u822a A* \u8def\u5f84\u7684\u65b9\u6cd5\u3002\u6b63\u5982\u6211\u4eec\u7684\u5b9e\u9a8c\u6240\u8868\u660e\u7684\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u5728\u5bfc\u822a\u65b9\u9762\u4f18\u4e8e\u8fd9\u4e9b\u73b0\u6709\u65b9\u6cd5\u3002\u4e3a\u4e86\u8fdb\u4e00\u6b65\u5b8c\u5584\uff0c\u6211\u4eec\u5728\u6b65\u884c\u6570\u636e\u4e0a\u8bad\u7ec3\u4e86 SoTA \u6b65\u884c\u65b9\u6cd5 MoGlow [30]\u3002\u5728 150-200 \u7c73\u957f\u7684 A* \u8def\u5f84\u4e0a\u4f7f\u7528\u8be5\u65b9\u6cd5\u65f6\uff0c\u5927\u7ea6 30 \u79d2\u540e\u5c31\u4f1a\u51fa\u73b0\u660e\u663e\u7684\u811a\u6b65\u6253\u6ed1\u73b0\u8c61\u3002\u6211\u4eec\u63a8\u6d4b\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u539f\u56e0\u662f MoGlow \u5728\u81ea\u6211\u4e2d\u5fc3\u5750\u6807\u6846\u67b6\u5185\u5408\u6210\u8fd0\u52a8\uff0c\u56e0\u6b64 A* \u63d0\u4f9b\u7684\u63a7\u5236\u4fe1\u53f7\u53d8\u5316\u8fc5\u901f\uff0c\u5bfc\u81f4 MoGlow \u5408\u6210\u7684\u8fd0\u52a8\u51fa\u73b0\u660e\u663e\u6f02\u79fb\u3002\u5728\u8868 2 \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 36 \u540d\u53c2\u4e0e\u8005\u8fdb\u884c\u4e86\u7528\u6237\u7814\u7a76\uff0c\u5e76\u5728\u8fd9\u4e9b\u8def\u5f84\u4e0a\u5c06\u6211\u4eec\u7684\u65b9\u6cd5\u4e0e MoGlow \u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u5728\u8868 2 \u4e2d\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u4f18\u4e8e MoGlow\u3002</p> <p>\u57fa\u4e8e\u8bed\u8a00\u7684\u5173\u952e\u70b9\u5e03\u5c40\u6548\u679c\u5982\u4f55\uff1f\u5728\u672c\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u6bd4\u8f83\u4e86\u4f7f\u7528\u624b\u52a8\u5173\u952e\u70b9\u653e\u7f6e\u6cd5\u548c\u57fa\u4e8e\u8bed\u8a00\u7684\u5173\u952e\u70b9\u653e\u7f6e\u6cd5\u5408\u6210\u7684\u52a8\u4f5c\u3002\u6211\u4eec\u4f7f\u7528\u8fd9\u4e24\u79cd\u65b9\u6cd5\u751f\u6210\u7684\u5173\u952e\u70b9\u5408\u6210\u4e86 5 \u4e2a\u8fd0\u52a8\u5e8f\u5217\uff0c\u5e76\u901a\u8fc7\u4e00\u9879\u6709 36 \u540d\u53c2\u4e0e\u8005\u53c2\u4e0e\u7684\u7528\u6237\u7814\u7a76\u5bf9\u5408\u6210\u5e8f\u5217\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u5f53\u7528\u4e8e\u8fd0\u52a8\u5408\u6210\u65f6\uff0c\u8fd9\u4e9b\u5173\u952e\u70b9\u4ea7\u751f\u7684\u8d28\u91cf\u4e0e\u624b\u52a8\u5173\u952e\u70b9\u653e\u7f6e\u76f8\u4f3c\uff08\u8868 2\uff09\u3002</p> <p>\u7528\u6237\u624b\u52a8\u63d0\u4f9b\u5173\u952e\u70b9\u9700\u8981\u591a\u957f\u65f6\u95f4\uff1f\u6211\u4eec\u5f00\u53d1\u4e86\u4e00\u4e2a\u7528\u6237\u754c\u9762\uff0c\u5141\u8bb8\u7528\u6237\u6d4f\u89c8\u4e09\u7ef4\u573a\u666f\u5e76\u70b9\u51fb\u4ea4\u6c47\u70b9\u3002\u6211\u4eec\u6307\u5bfc 7 \u540d\u53c2\u4e0e\u8005\u5982\u4f55\u4f7f\u7528\u6211\u4eec\u7684\u7528\u6237\u754c\u9762\u6d4f\u89c8 3D \u573a\u666f\u3002\u7528\u6237\u5b66\u4e60\u754c\u9762\u5e73\u5747\u9700\u8981 245 \u79d2\u3002\u7136\u540e\uff0c\u6211\u4eec\u8981\u6c42\u6bcf\u4f4d\u7528\u6237\u5728 5 \u4e2a\u4e0d\u540c\u7684 3D \u573a\u666f\u4e2d\u63d0\u4f9b 5 \u7ec4 3 \u4e2a\u52a8\u4f5c\u5173\u952e\u70b9\uff08\u6839\u90e8\u548c\u4e24\u53ea\u811a\u7684\u4f4d\u7f6e\u6216\u4e00\u53ea\u624b\u548c\u4e24\u53ea\u811a\u7684\u4f4d\u7f6e\uff09\uff0c\u6bcf\u4e2a\u573a\u666f\u5171 15 \u4e2a\u5173\u952e\u70b9\u3002\u6bcf\u4e2a\u573a\u666f\u9009\u62e9\u8fd9\u4e9b\u70b9\u5e73\u5747\u9700\u8981 125 \u79d2\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#qualitative-results","title":"Qualitative Results","text":"<p>\u8bf7\u89c2\u770b\u8865\u5145\u89c6\u9891\u8fdb\u884c\u5b9a\u6027\u8bc4\u4f30\u3002\u5728\u56fe 6 \u4e2d\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u5728 4 \u4e2a\u4e0d\u540c\u6570\u636e\u96c6\u7684\u573a\u666f\u4e2d\u751f\u6210\u8fd0\u52a8\u7684\u793a\u4f8b\uff1a Replica [61]\u3001Matterport[8]\u3001HPS[22] \u548c Scannet[10]\u3002\u6b64\u5916\uff0c\u5c06\u52a8\u4f5c\u8868\u793a\u4e3a\u52a8\u4f5c\u5173\u952e\u70b9\uff08Action Keypoints\uff09\u53ef\u4ee5\u8ba9\u6211\u4eec\u5bf9\u751f\u6210\u7684\u52a8\u4f5c\u8fdb\u884c\u9ad8\u5ea6\u63a7\u5236\uff0c\u5e76\u4f7f\u5176\u5177\u6709\u591a\u6837\u6027\u3002\u5728\u56fe 7 \u4e2d\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u8fd9\u79cd\u8868\u793a\u6cd5\u5982\u4f55\u4f7f\u6211\u4eec\u80fd\u591f\u5750\u7740\u6216\u4ece\u4e0d\u540c\u9ad8\u5ea6\u6458\u53d6\u7269\u4f53\uff08\u5de6\u5217\uff09\uff0c\u6216\u751f\u6210\u8bf8\u5982\u53cc\u624b\u6293\u53d6\u6216\u4f38\u5c55\u7b49\u52a8\u4f5c\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#limitations-and-conclusions","title":"Limitations and Conclusions","text":"<p>\u6211\u4eec\u9996\u6b21\u63d0\u51fa\u4e86\u5728\u6765\u81ea HPS\u3001Matterport\u3001ScanNet \u548c Replica \u7684\u573a\u666f\u4e2d\u5408\u6210\u6301\u7eed\u80e1\u4eba\u8fd0\u52a8\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u7684\u6838\u5fc3\u8d21\u732e\u662f\u901a\u8fc7\u8fed\u4ee3\u5178\u578b\u5316\u548c\u4f7f\u7528\u5173\u952e\u70b9\u6765\u5b9e\u73b0\u957f\u8ddd\u79bb\u8fd0\u52a8\u5408\u6210\u7684\u65b0\u65b9\u6cd5\uff0c\u4ece\u800c\u5c06\u573a\u666f\u63a8\u7406\u4e0e\u8fd0\u52a8\u5408\u6210\u5206\u79bb\u5f00\u6765\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u7075\u6d3b\u7684\u8fd0\u52a8\u5408\u6210\u754c\u9762\u3002\u6211\u4eec\u8bc1\u660e\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u6bd4\u73b0\u6709\u7684\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u751f\u6210\u8fd0\u52a8\u7684\u89e3\u51b3\u65b9\u6848\u6548\u679c\u66f4\u597d\u3002</p> <p>\u867d\u7136\u6211\u4eec\u7684\u65b9\u6cd5\u5411\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u8fdc\u8ddd\u79bb\u8fd0\u52a8\u5408\u6210\u8fc8\u51fa\u4e86\u91cd\u8981\u4e00\u6b65\uff0c\u4f46\u5b83\u4e5f\u6709\u5c40\u9650\u6027\uff1a \u5b83\u5047\u5b9a\u5730\u9762\u662f\u6c34\u5e73\u7684\uff0c\u56e0\u6b64\u4e0d\u652f\u6301\u5730\u9762\u4e0d\u5e73\u7684\u573a\u666f\u3002\u5b83\u8fd8\u5047\u8bbe\u4e86\u6709\u6548\u7684\u5173\u952e\u70b9\u914d\u7f6e\uff1a\u5982\u679c\u7528\u6237\u63d0\u4f9b\u7684\u5173\u952e\u70b9\u4e0d\u7b26\u5408\u6709\u6548\u7684\u59ff\u52bf\uff0cIK \u6b65\u9aa4\u4ea7\u751f\u7684\u59ff\u52bf\u770b\u8d77\u6765\u5c31\u4e0d\u771f\u5b9e\uff0c\u4ece\u800c\u4ea7\u751f\u4e0d\u81ea\u7136\u7684\u8fd0\u52a8\u3002\u672a\u6765\uff0c\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u51cf\u5c11\u6240\u9700\u7684\u5173\u952e\u70b9\u8f93\u5165\u6570\u91cf\u6765\u6d88\u9664\u8fd9\u4e00\u9650\u5236\u3002\u6211\u4eec\u5e0c\u671b\u6240\u63d0\u51fa\u7684\u65b9\u6cd5\u80fd\u63a8\u52a8\u65b0\u7684\u7814\u7a76\uff0c\u5b9e\u73b0\u4efb\u610f\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u8fde\u7eed\u4eba\u4f53\u8fd0\u52a8\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Continual%20Human%20Motion%20in%20Diverse%203D%20Scenes/#acknowledgements","title":"Acknowledgements","text":"<p>\u672c\u7814\u7a76\u7531\u5fb7\u56fd\u7814\u7a76\u57fa\u91d1\u4f1a\uff08DFG\uff09- 409792180\uff08\u827e\u7c73-\u8bfa\u7279\u8ba1\u5212\uff0c\u9879\u76ee\uff1a\u771f\u5b9e\u865a\u62df\u4eba\uff09\u548c\u5fb7\u56fd\u8054\u90a6\u6559\u80b2\u4e0e\u7814\u7a76\u90e8\uff08BMBF\uff09\u8d44\u52a9\uff1a \u56fe\u5bbe\u6839\u4eba\u5de5\u667a\u80fd\u4e2d\u5fc3\uff0cFKZ\uff1a01IS18039A\u3002Gerard Pons-Moll \u662f\u673a\u5668\u5b66\u4e60\u9ad8\u7ea7\u7814\u7a76\u4e2d\u5fc3\uff08EXC \u7f16\u53f7 2064/1 - \u9879\u76ee\u7f16\u53f7 390727645\uff09\u7684\u6210\u5458\u3002\u8be5\u9879\u76ee\u7531\u5361\u5c14\u8521\u53f8\u57fa\u91d1\u4f1a\u8d44\u52a9\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/","title":"Generating Human Interaction Motions in Scenes with Text Control","text":"<p>\u56fe 1\uff1a\u6211\u4eec\u4ecb\u7ecd\u7684 TeSMo \u662f\u4e00\u79cd\u4ece\u6587\u672c\u8f93\u5165\u751f\u6210\u591a\u6837\u5316\u3001\u53ef\u4fe1\u7684\u4eba\u4e0e\u573a\u666f\u4e92\u52a8\u7684\u65b9\u6cd5\u3002TeSMo \u53ef\u6839\u636e\u4e09\u7ef4\u573a\u666f\u751f\u6210\u573a\u666f\u611f\u77e5\u52a8\u4f5c\uff0c\u5982\u5728\u81ea\u7531\u7a7a\u95f4\u4e2d\u884c\u8d70\u548c\u5750\u5728\u6905\u5b50\u4e0a\u3002\u6211\u4eec\u7684\u6a21\u578b\u53ef\u4ee5\u901a\u8fc7\u6587\u672c\u63cf\u8ff0\u3001\u8d77\u59cb\u4f4d\u7f6e\u548c\u76ee\u6807\u4f4d\u7f6e\u8f7b\u677e\u63a7\u5236\u3002</p> <p>\u6458\u8981 \u6211\u4eec\u4ecb\u7ecd\u4e86\u57fa\u4e8e\u53bb\u566a\u6269\u6563\u6a21\u578b\u7684\u6587\u672c\u63a7\u5236\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u751f\u6210\u65b9\u6cd5 TeSMo\u3002\u7531\u4e8e\u5305\u542b\u52a8\u4f5c\u3001\u6587\u672c\u63cf\u8ff0\u548c\u4ea4\u4e92\u573a\u666f\u7684\u6570\u636e\u96c6\u6709\u9650\uff0c\u4ee5\u5f80\u7684\u6587\u672c\u5230\u52a8\u4f5c\u65b9\u6cd5\u53ea\u5173\u6ce8\u5b64\u7acb\u7684\u4eba\u7269\uff0c\u800c\u4e0d\u8003\u8651\u573a\u666f\u3002\u6211\u4eec\u7684\u65b9\u6cd5\u9996\u5148\u662f\u9884\u8bad\u7ec3\u4e00\u4e2a\u573a\u666f\u65e0\u5173\u7684\u6587\u672c\u5230\u52a8\u4f5c\u6269\u6563\u6a21\u578b\uff0c\u5f3a\u8c03\u5927\u89c4\u6a21\u52a8\u4f5c\u6355\u6349\u6570\u636e\u96c6\u7684\u76ee\u6807\u9650\u5236\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u573a\u666f\u611f\u77e5\u7ec4\u4ef6\u6765\u589e\u5f3a\u8be5\u6a21\u578b\uff0c\u5e76\u4f7f\u7528\u5305\u542b\u8be6\u7ec6\u573a\u666f\u4fe1\u606f\uff08\u5305\u62ec\u5730\u5e73\u9762\u548c\u7269\u4f53\u5f62\u72b6\uff09\u7684\u6570\u636e\u8fdb\u884c\u5fae\u8c03\u3002\u4e3a\u4e86\u4fbf\u4e8e\u8bad\u7ec3\uff0c\u6211\u4eec\u5728\u573a\u666f\u4e2d\u5d4c\u5165\u4e86\u6ce8\u91ca\u5bfc\u822a\u548c\u4ea4\u4e92\u52a8\u4f5c\u3002\u6240\u63d0\u51fa\u7684\u65b9\u6cd5\u80fd\u5728\u5177\u6709\u5404\u79cd\u7269\u4f53\u5f62\u72b6\u3001\u65b9\u5411\u3001\u521d\u59cb\u8eab\u4f53\u4f4d\u7f6e\u548c\u59ff\u52bf\u7684\u4e0d\u540c\u573a\u666f\u4e2d\u4ea7\u751f\u903c\u771f\u3001\u591a\u6837\u7684\u4eba-\u7269\u4ea4\u4e92\uff0c\u5982\u5bfc\u822a\u548c\u5750\u59ff\u3002\u5927\u91cf\u5b9e\u9a8c\u8bc1\u660e\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u5728\u4eba\u4e0e\u573a\u666f\u4e92\u52a8\u7684\u53ef\u4fe1\u5ea6\u4ee5\u53ca\u751f\u6210\u52a8\u4f5c\u7684\u771f\u5b9e\u6027\u548c\u591a\u6837\u6027\u65b9\u9762\u8d85\u8d8a\u4e86\u4e4b\u524d\u7684\u6280\u672f\u3002\u4ee3\u7801\u5c06\u5728\u672c\u7814\u7a76\u6210\u679c\u53d1\u8868\u540e\u53d1\u5e03\uff0c\u7f51\u5740\u4e3a https://research.nvidia.com/labs/toronto-ai/tesmo \u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#introduction","title":"Introduction","text":"<p>\u751f\u6210\u80fd\u4e0e 3D \u573a\u666f\u4e92\u52a8\u7684\u903c\u771f\u4eba\u4f53\u52a8\u4f5c\uff0c\u5bf9\u4e8e\u4ece\u6e38\u620f\u5230\u4eba\u5de5\u667a\u80fd\u7b49\u591a\u79cd\u5e94\u7528\u90fd\u81f3\u5173\u91cd\u8981\u3002\u4f8b\u5982\uff0c\u6e38\u620f\u548c\u7535\u5f71\u7684\u89d2\u8272\u52a8\u753b\u5e08\u9700\u8981\u521b\u4f5c\u51fa\u80fd\u6210\u529f\u7a7f\u8d8a\u6742\u4e71\u573a\u666f\u5e76\u4e0e\u76ee\u6807\u5bf9\u8c61\u8fdb\u884c\u903c\u771f\u4ea4\u4e92\u7684\u52a8\u4f5c\uff0c\u540c\u65f6\u8fd8\u8981\u4fdd\u6301\u5bf9\u52a8\u4f5c\u98ce\u683c\u7684\u827a\u672f\u63a7\u5236\u3002\u63a7\u5236\u98ce\u683c\u7684\u4e00\u79cd\u81ea\u7136\u65b9\u6cd5\u662f\u901a\u8fc7\u6587\u5b57\uff0c\u4f8b\u5982 \"\u6109\u5feb\u5730\u8df3\u5230\u6905\u5b50\u4e0a\u5750\u4e0b\"\u3002\u6700\u8fd1\uff0c\u6269\u6563\u6a21\u578b\u5728\u6839\u636e\u7528\u6237\u8f93\u5165\u751f\u6210\u4eba\u4f53\u52a8\u4f5c\u65b9\u9762\u8868\u73b0\u51fa\u4e86\u975e\u51e1\u7684\u80fd\u529b\u3002\u6587\u672c\u63d0\u793a[37, 48]\u53ef\u4ee5\u8ba9\u7528\u6237\u63a7\u5236\u98ce\u683c\uff0c\u800c\u5305\u542b\u7a7a\u95f4\u7ea6\u675f\u7684\u65b9\u6cd5\u5219\u53ef\u4ee5\u5b9e\u73b0\u66f4\u7cbe\u7ec6\u7684\u63a7\u5236\uff0c\u4f8b\u5982\u6307\u5b9a\u6240\u9700\u7684\u5173\u8282\u4f4d\u7f6e\u548c\u8f68\u8ff9[19, 34, 42]\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e9b\u7814\u7a76\u4e3b\u8981\u96c6\u4e2d\u5728\u5b64\u7acb\u7684\u89d2\u8272\u4e0a\uff0c\u6ca1\u6709\u8003\u8651\u73af\u5883\u80cc\u666f\u6216\u7269\u4f53\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002</p> <p>\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u65e8\u5728\u5c06\u573a\u666f\u611f\u77e5\u7eb3\u5165\u7528\u6237\u53ef\u63a7\u7684\u4eba\u4f53\u52a8\u4f5c\u751f\u6210\u6a21\u578b\u3002\u7136\u800c\uff0c\u5373\u4f7f\u6ca1\u6709\u6587\u672c\u63d0\u793a\uff0c\u5b66\u4e60\u751f\u6210\u6d89\u53ca\u573a\u666f\u4ea4\u4e92\u7684\u52a8\u4f5c\u4e5f\u662f\u4e00\u9879\u6311\u6218\u3002\u4e0e\u5355\u72ec\u63cf\u8ff0\u4eba\u7c7b\u7684\u5927\u89c4\u6a21\u8fd0\u52a8\u6355\u6349\u6570\u636e\u96c6\u4e0d\u540c[27]\uff0c\u5177\u6709\u4e09\u7ef4\u4eba\u7c7b\u8fd0\u52a8\u548c\u573a\u666f/\u7269\u4f53\u51e0\u4f55\u5f62\u72b6\u914d\u5bf9\u793a\u4f8b\u7684\u6570\u636e\u96c6\u662f\u6709\u9650\u7684\u3002\u4e4b\u524d\u7684\u5de5\u4f5c\u4f7f\u7528\u6ca1\u6709\u6587\u672c\u6ce8\u91ca\u7684\u5c0f\u578b\u914d\u5bf9\u6570\u636e\u96c6\u6765\u8bad\u7ec3 VAE [10, 35, 50] \u6216\u6269\u6563\u6a21\u578b [17, 31]\uff0c\u8fd9\u4e9b\u6a21\u578b\u751f\u6210\u7684\u4eba\u7c7b\u573a\u666f\u4ea4\u4e92\u7684\u8303\u56f4\u548c\u591a\u6837\u6027\u6709\u9650\u3002\u5f3a\u5316\u5b66\u4e60\u65b9\u6cd5\u80fd\u591f\u4ece\u6709\u9650\u7684\u76d1\u7763\u4e2d\u5b66\u4e60\u4ea4\u4e92\u52a8\u4f5c[12, 23, 53]\uff0c\u5e76\u80fd\u751f\u6210\u8bad\u7ec3\u52a8\u4f5c\u6570\u636e\u96c6\u4e2d\u4e0d\u5b58\u5728\u7684\u884c\u4e3a\u3002\u7136\u800c\uff0c\u8bbe\u8ba1\u5956\u52b1\u51fd\u6570\u4ee5\u4ea7\u751f\u5404\u79cd\u4e92\u52a8\u7684\u81ea\u7136\u52a8\u4f5c\u65e2\u56f0\u96be\u53c8\u7e41\u7410\u3002</p> <p>\u4e3a\u4e86\u5e94\u5bf9\u8fd9\u4e9b\u6311\u6218\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u79cd\u4ee5\u6587\u672c\u4e3a\u6761\u4ef6\u7684\u573a\u666f\u611f\u77e5\u52a8\u4f5c\u751f\u6210\u65b9\u6cd5\uff0c\u79f0\u4e3a TeSMo\u3002\u5982\u56fe 1 \u6240\u793a\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u53ef\u4ee5\u751f\u6210\u903c\u771f\u7684\u52a8\u4f5c\uff0c\u8fd9\u4e9b\u52a8\u4f5c\u53ef\u4ee5\u7ed5\u8fc7\u969c\u788d\u7269\u5e76\u4e0e\u7269\u4f53\u4e92\u52a8\uff0c\u540c\u65f6\u4ee5\u6587\u672c\u63d0\u793a\u4e3a\u6761\u4ef6\uff0c\u4ece\u800c\u5b9e\u73b0\u98ce\u683c\u7684\u591a\u6837\u6027\u3002\u6211\u4eec\u7684\u4e3b\u8981\u60f3\u6cd5\u662f\u5c06\u901a\u7528\u4f46\u4e0e\u573a\u666f\u65e0\u5173\u7684\u6587\u672c\u5230\u52a8\u4f5c\u6269\u6563\u6a21\u578b\u4e0e\u6355\u6349\u771f\u5b9e\u4e92\u52a8\u7684\u914d\u5bf9\u4eba\u7c7b-\u573a\u666f\u6570\u636e\u76f8\u7ed3\u5408\u3002\u9996\u5148\uff0c\u6211\u4eec\u5728\u4e00\u4e2a\u6ca1\u6709\u7269\u4f53\u7684\u591a\u6837\u5316\u8fd0\u52a8\u6570\u636e\u96c6\uff08\u5982 HumanML3D [8]\uff09\u4e0a\u9884\u8bad\u7ec3\u4e00\u4e2a\u6587\u672c\u6761\u4ef6\u6269\u6563\u6a21\u578b [37]\uff0c\u4f7f\u5176\u80fd\u591f\u5b66\u4e60\u903c\u771f\u7684\u8fd0\u52a8\u5148\u9a8c\u548c\u4e0e\u6587\u672c\u7684\u76f8\u5173\u6027\u3002\u7136\u540e\uff0c\u6211\u4eec\u5229\u7528\u573a\u666f\u611f\u77e5\u589e\u5f3a\u7ec4\u4ef6\u5bf9\u6a21\u578b\u8fdb\u884c\u5fae\u8c03\uff0c\u8be5\u7ec4\u4ef6\u5c06\u573a\u666f\u4fe1\u606f\u4f5c\u4e3a\u8f93\u5165\uff0c\u4ece\u800c\u5b8c\u5584\u8fd0\u52a8\u8f93\u51fa\uff0c\u4f7f\u5176\u4e0e\u73af\u5883\u4fdd\u6301\u4e00\u81f4\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u9700\u8981\u4e92\u52a8\u7684\u76ee\u6807\u5bf9\u8c61\u548c\u4e00\u4e2a\u63cf\u8ff0\u6240\u9700\u52a8\u4f5c\u7684\u6587\u672c\u63d0\u793a\uff0c\u6211\u4eec\u5c06\u5728\u573a\u666f\u4e2d\u751f\u6210\u5408\u9002\u52a8\u4f5c\u7684\u95ee\u9898\u5206\u89e3\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a\u5bfc\u822a\uff08\u4f8b\u5982\uff0c\u5728\u907f\u5f00\u969c\u788d\u7269\u7684\u540c\u65f6\u63a5\u8fd1\u6905\u5b50\uff09\u548c\u4e92\u52a8\uff08\u4f8b\u5982\uff0c\u5750\u5728\u6905\u5b50\u4e0a\uff09\u3002\u8fd9\u4e24\u4e2a\u9636\u6bb5\u90fd\u5229\u7528\u4e86\u5728\u4e0e\u573a\u666f\u65e0\u5173\u7684\u6570\u636e\u4e0a\u9884\u5148\u8bad\u7ec3\u597d\u7684\u53cc\u878d\u5408\u6a21\u578b\uff0c\u7136\u540e\u901a\u8fc7\u6dfb\u52a0\u573a\u666f\u611f\u77e5\u5206\u652f\u8fdb\u884c\u5fae\u8c03\u3002\u5bfc\u822a\u6a21\u578b\u4f1a\u751f\u6210\u4e00\u4e2a\u9aa8\u76c6\u8f68\u8ff9\uff0c\u8be5\u8f68\u8ff9\u4f1a\u5230\u8fbe\u4ea4\u4e92\u5bf9\u8c61\u9644\u8fd1\u7684\u76ee\u6807\u59ff\u52bf\u3002\u5728\u5fae\u8c03\u8fc7\u7a0b\u4e2d\uff0c\u573a\u666f\u611f\u77e5\u5206\u652f\u5c06\u81ea\u4e0a\u800c\u4e0b\u7684\u4e8c\u7ef4\u573a\u666f\u5730\u9762\u5730\u56fe\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u5728\u6211\u4eec\u7684\u65b0\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u8be5\u6570\u636e\u96c6\u5305\u542b\u4e09\u7ef4\u5ba4\u5185\u623f\u95f4[7]\u4e2d\u7684\u8fd0\u52a8\u5e8f\u5217[27]\u3002\u7136\u540e\uff0c\u751f\u6210\u7684\u9aa8\u76c6\u8f68\u8ff9\u5c06\u901a\u8fc7\u8fd0\u52a8\u5185\u7ed8\u5236[34]\u63d0\u5347\u4e3a\u5168\u8eab\u8fd0\u52a8\u3002\u63a5\u4e0b\u6765\uff0c\u4ea4\u4e92\u6a21\u578b\u6839\u636e\u76ee\u6807\u9aa8\u76c6\u59ff\u52bf\u548c\u76ee\u6807\u7269\u4f53\u7684\u8be6\u7ec6 3D \u8868\u793a\u751f\u6210\u5168\u8eab\u8fd0\u52a8\u3002\u4e3a\u4e86\u8fdb\u4e00\u6b65\u63d0\u9ad8\u5bf9\u65b0\u7269\u4f53\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u6211\u4eec\u4f7f\u7528\u589e\u5f3a\u6570\u636e\u5bf9\u6a21\u578b\u8fdb\u884c\u4e86\u5fae\u8c03\uff0c\u5728\u4fdd\u6301\u903c\u771f\u7684\u4eba-\u7269\u63a5\u89e6\u7684\u540c\u65f6\uff0c\u5c06\u4ea4\u4e92[10]\u91cd\u65b0\u5b9a\u4f4d\u5230\u5404\u79cd\u7269\u4f53\u5f62\u72b6\u4e0a\u3002</p> <p>\u5b9e\u9a8c\u8bc1\u660e\uff0c\u6211\u4eec\u7684\u5bfc\u822a\u65b9\u6cd5\u5728\u5230\u8fbe\u76ee\u6807\u548c\u907f\u5f00\u969c\u788d\u7269\u65b9\u9762\u4f18\u4e8e\u4e4b\u524d\u7684\u7814\u7a76\uff0c\u540c\u65f6\u4ea7\u751f\u7684\u5168\u8eab\u8fd0\u52a8\u4e0e\u573a\u666f\u65e0\u5173\u7684\u6269\u6563\u6a21\u578b\u76f8\u5f53[19, 42]\u3002\u540c\u65f6\uff0c\u4e0e\u6700\u5148\u8fdb\u7684\u65b9\u6cd5\u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u4ea4\u4e92\u6a21\u578b\u4ea7\u751f\u7684\u8fd0\u52a8\u7a7f\u900f\u7269\u4f53\u7684\u6b21\u6570\u66f4\u5c11[53]\uff0c\u5728\u4e00\u9879\u611f\u77e5\u7814\u7a76\u4e2d\uff0c71.9%\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u4ea4\u4e92\u6a21\u578b\u66f4\u53d7\u9752\u7750\u3002\u8fd9\u9879\u5de5\u4f5c\u7684\u6838\u5fc3\u8d21\u732e\u5305\u62ec (1)\u4e00\u79cd\u65b0\u9896\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u5728\u9884\u8bad\u7ec3\u7684\u6587\u672c\u5230\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u4e4b\u4e0a\u5fae\u8c03\u589e\u5f3a\u6a21\u578b\uff0c\u5b9e\u73b0\u573a\u666f\u611f\u77e5\u548c\u6587\u672c\u6761\u4ef6\u4e0b\u7684\u8fd0\u52a8\u751f\u6210\uff1b(2)\u4e00\u79cd\u540d\u4e3a TeSMo \u7684\u65b9\u6cd5\uff0c\u5229\u7528\u8fd9\u79cd\u65b9\u6cd5\u4e3a\u5bfc\u822a\u548c\u4ea4\u4e92\u7ec4\u4ef6\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u6587\u672c\u573a\u666f\u8fd0\u52a8\uff1b(3)\u6570\u636e\u589e\u5f3a\u7b56\u7565\uff0c\u5c06\u5e26\u6709\u6587\u672c\u6ce8\u91ca\u7684\u5bfc\u822a\u548c\u4ea4\u4e92\u8fd0\u52a8\u771f\u5b9e\u5730\u653e\u7f6e\u5728\u573a\u666f\u4e2d\uff0c\u5b9e\u73b0\u573a\u666f\u611f\u77e5\u5fae\u8c03\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#related-work","title":"Related Work","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#scene-aware-motion-generation","title":"Scene-aware Motion Generation","text":"<p>\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u7684\u8fd0\u52a8\u5408\u6210\u6709\u7740\u60a0\u4e45\u7684\u5386\u53f2\uff0c\u6db5\u76d6\u4e86\u8fd0\u52a8[1, 20, 24, 51]\u3001\u4eba-\u573a\u666f/\u7269\u4f53\u4ea4\u4e92[22, 36]\u548c\u52a8\u6001\u7269\u4f53\u4ea4\u4e92[4,25,26]\u7b49\u9886\u57df\u3002\u8bfb\u8005\u53ef\u53c2\u9605\u8be6\u5c3d\u7684\u8c03\u67e5\u62a5\u544a[54]\u4ee5\u4e86\u89e3\u6982\u51b5\uff0c\u672c\u8282\u5c06\u91cd\u70b9\u8ba8\u8bba\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u751f\u6210\u3002</p> <p>\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u5efa\u6a21\u9762\u4e34\u7684\u4e00\u4e2a\u7279\u6b8a\u6311\u6218\u662f\u7f3a\u4e4f\u6210\u5bf9\u7684\u9ad8\u8d28\u91cf\u4eba\u4f53\u573a\u666f\u6570\u636e\u96c6\u3002\u6709\u4e00\u79cd\u65b9\u6cd5 [38,39] \u91c7\u7528\u4e86\u4e24\u9636\u6bb5\u65b9\u6cd5\uff0c\u9996\u5148\u9884\u6d4b\u6839\u8def\u5f84\uff0c\u7136\u540e\u6839\u636e\u573a\u666f\u548c\u9884\u6d4b\u8def\u5f84\u8fdb\u884c\u5168\u8eab\u8fd0\u52a8\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u5b58\u5728\u8fd0\u52a8\u751f\u6210\u8d28\u91cf\u4f4e\u7684\u95ee\u9898\uff0c\u8fd9\u662f\u7531\u4e8e\u4ece\u5355\u76ee RGB-D \u89c6\u9891\u4e2d\u6355\u83b7\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u5b58\u5728\u566a\u58f0[11]\u3002\u795e\u7ecf\u72b6\u6001\u673a\uff08NSM\uff09[35] \u5efa\u8bae\u4f7f\u7528\u76f8\u4f4d\u6807\u8bb0[16] \u548c\u672c\u5730\u4e13\u5bb6\u7f51\u7edc[6, 18, 46]\uff0c\u5728\u5c0f\u578b\u4eba-\u7269 mocap \u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\u540e\uff0c\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u7269\u4f53\u4ea4\u4e92\uff0c\u5982\u5750\u59ff\u548c\u80cc\u8d1f\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5b83\u5728\u8bc6\u522b\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u53ef\u884c\u8d70\u533a\u57df\u65f6\u4ecd\u6709\u56f0\u96be\uff0c\u7ecf\u5e38\u65e0\u6cd5\u907f\u5f00\u969c\u788d\u7269\u3002\u56e0\u6b64\uff0c\u540e\u6765\u7684\u76f8\u5173\u5de5\u4f5c\u9700\u8981\u4f7f\u7528 A* \u7b97\u6cd5\u8fdb\u884c\u65e0\u78b0\u649e\u8def\u5f84\u89c4\u5212[10]\u3002\u6b64\u5916\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u548c\u76f8\u5173\u65b9\u6cd5[49, 50]\u53d7\u9650\u4e8e\u6ca1\u6709\u6587\u672c\u6ce8\u91ca\u7684\u5c0f\u578b\u4eba\u673a\u4ea4\u4e92\u6570\u636e\u96c6\u7684\u591a\u6837\u6027\u3002</p> <p>\u6709\u591a\u79cd\u65b9\u6cd5\u53ef\u4ee5\u6539\u5584\u6570\u636e\u95ee\u9898\uff0c\u5982\u901a\u8fc7\u6355\u6349 [43, 44] \u6216\u751f\u6210 [21] \u8fd0\u52a8\u5e76\u5c06\u5176\u542f\u53d1\u5f0f\u5730\u7f6e\u4e8e\u573a\u666f\u4e2d\u6765\u521b\u5efa\u5408\u6210\u6570\u636e\u3002HU-MANISE[40]\u9488\u5bf9\u6587\u672c\u6761\u4ef6\u4e0b\u7684\u573a\u666f\u4ea4\u4e92\u91c7\u7528\u4e86\u8fd9\u79cd\u65b9\u6cd5\uff0c\u4f46\u5b8c\u5168\u4f9d\u8d56\u4e8e\u77ed\u5408\u6210\u5e8f\u5217\u8fdb\u884c\u8bad\u7ec3\uff0c\u5176\u771f\u5b9e\u6027\u53d7\u5230\u6240\u4f7f\u7528\u7684\u6570\u636e\u751f\u6210\u542f\u53d1\u5f0f\u65b9\u6cd5\u7684\u9650\u5236\u3002\u5f3a\u5316\u5b66\u4e60\uff08RL\uff09\u65b9\u6cd5 DI-MOS [53]\u5b66\u4e60\u81ea\u56de\u5f52\u7b56\u7565\uff0c\u4ee5\u8fbe\u5230\u573a\u666f\u4e2d\u7684\u76ee\u6807\u59ff\u52bf\uff0c\u800c\u4e0d\u9700\u8981\u914d\u5bf9\u7684\u4eba\u7c7b-\u573a\u666f\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\uff0c\u4f46\u4ecd\u4f9d\u8d56\u4e8e A*\uff0c\u5e76\u53d7\u9650\u4e8e\u76ee\u6807\u59ff\u52bf\u751f\u6210\u7684\u51c6\u786e\u6027[52]\u3002\u7269\u7406\u6a21\u62df\u5668 RL [3, 12, 29, 41] \u5df2\u88ab\u7528\u4e8e\u751f\u6210\u7269\u7406\u4e0a\u53ef\u4fe1\u7684\u52a8\u4f5c\uff0c\u4f46\u5728\u4e0d\u540c\u573a\u666f\u548c\u7269\u4f53\u4e4b\u95f4\u7684\u6cdb\u5316\u65b9\u9762\u9762\u4e34\u6311\u6218\u3002</p> <p>\u4e0e\u4e4b\u524d\u7684\u5927\u591a\u6570\u4f5c\u54c1\u4e0d\u540c\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u662f\u4ee5\u6587\u672c\u4e3a\u6761\u4ef6\uff0c\u540c\u65f6\u5229\u7528\u573a\u666f\u65e0\u5173\u6570\u636e\u548c\u914d\u5bf9\u7684\u4eba\u7c7b\u573a\u666f\u6570\u636e\u3002\u9884\u8bad\u7ec3\u4f7f\u7528\u4e0d\u540c\u7684\u573a\u666f\u65e0\u5173\u6570\u636e\u96c6\uff0c\u800c\u573a\u666f\u611f\u77e5\u5fae\u8c03\u5219\u4f7f\u7528\u5177\u6709\u573a\u666f\u80cc\u666f\u7684\u8fd0\u52a8\u6570\u636e\u3002\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u65e2\u4f7f\u7528\u771f\u5b9e\u8fd0\u52a8\u6570\u636e\u521b\u5efa\u5408\u6210\u6570\u636e\uff0c\u4e5f\u4f7f\u7528\u771f\u5b9e\u4e16\u754c\u4e2d\u4eba-\u7269\u4e92\u52a8\u7684\u6570\u636e\u589e\u5f3a[10]\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#diffusion-based-motion-generation","title":"Diffusion-Based Motion Generation","text":"<p>\u6700\u8fd1\uff0c\u6269\u6563\u6a21\u578b\u5df2\u8bc1\u660e\u6709\u80fd\u529b\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u4eba\u4f53\u52a8\u4f5c\uff0c\u5c24\u5176\u662f\u4ee5\u6587\u5b57\u63d0\u793a\u4e3a\u6761\u4ef6\u65f6[30,37,48]\u3002\u9664\u4e86\u6587\u672c\uff0c\u4e00\u4e9b\u6269\u6563\u6a21\u578b\u8fd8\u589e\u52a0\u4e86\u7a7a\u95f4\u53ef\u63a7\u6027\u3002\u4e00\u4e9b\u7814\u7a76[34, 37]\u91c7\u7528\u56fe\u50cf\u5185\u7ed8\u6280\u672f\uff0c\u5c06\u7a7a\u95f4\u5173\u8282\u7ea6\u675f\u7684\u5bc6\u96c6\u8f68\u8ff9\u7eb3\u5165\u751f\u6210\u7684\u8fd0\u52a8\u4e2d\u3002OmniControl [42] \u548c GMD [19] \u5206\u522b\u5141\u8bb8\u4f7f\u7528\u7a00\u758f\u4fe1\u53f7\u548c\u9884\u5b9a\u4e49\u6839\u8def\u5f84\u8fdb\u884c\u63a7\u5236\u3002</p> <p>\u6709\u51e0\u9879\u6269\u6563\u7814\u7a76\u5904\u7406\u4e86\u4e0e\u7269\u4f53\u6216\u573a\u666f\u7684\u4ea4\u4e92\u3002TRACE [33] \u57fa\u4e8e\u5149\u6805\u5316\u8857\u9053\u5730\u56fe\u751f\u6210\u884c\u4eba\u7684 2D \u8f68\u8ff9\u3002SceneD-iffuser [17] \u7684\u751f\u6210\u6761\u4ef6\u662f\u5b8c\u6574\u626b\u63cf\u7684\u573a\u666f\u70b9\u4e91\uff0c\u4f46\u7531\u4e8e\u8bad\u7ec3\u6570\u636e\u5b58\u5728\u566a\u58f0\uff0c\u8fd0\u52a8\u8d28\u91cf\u53d7\u5230\u9650\u5236[11]\u3002\u53e6\u4e00\u79cd\u65b9\u6cd5[31]\u901a\u8fc7\u5206\u5c42\u751f\u6210\u91cc\u7a0b\u7891\u59ff\u52bf\u548c\u5bc6\u96c6\u8fd0\u52a8\u6765\u5b9e\u73b0\u5355\u4e2a\u7269\u4f53\u7684\u4ea4\u4e92\uff0c\u4f46\u7f3a\u4e4f\u6587\u672c\u63a7\u5236\u3002\u4e0e\u4e4b\u5e76\u884c\u7684\u4e00\u79cd\u65b9\u6cd5\u53ef\u5bf9\u5355\u4e2a\u7269\u4f53\u7684\u4ea4\u4e92\u8fdb\u884c\u6587\u672c\u8c03\u8282[5, 28]\uff0c\u4f46\u5176\u91cd\u70b9\u662f\u4eba\u7c7b\u64cd\u7eb5\u52a8\u6001\u7269\u4f53\uff0c\u800c\u975e\u5b8c\u6574\u573a\u666f\u4e2d\u7684\u4ea4\u4e92\u3002</p> <p>\u6211\u4eec\u5229\u7528\u9884\u5148\u8bad\u7ec3\u7684\u6587\u672c\u5230\u8fd0\u52a8\u6269\u6563\u6a21\u578b [37] \u548c\u5fae\u8c03\u7684\u573a\u666f\u611f\u77e5\u5206\u652f\uff0c\u901a\u8fc7\u6269\u6563\u5b9e\u73b0\u6587\u672c\u53ef\u63a7\u6027\u548c\u573a\u666f\u611f\u77e5\u3002\u6211\u4eec\u5c06\u8fd0\u52a8\u751f\u6210\u5206\u4e3a\u5bfc\u822a\u548c\u4e0e\u9759\u6001\u7269\u4f53\u7684\u4ea4\u4e92\uff0c\u5206\u522b\u4ee5\u4e8c\u7ef4\u5e73\u9762\u56fe\u548c\u4e09\u7ef4\u51e0\u4f55\u56fe\u5f62\u4e3a\u6761\u4ef6\uff0c\u5e76\u521b\u5efa\u4e13\u95e8\u7684\u4eba\u7c7b\u573a\u666f\u6570\u636e\uff0c\u4ee5\u5b9e\u73b0\u591a\u6837\u6027\u548c\u9ad8\u8d28\u91cf\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#text-conditioned-scene-aware-motion-generation","title":"Text-Conditioned Scene-Aware Motion Generation","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#overview","title":"Overview","text":"<p>\u56fe 2\uff1a\u6d41\u6c34\u7ebf\u6982\u89c8\uff1a\u7ed9\u5b9a\u8d77\u59cb\u4f4d\u7f6e\uff08\u7eff\u8272\u7bad\u5934\uff09\u3001\u76ee\u6807\u4f4d\u7f6e\uff08\u7ea2\u8272\u7bad\u5934\uff09\u3001\u4e09\u7ef4\u573a\u666f\u548c\u6587\u672c\u63cf\u8ff0\u540e\uff0c\u9996\u5148\u751f\u6210\u5bfc\u822a\u6839\u8f68\u8ff9\uff0c\u7136\u540e\u901a\u8fc7\u5185\u90e8\u7ed8\u5236\u5b8c\u6210\u5168\u8eab\u8fd0\u52a8\u3002\u968f\u540e\uff0c\u6839\u636e\u8d77\u59cb\u59ff\u52bf\uff08\u5373\u5bfc\u822a\u7684\u7ed3\u675f\u59ff\u52bf\uff09\u3001\u76ee\u6807\u4f4d\u7f6e\u548c\u76ee\u6807\u5bf9\u8c61\u751f\u6210\u4ea4\u4e92\uff0c\u4ece\u800c\u751f\u6210\u7279\u5b9a\u5bf9\u8c61\u7684\u8fd0\u52a8\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u4e09\u7ef4\u573a\u666f\u548c\u4e00\u4e2a\u76ee\u6807\u4ea4\u4e92\u5bf9\u8c61\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u751f\u6210\u4e00\u4e2a\u53ef\u89c6\u7684\u4eba-\u573a\u666f\u4ea4\u4e92\uff0c\u5176\u4e2d\u8fd0\u52a8\u98ce\u683c\u53ef\u7531\u7528\u6237\u6307\u5b9a\u7684\u6587\u672c\u63d0\u793a\u63a7\u5236\u3002\u5982\u56fe 2 \u6240\u793a\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u5c06\u8fd9\u4e00\u4efb\u52a1\u5206\u89e3\u4e3a\u5bfc\u822a\u548c\u4ea4\u4e92\u4e24\u4e2a\u90e8\u5206\u3002\u8fd9\u4e24\u4e2a\u90e8\u5206\u90fd\u662f\u6269\u6563\u6a21\u578b\uff0c\u5229\u7528\u5fae\u8c03\u7a0b\u5e8f\u5b9e\u73b0\u573a\u666f\u611f\u77e5\uff0c\u540c\u65f6\u53c8\u4e0d\u5931\u53bb\u7528\u6237\u7684\u53ef\u63a7\u6027\uff0c\u5982\u7b2c 3.2 \u8282\u6240\u4ecb\u7ecd\u3002\u8981\u4e0e\u7269\u4f53\u8fdb\u884c\u4ea4\u4e92\uff0c\u89d2\u8272\u5fc5\u987b\u9996\u5148\u5bfc\u822a\u5230\u7269\u4f53\u9644\u8fd1\u7684\u573a\u666f\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u5f88\u5bb9\u6613\u901a\u8fc7\u542f\u53d1\u5f0f\u65b9\u6cd5\u8ba1\u7b97\u51fa\u6765\uff0c\u6216\u8005\u6839\u636e\u9700\u8981\u7531\u7528\u6237\u6307\u5b9a\u3002\u5982\u7b2c 3.3 \u8282\u6240\u8ff0\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5206\u5c42\u5bfc\u822a\u6a21\u578b\uff0c\u5b83\u80fd\u751f\u6210\u4e00\u6761\u4ece\u521d\u59cb\u4f4d\u7f6e\u51fa\u53d1\u7684\u6839\u8f68\u8ff9\uff0c\u5728\u7ed5\u8fc7\u573a\u666f\u4e2d\u7684\u969c\u788d\u7269\u7684\u540c\u65f6\u79fb\u52a8\u5230\u76ee\u6807\u4f4d\u7f6e\u3002\u751f\u6210\u7684\u6839\u8f68\u8ff9\u4f1a\u901a\u8fc7\u5185\u90e8\u7ed8\u5236\u6280\u672f\u63d0\u5347\u4e3a\u5168\u8eab\u8fd0\u52a8\u8f68\u8ff9[34, 42]\u3002\u7531\u4e8e\u5bfc\u822a\u6a21\u578b\u5728\u7b2c\u4e00\u9636\u6bb5\u5c31\u5df2\u7ecf\u63a5\u8fd1\u7269\u4f53\uff0c\u56e0\u6b64\u5728\u751f\u6210\u4e0e\u7269\u4f53\u7684\u5b9e\u9645\u4ea4\u4e92\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u91cd\u70b9\u653e\u5728\u89d2\u8272\u5df2\u7ecf\u63a5\u8fd1\u7269\u4f53\u7684\u573a\u666f\u4e0a\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u5355\u9636\u6bb5\u8fd0\u52a8\u751f\u6210\u6a21\u578b\uff0c\u76f4\u63a5\u4ece\u8d77\u59cb\u59ff\u52bf\uff08\u5373\u5bfc\u822a\u7684\u6700\u540e\u4e00\u4e2a\u59ff\u52bf\uff09\u3001\u76ee\u6807\u9aa8\u76c6\u59ff\u52bf\u548c\u7269\u4f53\uff08\u8be6\u89c1\u7b2c 3.4 \u8282\uff09\u9884\u6d4b\u5168\u8eab\u8fd0\u52a8\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#background-controllable-human-motion-diffusion-models","title":"Background: Controllable Human Motion Diffusion Models","text":"<p>\u8fd0\u52a8\u6269\u6563\u6a21\u578b\u3002\u6269\u6563\u6a21\u578b\u5df2\u6210\u529f\u7528\u4e8e\u751f\u6210\u81ea\u4e0a\u800c\u4e0b\u7684\u8fd0\u52a8\u8f68\u8ff9[33] \u548c\u5168\u8eab\u8fd0\u52a8[37,48]\u3002\u8fd9\u4e9b\u6a21\u578b\u901a\u8fc7\u5bf9 N \u4e2a\u59ff\u52bf\uff08\u5982\u6839\u90e8\u4f4d\u7f6e\u6216\u5168\u8eab\u5173\u8282\u4f4d\u7f6e/\u89d2\u5ea6\uff09\u7684\u65f6\u95f4\u5e8f\u5217 x = x1, . , xN \u3002\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u6a21\u578b\u5b66\u4f1a\u53cd\u5411\u6b63\u5411\u6269\u6563\u8fc7\u7a0b\uff0c\u8be5\u8fc7\u7a0b\u4ece\u8bad\u7ec3\u6570\u636e\u4e2d\u91c7\u6837\u7684\u5e72\u51c0\u8fd0\u52a8 x0 \u223c q (x0) \u5f00\u59cb\uff0c\u7ecf\u8fc7 T \u4e2a\u6269\u6563\u6b65\u9aa4\u540e\u8fd1\u4f3c\u9ad8\u65af xT \u223c N (0, I)\u3002\u7136\u540e\u5728\u8fd0\u52a8\u53bb\u566a\u7684\u6bcf\u4e00\u6b65 t\uff0c\u53cd\u5411\u8fc7\u7a0b\u5b9a\u4e49\u4e3a $$ p_\\phi(\\mathbf{x}{t-1}|\\mathbf{x}_t,\\mathbf{c})=\\mathcal{N}\\left(\\mathbf{x}\\right) $$ \u5176\u4e2d\uff0cc \u662f\u67d0\u79cd\u8c03\u8282\u4fe1\u53f7\uff08\u5982\u6587\u672c\u63d0\u793a\uff09\uff0c\u03b2t \u53d6\u51b3\u4e8e\u9884\u5148\u786e\u5b9a\u7684\u65b9\u5dee\u8868\u3002\u5e26\u53c2\u6570 \u03c6 \u7684\u53bb\u566a\u6a21\u578b \u03bc\u03c6 \u53ef\u4ee5\u9884\u6d4b\u6765\u81ea\u566a\u58f0\u8f93\u5165\u8fd0\u52a8 xt \u7684\u53bb\u566a\u8fd0\u52a8 \u02c6x0 [14]\u3002\u6a21\u578b\u7684\u8bad\u7ec3\u65b9\u6cd5\u662f\u4ece\u6570\u636e\u96c6\u4e2d\u91c7\u6837\u4e00\u4e2a\u8fd0\u52a8 x0\uff0c\u52a0\u5165\u968f\u673a\u566a\u58f0\uff0c\u7136\u540e\u7528\u91cd\u5efa\u635f\u5931 \u2225x0 - \u02c6x0\u22252 \u5bf9\u53bb\u566a\u5668\u8fdb\u884c\u76d1\u7763\u3002};\\boldsymbol{\\mu}_\\phi(\\mathbf{x}_t,\\mathbf{c},t),\\beta_t\\mathbf{I</p> <p>\u589e\u5f3a\u53ef\u63a7\u6027\u3002\u5728\u56fe\u50cf\u9886\u57df\uff0c\u4e00\u822c\u7684\u9884\u8bad\u7ec3\u6269\u6563\u6a21\u578b\u901a\u8fc7\u589e\u5f3a\u63a7\u5236\u7f51 [47] \u5206\u652f\u9488\u5bf9\u65b0\u4efb\u52a1\u8fdb\u884c\u4e13\u4e1a\u5316\u5904\u7406\uff0c\u8be5\u5206\u652f\u63a5\u6536\u65b0\u7684\u8c03\u8282\u4fe1\u53f7\uff0c\u5e76\u5728\u51bb\u7ed3\u7684\u57fa\u7840\u6269\u6563\u6a21\u578b\u4e0a\u8fdb\u884c\u5fae\u8c03\u3002OmniControl [42] \u5c06\u8fd9\u4e00\u7406\u5ff5\u5e94\u7528\u4e8e\u4eba\u4f53\u8fd0\u52a8\u9886\u57df\u3002\u5bf9\u4e8e\u91c7\u7528\u53d8\u538b\u5668\u7f16\u7801\u5668\u67b6\u6784\u7684\u8fd0\u52a8\u6269\u6563\u6a21\u578b\uff0c\u4ed6\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u589e\u5f3a\u578b\u53d8\u538b\u5668\u5206\u652f\uff0c\u8be5\u5206\u652f\u63a5\u6536\u8fd0\u52a8\u5b66\u5173\u8282\u7ea6\u675f\uff08\u5982\u9aa8\u76c6\u6216\u5176\u4ed6\u5173\u8282\u4f4d\u7f6e\uff09\uff0c\u5e76\u5728\u6bcf\u4e00\u5c42\u901a\u8fc7\u521d\u59cb\u5316\u4e3a\u5168\u96f6\u7684\u7ebf\u6027\u5c42\u8fde\u63a5\u56de\u57fa\u7840\u6a21\u578b\u3002</p> <p>\u5982\u7b2c 3.3 \u548c 3.4 \u8282\u6240\u8ff0\uff0c\u6211\u4eec\u7684\u4e3b\u8981\u89c2\u70b9\u662f\u4f7f\u7528\u589e\u5f3a\u63a7\u5236\u5206\u652f\u6765\u5b9e\u73b0\u573a\u666f\u611f\u77e5\u3002\u6211\u4eec\u9996\u5148\u8bad\u7ec3\u4e00\u4e2a\u4e0e\u573a\u666f\u65e0\u5173\u7684\u5f3a\u5927\u8fd0\u52a8\u6269\u6563\u6a21\u578b\uff0c\u4ee5\u4fbf\u6839\u636e\u6587\u672c\u63d0\u793a\u751f\u6210\u903c\u771f\u7684\u8fd0\u52a8\uff0c\u7136\u540e\u5fae\u8c03\u4e00\u4e2a\u5c06\u573a\u666f\u4fe1\u606f\uff08\u5982\u4e8c\u7ef4\u5e73\u9762\u56fe\u6216\u4e09\u7ef4\u51e0\u4f55\u56fe\u5f62\uff09\u4f5c\u4e3a\u8f93\u5165\u7684\u589e\u5f3a\u5206\u652f\u3002\u8fd9\u4e00\u65b0\u5206\u652f\u53ef\u8c03\u6574\u751f\u6210\u7684\u8fd0\u52a8\uff0c\u4f7f\u5176\u7b26\u5408\u573a\u666f\u8981\u6c42\uff0c\u540c\u65f6\u8fd8\u80fd\u4fdd\u6301\u903c\u771f\u5ea6\u548c\u6587\u672c\u53ef\u63a7\u6027\u3002</p> <p>\u6d4b\u8bd5\u65f6\u7684\u6307\u5bfc\u3002\u5728\u6d4b\u8bd5\u65f6\uff0c\u53ef\u901a\u8fc7\u5f15\u5bfc\u63a7\u5236\u6269\u6563\u6a21\u578b\u4ee5\u8fbe\u5230\u7279\u5b9a\u76ee\u6807\u3002\u6211\u4eec\u76f4\u63a5\u5bf9\u6a21\u578b x\u02c60 \u7684\u5e72\u51c0\u8fd0\u52a8\u9884\u6d4b\u8fdb\u884c\u5f15\u5bfc [15, 33]\u3002\u5728\u6bcf\u4e2a\u53bb\u566a\u6b65\u9aa4\u4e2d\uff0c\u7528\u89e3\u6790\u76ee\u6807\u51fd\u6570 J \u7684\u68af\u5ea6\u5bf9\u9884\u4f30\u7684 \u02c6x0 \u8fdb\u884c\u6270\u52a8\uff0c\u5373 \u02dcx0 = x\u02c60 - \u03b1\u2207xt J (\u02c6x0)\uff0c\u5176\u4e2d \u03b1 \u63a7\u5236\u5f15\u5bfc\u7684\u5f3a\u5ea6\uff0cxt \u662f\u6b65\u9aa4 t \u7684\u566a\u58f0\u8f93\u5165\u8fd0\u52a8\u3002\u5982\u540e\u6587\u8be6\u8ff0\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u907f\u514d\u78b0\u649e\u548c\u8fbe\u5230\u76ee\u6807\u7684\u5236\u5bfc\u76ee\u6807\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#navigation-motion-generation","title":"Navigation Motion Generation","text":"<p>\u56fe 3\uff1a(a) \u6839\u8f68\u8ff9\u6a21\u578b\u548c (b) \u4ea4\u4e92\u4f5c\u7528\u6a21\u578b\u7684\u7f51\u7edc\u7ed3\u6784\u3002\u9996\u5148\uff0c\u4f7f\u7528\u8d77\u59cb\u59ff\u52bf\u3001\u76ee\u6807\u59ff\u52bf\u548c\u6587\u672c\u4f5c\u4e3a\u8f93\u5165\uff0c\u5728\u4e0e\u573a\u666f\u65e0\u5173\u7684\u8fd0\u52a8\u6570\u636e\u4e0a\u8bad\u7ec3\u57fa\u7840\u53d8\u6362\u5668\u7f16\u7801\u5668\u3002\u968f\u540e\uff0c\u5bf9\u573a\u666f\u611f\u77e5\u7ec4\u4ef6\u8fdb\u884c\u5fae\u8c03\uff0c\u5c06\u4e8c\u7ef4\u5730\u9762\u5730\u56fe\uff08a\uff09\u6216\u4e09\u7ef4\u7269\u4f53\uff08b\uff09\u7eb3\u5165\u5176\u4e2d\u3002</p> <p>\u5bfc\u822a\u9636\u6bb5\u7684\u76ee\u6807\u662f\u8ba9\u89d2\u8272\u901a\u8fc7\u903c\u771f\u7684\u8fd0\u52a8\u884c\u4e3a\u5230\u8fbe\u76ee\u6807\u7269\u4f53\u9644\u8fd1\u7684\u76ee\u6807\u4f4d\u7f6e\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6587\u672c\u63a7\u5236\u8fd9\u4e9b\u8fd0\u52a8\u884c\u4e3a\u3002\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u79cd\u5206\u5c42\u65b9\u6cd5\uff0c\u9996\u5148\u5229\u7528\u6269\u6563\u6a21\u578b\u751f\u6210\u5bc6\u96c6\u7684\u6839\u8f68\u8ff9\uff0c\u7136\u540e\u5229\u7528\u5f3a\u5927\u7684\u5185\u7ed8\u6a21\u578b [34] \u4e3a\u9884\u6d4b\u8f68\u8ff9\u751f\u6210\u5168\u8eab\u8fd0\u52a8\u3002\u8fd9\u79cd\u65b9\u6cd5\u65e2\u80fd\u901a\u8fc7\u7eaf\u6839\u6a21\u578b\u5b9e\u73b0\u51c6\u786e\u7684\u76ee\u6807\u5230\u8fbe\uff0c\u53c8\u80fd\u901a\u8fc7\u5185\u7ed8\u6a21\u578b\u5b9e\u73b0\u591a\u6837\u5316\u7684\u6587\u672c\u63a7\u5236\u3002</p> <p>\u6839\u8f68\u8ff9\u751f\u6210 \u6211\u4eec\u7684\u6839\u8f68\u8ff9\u6269\u6563\u6a21\u578b\u5982\u56fe 3(a) \u6240\u793a\uff0c\u5176\u4e2d xn = [x\u3001y\u3001z\u3001cos \u03b8\u3001sin \u03b8]n\uff0c(x\u3001y\u3001z) \u4e3a\u9aa8\u76c6\u4f4d\u7f6e\uff0c\u03b8 \u4e3a\u9aa8\u76c6\u65cb\u8f6c\uff0c\u4e8c\u8005\u5747\u5728\u5e8f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u59ff\u52bf\u7684\u5750\u6807\u7cfb\u4e2d\u8868\u793a\u3002\u8be5\u6a21\u578b\u4ee5\u6587\u5b57\u63d0\u793a\u4ee5\u53ca\u8d77\u59cb\u548c\u7ec8\u6b62\u76ee\u6807\u59ff\u52bf\u548c\u65b9\u5411\u4e3a\u6761\u4ef6\u3002\u4e4b\u524d\u7684\u7814\u7a76[8]\u4f7f\u7528\u76f8\u5bf9\u9aa8\u76c6\u901f\u5ea6\u548c\u65cb\u8f6c\u6765\u8868\u793a\u6a21\u578b\uff0c\u4e0e\u4e4b\u4e0d\u540c\u7684\u662f\uff0c\u6211\u4eec\u4f7f\u7528\u7edd\u5bf9\u5750\u6807\u6765\u8868\u793a\u6a21\u578b\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6839\u636e\u76ee\u6807\u59ff\u52bf\u5bf9\u6a21\u578b\u7684\u8f93\u51fa\u8fdb\u884c\u7ea6\u675f\u3002</p> <p>\u53d7\u8fd0\u52a8\u5185\u7ed8\u6a21\u578b[34, 37]\u7684\u542f\u53d1\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u8d77\u59cb\u59ff\u52bf s \u548c\u7ec8\u70b9\u59ff\u52bf g\uff0c\u5728\u6bcf\u4e2a\u53bb\u566a\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u5c4f\u853d\u6389\u8f93\u5165\u7684 xt\uff0c\u4f7f x1 t = s \u548c xN t = g\uff0c\u4ece\u800c\u76f4\u63a5\u4e3a\u6a21\u578b\u63d0\u4f9b\u5e72\u51c0\u7684\u76ee\u6807\u59ff\u52bf\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4e8c\u5143\u63a9\u7801 m = m1, . mN \u7684\u7ef4\u5ea6\u4e0e xt \u76f8\u540c\uff0c\u5176\u4e2d m1 \u548c mN \u662f 1 \u7684\u5411\u91cf\uff0c\u6240\u6709\u5176\u4ed6 mn \u90fd\u662f 0\u3002\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u4ee5 \u0303xt = m \u2217 x0 + (1 - m) \u2217 xt \u7684\u65b9\u5f0f\u8fdb\u884c\u8986\u76d6\uff0c\u5176\u4e2d \u2217 \u8868\u793a\u5143\u7d20\u76f8\u4e58\uff0cx0 \u662f\u5730\u9762\u771f\u5b9e\u7684\u6839\u8f68\u8ff9\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u63a9\u7801\u4e0e\u8986\u76d6\u8fd0\u52a8[\u0303xt; m]\u8fde\u63a5\u8d77\u6765\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u6a21\u578b\u7684\u8f93\u5165\uff0c\u4ee5\u6307\u793a\u54ea\u4e9b\u5e27\u88ab\u8986\u76d6\u3002</p> <p>\u5728\u6d4b\u8bd5\u65f6\uff0c\u5229\u7528\u5f15\u5bfc\u76ee\u6807 Jg = (\u02c6x0N -g)2 \u6765\u6539\u8fdb\u76ee\u6807\u5230\u8fbe\u60c5\u51b5\uff0c\u8be5\u76ee\u6807\u7528\u4e8e\u6d4b\u91cf\u9884\u6d4b\u7684\u5e72\u51c0\u8f68\u8ff9 \u02c6x0N \u7684\u9aa8\u76c6\u672b\u7aef\u4f4d\u7f6e\u548c\u65b9\u5411\u4e0e\u6700\u7ec8\u76ee\u6807\u59ff\u52bf\u4e4b\u95f4\u7684\u8bef\u5dee\u3002</p> <p>\u7ed3\u5408\u573a\u666f\u8868\u793a\u3002\u76ee\u524d\u6240\u63cf\u8ff0\u7684\u6a21\u578b\u662f\u5728 HumanML3D \u6570\u636e\u96c6[8]\u7684\u8fd0\u52a8\u5b50\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\u7684\uff0c\u4ee5\u4fbf\u751f\u6210\u903c\u771f\u7684\u3001\u4ee5\u6587\u672c\u4e3a\u6761\u4ef6\u7684\u6839\u8f68\u8ff9\u3002\u7136\u800c\uff0c\u8be5\u6a21\u578b\u5b8c\u5168\u4e0d\u4e86\u89e3\u7ed9\u5b9a\u7684\u4e09\u7ef4\u573a\u666f\u3002\u4e3a\u4e86\u5c06\u573a\u666f\u8003\u8651\u5728\u5185\uff0c\u907f\u514d\u964d\u4f4e\u6587\u672c\u8ddf\u968f\u548c\u76ee\u6807\u5230\u8fbe\u6027\u80fd\uff0c\u6211\u4eec\u5728\u57fa\u7840\u6269\u6563\u6a21\u578b\u4e2d\u589e\u52a0\u4e86\u4e00\u4e2a\u63a7\u5236\u5206\u652f\uff0c\u5c06\u573a\u666f\u8868\u793a\u4f5c\u4e3a\u8f93\u5165\u3002\u8fd9\u4e2a\u573a\u666f\u611f\u77e5\u5206\u652f\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u53d8\u6362\u5668\u7f16\u7801\u5668\uff0c\u5728\u51bb\u7ed3\u7684\u57fa\u7840\u6a21\u578b\u4e4b\u4e0a\u8fdb\u884c\u5fae\u8c03\u3002\u6309\u7167\u6587\u732e[33]\uff0cResnet-18[13]\u5c06\u5730\u56fe M \u7f16\u7801\u4e3a\u7279\u5f81\u7f51\u683c\uff0c\u5728\u53bb\u566a\u6b65\u9aa4 t\uff0c\u6bcf\u4e2a\u4e8c\u7ef4\u6295\u5f71\u9aa8\u76c6\u4f4d\u7f6e\uff08x\uff0cz\uff09\u2208 xn t \u5728\u7279\u5f81\u7f51\u683c M \u4e2d\u88ab\u67e5\u8be2\uff0c\u4ee5\u83b7\u5f97\u76f8\u5e94\u7684\u7279\u5f81 f n t\u3002\u5f97\u5230\u7684\u7279\u5f81\u5e8f\u5217 ft= f 1 t , . , f N t\uff0c\u8fde\u540c\u6587\u672c\u63d0\u793a\u548c\u566a\u58f0\u8fd0\u52a8 xt\uff0c\u6210\u4e3a\u5206\u79bb\u53d8\u6362\u5668\u5206\u652f\u7684\u8f93\u5165\u3002</p> <p>\u5728\u6d4b\u8bd5\u65f6\uff0c\u78b0\u649e\u5f15\u5bfc\u76ee\u6807\u4f1a\u8fdb\u4e00\u6b65\u9f13\u52b1\u9075\u5b88\u573a\u666f\u89c4\u5b9a\u3002\u5176\u5b9a\u4e49\u4e3a Jc = SDF\uff08\u02c6x0\uff0cM\uff09\uff0c\u5176\u4e2d SDF \u6839\u636e\u4e8c\u7ef4\u5730\u9762\u56fe\u8ba1\u7b97\u4e8c\u7ef4\u53d8\u6362\u8ddd\u79bb\u56fe\uff0c\u7136\u540e\u5728\u6839\u8f68\u8ff9\u7684\u6bcf\u4e2a\u65f6\u95f4\u6b65\u67e5\u8be2\u4e8c\u7ef4\u8ddd\u79bb\u503c\u3002\u6b63\u8ddd\u79bb\u8868\u793a\u9aa8\u76c6\u4f4d\u7f6e\u5728\u53ef\u884c\u8d70\u533a\u57df\u4e4b\u5916\uff0c\u53d6\u5e73\u5747\u503c\u5f97\u5230\u6700\u7ec8\u635f\u5931\u3002</p> <p>\u573a\u666f\u611f\u77e5\u8bad\u7ec3\u548c\u6570\u636e\u3002\u8981\u8bad\u7ec3\u573a\u666f\u611f\u77e5\u5206\u652f\uff0c\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u6570\u636e\u96c6\uff0c\u8be5\u6570\u636e\u96c6\u5177\u6709\u5728\u573a\u666f\u4e2d\u5bfc\u822a\u7684\u903c\u771f\u52a8\u4f5c\u548c\u76f8\u5e94\u7684\u6587\u672c\u63d0\u793a\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u521b\u5efa\u4e86 Loco-3D-FRONT \u6570\u636e\u96c6\uff0c\u5c06 HumanML3D \u4e2d\u7684\u8fd0\u52a8\u5e8f\u5217\u6574\u5408\u5230 3D-FRONT [7] \u4e2d\u7684\u5404\u79cd 3D \u73af\u5883\u4e2d\u3002\u5982\u56fe 4(a)\u6240\u793a\uff0c\u6309\u7167\u6587\u732e[44]\u4e2d\u6982\u8ff0\u7684\u65b9\u6cd5\uff0c\u6bcf\u4e2a\u52a8\u4f5c\u90fd\u88ab\u653e\u7f6e\u5728\u4e0d\u540c\u7684\u573a\u666f\u4e2d\uff0c\u521d\u59cb\u5e73\u79fb\u548c\u65b9\u5411\u968f\u673a\u5316\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u5bf9\u52a8\u4f5c\u53ca\u5176\u4ea4\u4e92\u5f0f 3D \u573a\u666f\u5e94\u7528\u5de6\u53f3\u955c\u50cf\uff0c\u4ee5\u589e\u5f3a\u6570\u636e\u96c6[8]\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u5305\u542b\u7ea6 9,500 \u4e2a\u884c\u8d70\u52a8\u4f5c\u7684\u6570\u636e\u96c6\uff0c\u6bcf\u4e2a\u52a8\u4f5c\u90fd\u9644\u6709\u6587\u5b57\u63cf\u8ff0\u548c\u5e73\u5747 10 \u4e2a\u53ef\u4fe1\u7684 3D \u573a\u666f\uff0c\u4ece\u800c\u4ea7\u751f\u4e86 95k \u4e2a\u8fd0\u52a8-\u573a\u666f\u8bad\u7ec3\u5bf9\u3002</p> <p>\u901a\u8fc7\u8f68\u8ff9\u6df7\u5408\u589e\u52a0\u63a7\u5236\u3002\u6211\u4eec\u7684\u6839\u8f68\u8ff9\u6269\u6563\u6a21\u578b\u53ef\u751f\u6210\u573a\u666f\u611f\u77e5\u8fd0\u52a8\uff0c\u4e0e\u4e4b\u524d\u7684\u8bb8\u591a\u4f5c\u54c1[10,53]\u4e0d\u540c\uff0c\u5b83\u4e0d\u9700\u8981\u5bfc\u822a\u7f51\u683c\u6765\u8ba1\u7b97 A* [9] \u8def\u5f84\u3002\u7136\u800c\uff0c\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u89d2\u8272\u6309\u7167 A* \u8def\u5f84\u4ee5\u6700\u77ed\u8def\u5f84\u5230\u8fbe\u76ee\u6807\uff0c\u6216\u8005\u901a\u8fc7\u81ea\u5df1\u7ed8\u5236 2D \u8def\u7ebf\u6765\u63a7\u5236\u8def\u5f84\u7684\u5927\u81f4\u5f62\u72b6\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5efa\u8bae\u5728\u6bcf\u4e2a\u53bb\u566a\u6b65\u9aa4\u4e2d\u5c06\u8f93\u5165\u7684\u4e8c\u7ef4\u8f68\u8ff9 p\u2208RN\u00d72 \u4e0e\u6211\u4eec\u6a21\u578b\u9884\u6d4b\u7684\u5e72\u51c0\u8f68\u8ff9\u8fdb\u884c\u878d\u5408\u3002\u5728\u7b2c t \u6b65\uff0c\u6211\u4eec\u4ece\u9884\u6d4b\u7684\u6839\u8f68\u8ff9 \u02c6x0 \u4e2d\u63d0\u53d6 2D (x, z) \u5206\u91cf \u02c6p0 \u5e76\u5c06\u5176\u4e0e\u8f93\u5165\u8f68\u8ff9 \u02dcp0 = s\u2217 \u02c6p0 + (1 - s) \u2217 p \u63d2\u503c\uff0c\u5176\u4e2d s \u662f\u6df7\u5408\u6bd4\u4f8b\uff0c\u7528\u4e8e\u63a7\u5236\u751f\u6210\u7684\u8f68\u8ff9\u4e0e\u8f93\u5165\u8f68\u8ff9\u7684\u5339\u914d\u7a0b\u5ea6\u3002\u7136\u540e\uff0c\u6211\u4eec\u7528 \u02dcp0 \u8986\u76d6 x\u02c60 \u7684\u4e8c\u7ef4\u5206\u91cf\uff0c\u5e76\u7ee7\u7eed\u53bb\u566a\u3002\u8fd9\u79cd\u6df7\u5408\u7a0b\u5e8f\u53ef\u786e\u4fdd\u8f93\u51fa\u5927\u81f4\u9075\u5faa\u6240\u9700\u7684\u8def\u5f84\uff0c\u4f46\u4ecd\u80fd\u4fdd\u6301\u8bad\u7ec3\u6709\u7d20\u7684\u6269\u6563\u6a21\u578b\u6240\u56fa\u6709\u7684\u771f\u5b9e\u611f\u3002</p> <p>\u63d0\u5347\u4e3a\u5168\u8eab\u59ff\u52bf \u4e3a\u4e86\u5c06\u751f\u6210\u7684\u9aa8\u76c6\u8f68\u8ff9\u63d0\u5347\u4e3a\u5168\u8eab\u52a8\u4f5c\uff0c\u6211\u4eec\u5229\u7528\u4e86\u73b0\u6709\u7684\u6587\u672c\u5230\u52a8\u4f5c\u5185\u7ed8\u65b9\u6cd5 PriorMDM [34]\uff0c\u8be5\u65b9\u6cd5\u5c06\u5bc6\u96c6\u7684\u4e8c\u7ef4\u6839\u8f68\u8ff9\u4f5c\u4e3a\u8f93\u5165\u3002\u901a\u8fc7\u4f7f\u7528\u8fd9\u79cd\u9884\u5148\u9488\u5bf9\u6587\u672c\u5230\u8fd0\u52a8\u8fdb\u884c\u8fc7\u8bad\u7ec3\u7684\u5f3a\u5927\u6a21\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u6709\u6548\u5730\u751f\u6210\u81ea\u7136\u7684\u3001\u573a\u666f\u611f\u77e5\u7684\u5168\u8eab\u8fd0\u52a8\uff0c\u540c\u65f6\u901a\u8fc7\u6587\u672c\u63d0\u4f9b\u591a\u6837\u5316\u7684\u98ce\u683c\u63a7\u5236\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#object-driven-interaction-motion-generation","title":"Object-Driven Interaction Motion Generation","text":"<p>\u56fe 4\uff1a(a) Loco-3D-FRONT \u5305\u542b\u653e\u7f6e\u5728 3D-FRONT [7] \u573a\u666f\u4e2d\u7684\u65e0\u78b0\u649e\u8fd0\u52a8\u3002(b) \u6211\u4eec\u4ece 3D-FRONT \u4e2d\u968f\u673a\u9009\u53d6\u4e0e\u8fd0\u52a8\u76f8\u5339\u914d\u7684\u6905\u5b50\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u5b50\u5e8f\u5217\u6807\u6ce8\u6587\u5b57\u8bf4\u660e\uff0c\u4ece\u800c\u589e\u5f3a\u4e86 SAMP [10]\u3002</p> <p>\u5bfc\u822a\u7ed3\u675f\u540e\uff0c\u89d2\u8272\u5df2\u5230\u8fbe\u76ee\u6807\u7269\u4f53\u9644\u8fd1\u7684\u4f4d\u7f6e\uff0c\u63a5\u4e0b\u6765\u5e94\u6267\u884c\u6240\u9700\u7684\u4ea4\u4e92\u52a8\u4f5c\u3002\u4e0e 3.3 \u8282\u4e2d\u7684\u4e24\u9636\u6bb5\u5bfc\u822a\u65b9\u6cd5\u4e0d\u540c\uff0c\u7531\u4e8e\u5728\u4ea4\u4e92\u8fc7\u7a0b\u4e2d\u8eab\u4f53\u548c\u7269\u4f53\u51e0\u4f55\u5f62\u72b6\u4e4b\u95f4\u7684\u5173\u7cfb\u975e\u5e38\u5fae\u5999\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u5355\u4e00\u7684\u6269\u6563\u6a21\u578b\u6765\u76f4\u63a5\u751f\u6210\u5168\u8eab\u8fd0\u52a8\u3002</p> <p>\u4ea4\u4e92\u52a8\u4f5c\u751f\u6210\u3002\u4ea4\u4e92\u8fd0\u52a8\u6a21\u578b\u57fa\u4e8e\u4e00\u7cfb\u5217\u5168\u8eab\u59ff\u52bf\uff0c\u5982\u56fe 3(b) \u6240\u793a\u3002\u6211\u4eec\u7684\u59ff\u52bf\u8868\u793a\u6cd5\u6269\u5c55\u4e86 HumanML3D [8]\uff0c\u589e\u52a0\u4e86\u9aa8\u76c6\u7684\u7edd\u5bf9\u4f4d\u7f6e\u548c\u65b9\u5411\uff08x, y, z, cos \u03b8, sin \u03b8\uff09\uff0c\u8fd9\u4e0e\u6211\u4eec\u7684\u5bfc\u822a\u6a21\u578b\u7c7b\u4f3c\u3002\u8fd0\u52a8\u4e2d\u7684\u6bcf\u4e2a\u59ff\u52bf\u5747\u4e3a xn = x\u3001y\u3001z\u3001sin \u03b8\u3001cos \u03b8\u3001\u0307ra\u3001\u0307rx\u3001\u0307rz\u3001ry\u3001jp\u3001jv\u3001jr\u3001cf n\u2208 R268\uff0c\u5176\u4e2d\u0307ra \u4e3a\u6839\u89d2\u901f\u5ea6\uff0c\uff08 \u00d5rx\u3001  rz\uff09\u4e3a\u7ebf\u901f\u5ea6\u6839\uff0cry \u4e3a\u9ad8\u5ea6\u6839\uff0ccf \u4e3a\u811a\u63a5\u89e6\u70b9\uff0cjp\u3001jv\u3001jr \u5206\u522b\u4e3a\u5c40\u90e8\u5173\u8282\u4f4d\u7f6e\u3001\u901f\u5ea6\u548c\u65cb\u8f6c\u3002</p> <p>\u8be5\u6a21\u578b\u4ee5\u6587\u5b57\u63d0\u793a\u3001\u8d77\u59cb\u5168\u8eab\u59ff\u52bf\uff08\u5373\u5bfc\u822a\u9636\u6bb5\u7684\u6700\u7ec8\u59ff\u52bf\uff09\u548c\u6700\u7ec8\u76ee\u6807\u9aa8\u76c6\u4f4d\u7f6e\u548c\u65b9\u5411\u4e3a\u6761\u4ef6\u3002\u76ee\u6807\u9aa8\u76c6\u59ff\u52bf\u901a\u5e38\u53ef\u4ee5\u542f\u53d1\u5f0f\u8ba1\u7b97\uff0c\u4e5f\u53ef\u4ee5\u7531\u7528\u6237\u63d0\u4f9b\u6216\u7531\u5176\u4ed6\u7f51\u7edc\u9884\u6d4b[10]\u30023.3 \u8282\u4e2d\u63cf\u8ff0\u7684\u76f8\u540c\u5c4f\u853d\u7a0b\u5e8f\u7528\u4e8e\u5c06\u5f00\u59cb\u548c\u7ed3\u675f\u76ee\u6807\u4f5c\u4e3a\u8f93\u5165\u4f20\u9012\u7ed9\u6a21\u578b\u3002\u5728\u6d4b\u8bd5\u65f6\uff0c\u6211\u4eec\u4e5f\u4f1a\u4f7f\u7528\u76f8\u540c\u7684\u76ee\u6807\u5f15\u5bfc\u6765\u63d0\u9ad8\u6700\u7ec8\u9aa8\u76c6\u59ff\u52bf\u7684\u51c6\u786e\u6027\u3002</p> <p>\u5bf9\u8c61\u8868\u793a\u3002\u57fa\u7840\u4ea4\u4e92\u6269\u6563\u6a21\u578b\u9996\u5148\u662f\u5728\u6765\u81ea HumanML3D \u548c SAMP [10] \u7684\u4ea4\u4e92\u52a8\u4f5c\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\u7684\uff0c\u5176\u4e2d\u4e0d\u5305\u542b\u4efb\u4f55\u7269\u4f53\uff0c\u8fd9\u6709\u52a9\u4e8e\u4e3a\u6587\u672c\u63d0\u793a\u9a71\u52a8\u7684\u4ea4\u4e92\u52a8\u4f5c\u5efa\u7acb\u5f3a\u5927\u7684\u5148\u9a8c\u3002\u4e0e\u5bfc\u822a\u7c7b\u4f3c\uff0c\u6211\u4eec\u968f\u540e\u4f7f\u7528\u65b0\u7684\u5bf9\u8c61\u611f\u77e5\u53d8\u6362\u7f16\u7801\u5668\u6765\u589e\u5f3a\u57fa\u7840\u6a21\u578b\uff0c\u5e76\u5206\u522b\u5bf9\u8be5\u7f16\u7801\u5668\u8fdb\u884c\u5fae\u8c03\u3002</p> <p>\u5728\u6bcf\u4e2a\u53bb\u566a\u6b65\u9aa4 t\uff0c\u6211\u4eec\u5229\u7528\u57fa\u70b9\u96c6\uff08BPS\uff09[32] \u6765\u8ba1\u7b97\u4e24\u4e2a\u5173\u952e\u7279\u5f81\uff1a\u7269\u4f53\u7684\u51e0\u4f55\u5f62\u72b6\u548c\u4eba\u4e0e\u7269\u4f53\u7684\u5173\u7cfb\u3002\u9996\u5148\uff0c\u5728\u7269\u4f53\u4e2d\u5fc3\u5468\u56f4\u5b9a\u4e49\u4e00\u4e2a\u534a\u5f84\u4e3a 1.0 \u7c73\u7684\u7403\u4f53\uff0c\u7136\u540e\u5728\u8be5\u7403\u4f53\u5185\u968f\u673a\u62bd\u53d6 1024 \u4e2a\u70b9\u7ec4\u6210 BPS\u3002\u7136\u540e\u8ba1\u7b97 BPS \u4e2d\u6bcf\u4e2a\u70b9\u4e0e\u7269\u4f53\u8868\u9762\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u6355\u6349\u7269\u4f53\u7684\u51e0\u4f55\u7279\u5f81\u5e76\u5b58\u50a8\u4e3a BO \u2208 R1024\u3002\u63a5\u4e0b\u6765\uff0c\u5bf9\u4e8e\u566a\u58f0\u8f93\u5165\u5e8f\u5217\u4e2d\u65f6\u95f4\u6b65 n \u7684\u6bcf\u4e2a\u8eab\u4f53\u59ff\u6001 xtn\uff0c\u6211\u4eec\u8ba1\u7b97 BPS \u4e2d\u6bcf\u4e2a\u70b9\u5230\u4efb\u4f55\u8eab\u4f53\u5173\u8282 t \u7684\u6700\u5c0f\u8ddd\u79bb\uff0c\u5f97\u51fa Bn\u2208 R1024\u3002\u7531\u6b64\u5f97\u5230\u7684\u7279\u5f81\u5e8f\u5217 BH = B1, . , BN \u4ee3\u8868\u4e86\u6574\u4e2a\u8fd0\u52a8\u8fc7\u7a0b\u4e2d\u4eba\u4e0e\u7269\u4f53\u7684\u5173\u7cfb\u3002\u6700\u540e\uff0c\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65[xnt; Bn; BO ]\uff0c\u5c06\u7269\u4f53\u548c\u4eba-\u7269\u4e92\u52a8\u7279\u5f81\u4e0e\u539f\u59cb\u59ff\u52bf\u8868\u793a\u5408\u5e76\uff0c\u5e76\u8f93\u5165 MLP \u4ee5\u751f\u6210\u5408\u5e76\u8868\u793a\uff0c\u4f5c\u4e3a\u573a\u666f\u611f\u77e5\u5206\u652f\u7684\u8f93\u5165\u3002</p> <p>\u6d4b\u8bd5\u65f6\uff0c\u78b0\u649e\u76ee\u6807\u7528\u4e8e\u963b\u6b62\u4eba\u4e0e\u7269\u4f53\u4e4b\u95f4\u7684\u7a7f\u900f\u3002\u8fd9\u4e0e\u7b2c 3.3 \u8282\u4e2d\u63cf\u8ff0\u7684\u78b0\u649e\u635f\u5931\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46 SDF \u4f53\u79ef\u662f\u4e3a\u4e09\u7ef4\u7269\u4f53\u8ba1\u7b97\u7684\uff0c\u4f4d\u4e8e\u7269\u4f53\u5185\u90e8\u7684\u8eab\u4f53\u9876\u70b9\u4f1a\u53d7\u5230\u60e9\u7f5a\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1\u8865\u5145\u6750\u6599\u3002</p> <p>\u573a\u666f\u611f\u77e5\u8bad\u7ec3\u548c\u6570\u636e\u3002\u4e3a\u4e86\u8bad\u7ec3\u573a\u666f\u611f\u77e5\u5206\u652f\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 SAMP \u6570\u636e\u96c6[10]\uff0c\u8be5\u6570\u636e\u96c6\u53ef\u540c\u65f6\u6355\u6349\u8fd0\u52a8\u548c\u7269\u4f53\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u4ece SAMP \u6570\u636e\u96c6\u4e2d\u6d89\u53ca\u4e0d\u540c\u9ad8\u5ea6\u6905\u5b50\u7684 80 \u4e2a\u5750\u59ff\u8fd0\u52a8\u5e8f\u5217\u4e2d\u63d0\u53d6\u7684 \"\u5750\u59ff \"\u548c \"\u7ad9\u59ff \"\u4ea4\u4e92\u4e0a\uff0c\u5982\u56fe 4(b)\u6240\u793a\u3002\u4e3a\u4e86\u4f7f\u5bf9\u8c61\u7684\u51e0\u4f55\u5f62\u72b6\u591a\u6837\u5316\uff0c\u6211\u4eec\u4ece 3D-FRONT [7] \u4e2d\u968f\u673a\u9009\u62e9\u5bf9\u8c61\uff0c\u4ee5\u5339\u914d\u539f\u59cb SAMP \u8fd0\u52a8\u5e8f\u5217\u4e2d\u4eba\u4f53\u59ff\u52bf\u4e0a\u7684\u63a5\u89e6\u9876\u70b9\u3002\u8fd9\u79cd\u5339\u914d\u662f\u5229\u7528 MOVER [45] \u4e2d\u6982\u8ff0\u7684\u63a5\u89e6\u635f\u5931\u548c\u78b0\u649e\u635f\u5931\u6280\u672f\u5b9e\u73b0\u7684\u3002</p> <p>\u539f\u59cb\u7684 SAMP \u52a8\u4f5c\u901a\u5e38\u8f83\u957f\uff08\u223c100 \u79d2\uff09\uff0c\u800c\u4e14\u7f3a\u4e4f\u6210\u5bf9\u7684\u6587\u5b57\u63cf\u8ff0\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a \"\u5750 \"\u7684\u52a8\u4f5c\u5e8f\u5217\u5305\u62ec\u8d70\u5230\u4e00\u4e2a\u7269\u4f53\u524d\u3001\u5750\u4e0b\u3001\u7ad9\u8d77\u548c\u79bb\u5f00\u3002\u4e3a\u4e86\u6709\u6548\u5730\u5b66\u4e60\u4e2a\u4eba\u6280\u80fd\uff0c\u6211\u4eec\u63d0\u53d6\u4e86\u5305\u542b\u4ee5\u5750\u59ff\u5f00\u59cb\u6216\u7ed3\u675f\u7684\u7279\u5b9a\u4ea4\u4e92\u7684\u5b50\u5e8f\u5217\uff0c\u5982 \"\u8d70\u7136\u540e\u5750\"\u3001\"\u7ad9\u8d77\u6765\u7136\u540e\u5750\"\u3001\"\u4ece\u5750\u59ff\u7ad9\u8d77\u6765 \"\u548c \"\u4ece\u5750\u59ff\u8d70\"\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u4e3a\u6bcf\u4e2a\u5b50\u5e8f\u5217\u6ce8\u91ca\u4e86\u6587\u5b57\u8bf4\u660e\uff0c\u8fd9\u4e9b\u6587\u5b57\u8bf4\u660e\u901a\u5e38\u5305\u542b\u5750\u59ff\u7684\u98ce\u683c\uff0c\u4f8b\u5982 \"\u4e00\u4e2a\u4eba\u8d70\u5230\u6905\u5b50\u4e0a\u5750\u4e0b\uff0c\u540c\u65f6\u53cc\u624b\u4ea4\u53c9\"\u3002\u5bf9\u8fd0\u52a8\u548c\u7269\u4f53\u8fdb\u884c\u5de6\u53f3\u6570\u636e\u6269\u589e\u540e\uff0c\u6bcf\u4e2a\u8fd0\u52a8\u5e8f\u5217\u53ef\u4ea7\u751f\u7ea6 200 \u4e2a\u5b50\u5e8f\u5217\uff0c\u6bcf\u4e2a\u5b50\u5e8f\u5217\u90fd\u914d\u6709\u76f8\u5e94\u7684\u6587\u5b57\u8bf4\u660e\uff0c\u5e76\u4ee5\u5404\u79cd\u7269\u4f53\u4e3a\u7279\u5f81\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#experimental-evaluation","title":"Experimental Evaluation","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#implementation-details","title":"Implementation Details","text":"<p>\u8bad\u7ec3 \u6211\u4eec\u6839\u636e Loco-3D-FRONT \u6570\u636e\u96c6\u7684\u4e09\u7ef4\u8fd0\u52a8\u548c\u6587\u672c\u63cf\u8ff0\u5bf9\u5bfc\u822a\u6a21\u578b\u7684\u573a\u666f\u8bc6\u522b\u5206\u652f\u8fdb\u884c\u4e86 420k \u6b65\u4f18\u5316\u8bad\u7ec3\u3002\u968f\u540e\uff0c\u6211\u4eec\u51bb\u7ed3\u57fa\u7840\u6a21\u578b\u6743\u91cd\uff0c\u5e76\u5229\u7528\u989d\u5916\u7684 2D \u5730\u56fe\u8f93\u5165\u5bf9\u573a\u666f\u611f\u77e5\u5206\u652f\u8fdb\u884c\u5fae\u8c03\uff0c\u5171\u8fdb\u884c\u4e86 20k \u6b65\u3002\u540c\u6837\uff0c\u6211\u4eec\u4ea4\u4e92\u6a21\u578b\u7684\u573a\u666f\u65e0\u5173\u57fa\u7840\u6a21\u578b\u9996\u5148\u5728\u4e0d\u5305\u542b\u7269\u4f53\u7684 HumanML3D [8] \u548c SAMP [10] \u6df7\u5408\u6570\u636e\u4e0a\u8fdb\u884c 400k \u6b65\u8bad\u7ec3\u3002\u7136\u540e\uff0c\u5728\u5e26\u6709\u4e09\u7ef4\u7269\u4f53\u8f93\u5165\u7684\u6587\u672c\u6ce8\u91ca SAMP \u6570\u636e\u4e0a\u5bf9\u7269\u4f53\u611f\u77e5\u5206\u652f\u8fdb\u884c\u5fae\u8c03\uff0c\u518d\u8fdb\u884c 20k \u6b65\u8bad\u7ec3\u3002</p> <p>\u6d4b\u8bd5\u65f6\u95f4\u5f15\u5bfc\u3002\u5728\u5bfc\u822a\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u5c06\u76ee\u6807\u5230\u8fbe\u5f15\u5bfc\u6743\u91cd\u03b1\u8bbe\u4e3a30\uff0c\u78b0\u649e\u5f15\u5bfc\u6743\u91cd\u03b1\u8bbe\u4e3a1000\u3002\u5728\u4ea4\u4e92\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u5c06\u76ee\u6807\u5230\u8fbe\u635f\u5931\u6743\u91cd\u8bbe\u4e3a 1000\uff0c\u78b0\u649e SDF \u635f\u5931\u6743\u91cd\u8bbe\u4e3a 10\u3002\u4e3a\u786e\u4fdd\u751f\u6210\u7ed3\u679c\u7684\u5e73\u6ed1\u6027\uff0c\u6211\u4eec\u5728\u53bb\u566a\u7684\u6700\u540e\u4e00\u4e2a\u65f6\u95f4\u6b65\u6392\u9664\u4e86\u63a8\u7406\u5f15\u5bfc\u3002\u4e3a\u4e86\u4e0e\u57fa\u7ebf\u8fdb\u884c\u516c\u5e73\u6bd4\u8f83\uff0c\u9664\u975e\u5b9e\u9a8c\u4e2d\u660e\u786e\u8bf4\u660e\uff0c\u5426\u5219\u6211\u4eec\u4e0d\u4f7f\u7528\u63a8\u7406\u5f15\u5bfc\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#evaluation-data-and-metrics","title":"Evaluation Data and Metrics","text":"<p>\u8868 1\uff1a\u5728 Loco-3D-FRONT \u6d4b\u8bd5\u96c6\u4e0a\u5bf9\u5bfc\u822a\u8fd0\u52a8\u751f\u6210\u7684\u8bc4\u4f30\u3002\uff08\u5de6\u56fe\uff09\u5bf9\u4e8e\u751f\u6210\u7684\u9aa8\u76c6\u8f68\u8ff9\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u4ee5\u8f83\u4f4e\u7684\u78b0\u649e\u7387\u5b9e\u73b0\u4e86\u6700\u4f73\u7684\u76ee\u6807\u5230\u8fbe\u7cbe\u5ea6\u3002(\u53f3\u56fe\uff09\u5728\u5bf9\u5168\u8eab\u8fd0\u52a8\u8fdb\u884c\u5185\u7ed8\u5236\u540e\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u4fdd\u6301\u4e86\u4e0e\u7ed9\u5b9a\u6587\u672c\u63d0\u793a\u4e00\u81f4\u7684\u591a\u6837\u5316\u771f\u5b9e\u8fd0\u52a8\uff0c\u4e0e\u57fa\u4e8e\u6269\u6563\u7684\u573a\u666f\u65e0\u5173 GMD \u548c OmniControl \u76f8\u6bd4\u5177\u6709\u7ade\u4e89\u529b\u3002</p> <p>\u5bfc\u822a \u5bfc\u822a\u6027\u80fd\u4f7f\u7528 Loco-3D-FRONT \u6d4b\u8bd5\u96c6\u8fdb\u884c\u8bc4\u4f30\uff0c\u8be5\u6d4b\u8bd5\u96c6\u7531\u5927\u7ea6 1000 \u4e2a\u5e8f\u5217\u7ec4\u6210\u3002\u6211\u4eec\u7684\u6307\u6807\u5206\u522b\u8bc4\u4f30\u751f\u6210\u7684\u6839\u8f68\u8ff9\u548c\u5185\u7ed8\u5236\u540e\u7684\u5168\u8eab\u8fd0\u52a8\u3002\u5bf9\u4e8e\u6839\u8f68\u8ff9\uff0c\u6211\u4eec\u6d4b\u91cf\u7684\u662f\u4e8c\u7ef4\uff08\u6c34\u5e73 xz\uff09\u6839\u4f4d\u7f6e\uff08\u7c73\uff09\u3001\u65b9\u5411\uff08\u5f27\u5ea6\uff09\u548c\u6839\u9ad8\u5ea6\uff08\u7c73\uff09\u7684\u76ee\u6807\u5230\u8fbe\u7cbe\u5ea6\u3002\u78b0\u649e\u6982\u7387\u662f\u6307\u5728\u751f\u6210\u7684\u8f68\u8ff9\u4e2d\u53d1\u751f\u78b0\u649e\u7684\u5e27\u6570\uff0c\u7528\u4e8e\u8bc4\u4f30\u6839\u8fd0\u52a8\u4e0e\u73af\u5883\u7684\u4e00\u81f4\u6027\u3002\u5bf9\u4e8e\u5185\u7ed8\u5236\u540e\u7684\u5168\u8eab\u8fd0\u52a8\uff0c\u6211\u4eec\u91c7\u7528\u4e86\u5148\u524d\u5de5\u4f5c\u4e2d\u7684\u901a\u7528\u6307\u6807[8]\u3002FID \u8861\u91cf\u8fd0\u52a8\u7684\u903c\u771f\u5ea6\uff0cR-\u7cbe\u5ea6\uff08top-3\uff09\u8bc4\u4f30\u6587\u672c\u4e0e\u8fd0\u52a8\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\uff0c\u591a\u6837\u6027\u5219\u6839\u636e\u91c7\u6837\u8fd0\u52a8\u4e4b\u95f4\u7684\u5e73\u5747\u6210\u5bf9\u8ddd\u79bb\u8ba1\u7b97\u3002\u6b64\u5916\uff0c\u811a\u90e8\u6ed1\u884c\u8f68\u8ff9[19] \u901a\u8fc7\u4efb\u4e00\u811a\u5728\u4e0e\u5730\u9762\u63a5\u89e6\uff08\u811a\u9ad8\u5c0f\u4e8e 5 \u5398\u7c73\uff09\u65f6\u6ed1\u52a8\u8ddd\u79bb\u5927\u4e8e\u6307\u5b9a\u9608\u503c\uff082.5 \u5398\u7c73\uff09\u7684\u5e27\u6bd4\u4f8b\u6765\u8bc4\u4f30\u8fd0\u52a8\u4e0e\u5730\u9762\u4ea4\u4e92\u7684\u7269\u7406\u53ef\u4fe1\u5ea6\u3002</p> <p>\u4e92\u52a8 \u4e3a\u4e86\u8bc4\u4f30\u5168\u8eab\u7684\u4eba-\u7269\u4e92\u52a8\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 SAMP \u6570\u636e\u96c6[10]\u4e2d\u5df2\u5efa\u7acb\u7684\u6d4b\u8bd5\u5206\u96c6\uff0c\u5176\u4e2d\u5305\u542b\u4e0e\u5750\u59ff\u76f8\u5173\u7684\u52a8\u4f5c\u3002\u4e0e\u5bfc\u822a\u4e00\u6837\uff0c\u6211\u4eec\u901a\u8fc7\u4f4d\u7f6e\u3001\u65b9\u5411\u548c\u9ad8\u5ea6\u8bef\u5dee\u6765\u5206\u6790\u5230\u8fbe\u76ee\u6807\u7684\u51c6\u786e\u6027\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u901a\u8fc7\u8ba1\u7b97\u751f\u6210\u8fd0\u52a8\u548c\u4ea4\u4e92\u5bf9\u8c61\u4e4b\u95f4\u7684\u5e73\u5747\u7a7f\u900f\u503c\u548c\u7a7f\u900f\u6bd4\u6765\u8bc4\u4f30\u7269\u7406\u53ef\u4fe1\u5ea6\u3002\u7a7f\u900f\u503c\u662f\u751f\u6210\u52a8\u4f5c\u4e2d\u6240\u6709\u76f8\u4e92\u7a7f\u900f\u7684\u8eab\u4f53\u9876\u70b9\u7684\u5e73\u5747 SDF \u503c\uff0c\u800c\u7a7f\u900f\u6bd4\u5219\u662f\u6240\u6709\u751f\u6210\u52a8\u4f5c\u5e27\u4e2d\u5305\u542b\u7a7f\u900f\uff08\u5373 SDF \u503c&lt;-3 \u5398\u7c73\uff09\u7684\u751f\u6210\u59ff\u52bf\u7684\u5206\u6570\u3002\u6211\u4eec\u8fd8\u8fdb\u884c\u4e86\u4e00\u9879\u7528\u6237\u7814\u7a76\uff0c\u4ee5\u6bd4\u8f83\u5404\u79cd\u65b9\u6cd5\u3002\u6211\u4eec\u4f7f\u7528 Amazon Mechanical Turk\uff08AMT\uff09[2] \u5f81\u96c6\u4e86 30 \u4f4d\u7528\u6237\u7684\u8bc4\u4f30\u3002\u6211\u4eec\u5411\u8bc4\u5206\u8005\u5c55\u793a\u4e86\u4e24\u6bb5\u5e76\u6392\u751f\u6210\u7684\u4e92\u52a8\u89c6\u9891\uff0c\u5e76\u8be2\u95ee\u4ed6\u4eec\u54ea\u6bb5\u89c6\u9891\u66f4\u903c\u771f\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1\u8865\u5145\u6750\u6599\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#comparisons","title":"Comparisons","text":"<p>\u56fe 5\uff1a\u5bfc\u822a\u751f\u6210\u6027\u80fd\u3002\u7eff\u8272\u7bad\u5934\u4e3a\u8d77\u59cb\u59ff\u52bf\uff0c\u7ea2\u8272\u7bad\u5934\u4e3a\u76ee\u6807\u59ff\u52bf\u3002\u6211\u4eec\u7684\u65b9\u6cd5\u80fd\u66f4\u51c6\u786e\u5730\u5230\u8fbe\u76ee\u6807\u5e76\u907f\u5f00\u969c\u788d\u7269\uff0c\u800c\u98ce\u683c\u5219\u7531\u6587\u5b57\u63d0\u793a\u63a7\u5236\u3002</p> <p>\u8868 2\uff1a\u5728 SAMP [10] \u5750\u59ff\u6d4b\u8bd5\u96c6\u4e0a\u5bf9\u4eba-\u7269\u4ea4\u4e92\u8fd0\u52a8\u751f\u6210\u7684\u8bc4\u4f30\u3002\u4e0e DIMOS \u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u80fd\u66f4\u51c6\u786e\u5730\u8fbe\u5230\u76ee\u6807\u59ff\u52bf\uff0c\u5e76\u4e14\u7a7f\u900f\u7269\u4f53\u7684\u6b21\u6570\u66f4\u5c11\uff0c\u4ece\u800c\u83b7\u5f97\u66f4\u9ad8\u7684\u4eba\u7c7b\u504f\u597d\u5ea6\u3002</p> <p></p> <p>\u5bfc\u822a \u6211\u4eec\u5c06\u6211\u4eec\u7684\u65b9\u6cd5\u4e0e\u4e4b\u524d\u7684\u573a\u666f\u611f\u77e5\u548c\u573a\u666f\u65e0\u5173\u8fd0\u52a8\u751f\u6210\u65b9\u6cd5\u8fdb\u884c\u4e86\u6bd4\u8f83\u5206\u6790\uff0c\u5982\u8868 1 \u6240\u793a\u30021. \u5982 3.3 \u8282\u6240\u8ff0\uff0c\u6bcf\u79cd\u65b9\u6cd5\u90fd\u4ee5\u6587\u672c\u63d0\u793a\u4ee5\u53ca\u5f00\u59cb\u548c\u7ed3\u675f\u76ee\u6807\u59ff\u52bf\u4e3a\u6761\u4ef6\u3002TRACE \u57fa\u7ebf\u548c\u6211\u4eec\u7684\u65b9\u6cd5 TeSMo \u4e5f\u63a5\u6536\u4e8c\u7ef4\u5730\u9762\u5730\u56fe\u4f5c\u4e3a\u8f93\u5165\u3002</p> <p>\u6211\u4eec\u9996\u5148\u6bd4\u8f83\u4e86 GMD [19] \u548c OmniControl [42]\uff0c\u5b83\u4eec\u662f\u4e4b\u524d\u5728 HumanML3D \u4e0a\u8bad\u7ec3\u7684\u573a\u666f\u65e0\u5173\u6587\u672c\u5230\u8fd0\u52a8\u7684\u6269\u6563\u6a21\u578b\uff0c\u53ef\u4ee5\u9075\u5faa\u5404\u79cd\u8fd0\u52a8\u5b66\u8fd0\u52a8\u7ea6\u675f\u3002GMD \u5229\u7528\u5f00\u59cb\u548c\u7ed3\u675f\u76ee\u6807\u7684\u6c34\u5e73\u9aa8\u76c6\u4f4d\u7f6e\uff08x\u3001z\uff09\u751f\u6210\u5bc6\u96c6\u7684\u6839\u8f68\u8ff9\uff0c\u7136\u540e\u751f\u6210\u5168\u8eab\u8fd0\u52a8\u3002OmniControl \u5c06\u6c34\u5e73\u9aa8\u76c6\u4f4d\u7f6e\uff08x\u3001z\uff09\u548c\u9ad8\u5ea6 y \u4f5c\u4e3a\u8f93\u5165\uff0c\u5728\u4e00\u4e2a\u9636\u6bb5\u5185\u76f4\u63a5\u751f\u6210\u5168\u8eab\u8fd0\u52a8\u3002\u6211\u4eec\u7684\u5bfc\u822a\u6a21\u578b\u5b9e\u73b0\u4e86\u66f4\u9ad8\u7684\u76ee\u6807\u5230\u8fbe\u7cbe\u5ea6\uff0c\u4f8b\u5982\uff0c\u6839\u90e8\u4f4d\u7f6e\u7684\u7cbe\u5ea6\u4e3a 16.9 \u5398\u7c73\uff0c\u56e0\u4e3a\u5b83\u662f\u4e13\u95e8\u9488\u5bf9\u76ee\u6807\u5230\u8fbe\u8fd0\u52a8\u4efb\u52a1\u800c\u8bad\u7ec3\u7684\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5728\u8868 1 \u7684\u53f3\u534a\u90e8\u5206\uff0c\u6211\u4eec\u7684\u5bfc\u822a\u6a21\u578b\u7684\u5168\u8eab\u8fd0\u52a8\u8f68\u8ff9\u662f\u5728\u4e00\u4e2a\u5355\u4e00\u9636\u6bb5\u5b8c\u6210\u7684\u3002\u5728\u8868 1 \u7684\u53f3\u534a\u90e8\u5206\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u7ecf\u8fc7\u5185\u7ed8\u5236\u540e\u7684\u5168\u8eab\u8fd0\u52a8\u5728\u903c\u771f\u5ea6\u3001\u6587\u672c\u8ddf\u968f\u6027\u548c\u591a\u6837\u6027\u65b9\u9762\u90fd\u4e0d\u76f8\u4e0a\u4e0b\uff0c\u540c\u65f6\u8fd8\u53d6\u5f97\u4e86\u6700\u4f73\u7684\u811a\u90e8\u6ed1\u884c\u6548\u679c\u3002\u8fd9\u8868\u660e\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u5728\u8fd0\u52a8\u751f\u6210\u8fc7\u7a0b\u4e2d\u589e\u52a0\u4e86\u573a\u666f\u611f\u77e5\u529f\u80fd\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u903c\u771f\u5ea6\u6216\u6587\u672c\u63a7\u5236\u3002</p> <p>\u4e3a\u4e86\u8bc1\u660e\u6211\u4eec\u7684\u53cc\u5206\u652f\u6a21\u578b\u67b6\u6784\u7684\u5408\u7406\u6027\uff0c\u6211\u4eec\u5bf9 TRACE [33]\u8fdb\u884c\u4e86\u6539\u7f16\uff0c\u8fd9\u662f\u4e00\u79cd\u6700\u65b0\u7684\u6839\u8f68\u8ff9\u751f\u6210\u6a21\u578b\uff0c\u65e8\u5728\u5c06\u73af\u5883\u7684\u4e8c\u7ef4\u5730\u56fe\u4f5c\u4e3a\u8f93\u5165\u3002\u7ecf\u8fc7\u6539\u7f16\u7684 TRACE \u67b6\u6784\u4e0e\u56fe 3(a) \u4e2d\u7684\u6a21\u578b\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u57fa\u7840\u8f6c\u6362\u5668\u6ca1\u6709\u4f7f\u7528\u5355\u72ec\u7684\u573a\u666f\u611f\u77e5\u5206\u652f\uff0c\u800c\u662f\u76f4\u63a5\u5c06\u7f16\u7801\u540e\u7684\u4e8c\u7ef4\u5730\u9762\u5730\u56fe\u7279\u5f81\u4f5c\u4e3a\u8f93\u5165\u3002\u56e0\u6b64\uff0c\u4e0e\u6211\u4eec\u7684\u53cc\u5206\u652f\u5fae\u8c03\u65b9\u6cd5\u76f8\u6bd4\uff0c\u5355\u5206\u652f\u67b6\u6784\u5fc5\u987b\u4ece\u5934\u5f00\u59cb\u8bad\u7ec3\u3002\u8868 1 \u8868 1 \u663e\u793a\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u80fd\u751f\u6210\u66f4\u5408\u7406\u7684\u6839\u8f68\u8ff9\uff0c\u78b0\u649e\u66f4\u5c11\uff0c\u76ee\u6807\u66f4\u51c6\u786e\u3002\u6211\u4eec\u8fd8\u53d1\u73b0\uff0c\u4ece\u5934\u5f00\u59cb\u8bad\u7ec3\u6211\u4eec\u7684\u5b8c\u6574\u53cc\u5206\u652f\u67b6\u6784\uff08\u8868 1 \u4e2d\u7684 1 \u7ea7\u8bad\u7ec3\uff09\uff0c\u800c\u4e0d\u662f\u5148\u8fdb\u884c\u9884\u8bad\u7ec3\u518d\u8fdb\u884c\u5fae\u8c03\uff0c\u4f1a\u964d\u4f4e\u76ee\u6807\u5230\u8fbe\u7387\u548c\u5185\u7ed8\u5236\u540e\u7684\u6700\u7ec8\u5168\u8eab\u8fd0\u52a8\u6548\u679c\u3002</p> <p>\u56fe 5 \u663e\u793a\u4e86\u5728\u4e0d\u540c\u623f\u95f4\u4e2d\u751f\u6210\u7684\u8fd0\u52a8\u7684\u5b9a\u6027\u6bd4\u8f83\u3002GMD \u503e\u5411\u4e8e\u751f\u6210\u7b80\u5355\u7684\u76f4\u7ebf\u884c\u8d70\u8f68\u8ff9\u3002OmniControl \u548c GMD \u65e0\u6cd5\u51c6\u786e\u5230\u8fbe\u76ee\u6807\u59ff\u52bf\uff0c\u5e76\u4e14\u4f1a\u5ffd\u7565\u5468\u56f4\u73af\u5883\uff0c\u5bfc\u81f4\u4e0e\u73af\u5883\u53d1\u751f\u78b0\u649e\u3002\u4e0e\u5176\u4ed6\u65b9\u6cd5\u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u65b9\u6cd5 TeSMo \u80fd\u591f\u5728\u5404\u79cd\u573a\u666f\u4e2d\u751f\u6210\u7531\u6587\u672c\u63a7\u5236\u7684\u591a\u79cd\u8fd0\u52a8\u65b9\u5f0f\uff0c\u5e76\u5b9e\u73b0\u66f4\u9ad8\u7684\u76ee\u6807\u5230\u8fbe\u7cbe\u5ea6\u3002</p> <p>\u4e92\u52a8\u3002\u8868 2 \u5c06\u6211\u4eec\u7684\u65b9\u6cd5\u4e0e DIMOS [53] \u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u8868 2 \u6bd4\u8f83\u4e86\u6211\u4eec\u7684\u65b9\u6cd5\u548c DIMOS [53]\uff0c\u540e\u8005\u662f\u5229\u7528\u5f3a\u5316\u5b66\u4e60\u8bad\u7ec3\u751f\u6210\u4ea4\u4e92\u7684\u6700\u5148\u8fdb\u65b9\u6cd5\u3002DIMOS \u8981\u6c42\u5c06\u5168\u8eab\u7684\u6700\u7ec8\u76ee\u6807\u59ff\u52bf\u4f5c\u4e3a\u7b56\u7565\u8f93\u5165\uff0c\u800c\u6211\u4eec\u7684\u65b9\u6cd5\u4ec5\u4f7f\u7528\u9aa8\u76c6\u59ff\u52bf\u3002\u5c3d\u7ba1\u5982\u6b64\uff0cDIMOS \u4ecd\u96be\u4ee5\u51c6\u786e\u5230\u8fbe\u76ee\u6807\uff0c\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u81ea\u56de\u5f52\u6eda\u52a8\u8fc7\u7a0b\u4e2d\u7684\u8bef\u5dee\u7d2f\u79ef\u9020\u6210\u7684\u3002\u6211\u4eec\u7684\u65b9\u6cd5\u4e0e\u4ea4\u4e92\u5bf9\u8c61\u53d1\u751f\u76f8\u4e92\u7a7f\u63d2\u7684\u60c5\u51b5\u8f83\u5c11\uff0c\u800c\u4e14\u7528\u6237\u7814\u7a76\u663e\u793a\uff0c\u4e0e DIMOS \u751f\u6210\u7684\u52a8\u4f5c\u76f8\u6bd4\uff0c\u7528\u6237\u660e\u663e\u66f4\u559c\u6b22\u6211\u4eec\u7684\u65b9\u6cd5\u751f\u6210\u7684\u52a8\u4f5c\uff08\u559c\u6b22\u7387\u4e3a 71.9%\uff09\u3002\u56fe 6 \u5bf9\u8fd9\u4e24\u79cd\u65b9\u6cd5\u8fdb\u884c\u4e86\u5b9a\u6027\u6bd4\u8f83\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u66f4\u51c6\u786e\u7684\u76ee\u6807\u6355\u6349\u51cf\u5c11\u4e86\u5750\u7740\u65f6\u6f02\u6d6e\u6216\u7a7f\u900f\u6905\u5b50\u7684\u60c5\u51b5\u3002\u6b64\u5916\uff0cDIMOS \u751f\u6210\u7684\u4ea4\u4e92\u7f3a\u4e4f\u591a\u6837\u6027\uff0c\u800c\u4e14\u4e0d\u80fd\u4ee5\u6587\u672c\u4e3a\u6761\u4ef6\u3002</p> <p>\u8868 3\uff1a\u6d4b\u8bd5\u65f6\u95f4\u5f15\u5bfc\u8bc4\u4f30\u3002\u5728\u63a8\u7406\u8fc7\u7a0b\u4e2d\uff0c\u4e3a\u8fbe\u5230\u76ee\u6807\u59ff\u6001\u548c\u907f\u514d\u78b0\u649e\u800c\u6dfb\u52a0\u5f15\u5bfc\u529f\u80fd\u53ef\u63d0\u9ad8\u6027\u80fd\u3002\u6240\u6709\u6307\u6807\u90fd\u662f\u8d8a\u4f4e\u8d8a\u597d\u3002</p> <p></p> <p>\u56fe 6\uff1a\u4e0e DIMOS [53]\u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u751f\u6210\u7684\u4eba\u4e0e\u7269\u4f53\u4e4b\u95f4\u7684\u4e92\u52a8\u66f4\u52a0\u903c\u771f\uff0c\u51cf\u5c11\u4e86\u6d6e\u52a8\u548c\u7a7f\u63d2\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#analysis-of-capabilities","title":"Analysis of Capabilities","text":"<p>\u5728\u56fe 1 \u4e2d\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u6267\u884c\u4e86\u4e00\u8fde\u4e32\u7684\u64cd\u4f5c\uff0c\u5b9e\u73b0\u4e86\u4e0e\u573a\u666f\u4e2d\u591a\u4e2a\u5bf9\u8c61\u7684\u904d\u5386\u548c\u4ea4\u4e92\u3002\u56fe 7 \u5c55\u793a\u4e86\u5176\u4ed6\u5173\u952e\u529f\u80fd\u3002\u5728\u9876\u90e8\u90e8\u5206\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u901a\u8fc7\u5404\u79cd\u6587\u672c\u63d0\u793a\u8fdb\u884c\u63a7\u5236\u3002\u7279\u522b\u662f\u5728\u4ea4\u4e92\u65b9\u9762\uff0c\u4e0d\u540c\u7684\u6587\u672c\u63cf\u8ff0\u53ef\u4ee5\u533a\u5206\u5750\u6216\u7ad9\u7b49\u52a8\u4f5c\uff0c\u5e76\u5141\u8bb8\u5750\u59ff\u52a8\u4f5c\u98ce\u683c\u5316\uff0c\u4f8b\u5982\u4ea4\u53c9\u53cc\u81c2\u3002\u5728\u4e2d\u95f4\u90e8\u5206\uff0c\u6211\u4eec\u901a\u8fc7\u9075\u5faa\u9884\u5b9a\u4e49\u7684 A* \u8def\u5f84\u6765\u5b9e\u73b0\u7528\u6237\u5bf9\u8f68\u8ff9\u7684\u63a7\u5236\u3002\u901a\u8fc7\u8c03\u6574\u6df7\u5408\u6bd4\u4f8b\uff0c\u7528\u6237\u53ef\u4ee5\u8c03\u6574\u751f\u6210\u7684\u8f68\u8ff9\u4e0e A* \u7684\u7d27\u5bc6\u7a0b\u5ea6\u3002\u5728\u56fe 7 \u7684\u5e95\u90e8\uff0c\u6211\u4eec\u5728\u6d4b\u8bd5\u65f6\u5229\u7528\u5f15\u5bfc\u529f\u80fd\uff0c\u9f13\u52b1\u8fd0\u52a8\u4ee5\u8fbe\u5230\u76ee\u6807\uff0c\u540c\u65f6\u907f\u514d\u78b0\u649e\u548c\u7a7f\u900f\u3002\u5982\u8868 3 \u6240\u793a \u5982\u8868 3 \u6240\u793a\uff0c\u5c06\u5f15\u5bfc\u635f\u5931\u7ed3\u5408\u8d77\u6765\uff0c\u53ef\u4ee5\u6539\u5584\u5bfc\u822a\u548c\u4ea4\u4e92\u6548\u679c\u3002</p> <p></p> <p>\u56fe 7\uff1aTeSMo \u7684\u529f\u80fd\u3002(\u4e0a\u56fe\uff09\u591a\u6837\u5316\u7684\u6587\u672c\u63a7\u5236\uff1b\uff08\u4e2d\u56fe\uff09\u9075\u5faa A* \u8def\u5f84\uff0c\u5e76\u901a\u8fc7\u6df7\u5408\u6807\u5ea6\u63a7\u5236\u7c98\u9644\u6027\uff1b\uff08\u4e0b\u56fe\uff09\u6d4b\u8bd5\u65f6\u95f4\u5f15\u5bfc\u9f13\u52b1\u8fd0\u52a8\uff0c\u4ee5\u51c6\u786e\u5230\u8fbe\u76ee\u6807\u800c\u4e0d\u4e0e\u73af\u5883\u53d1\u751f\u78b0\u649e\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#discussion","title":"Discussion","text":"<p>\u6211\u4eec\u4ecb\u7ecd\u4e86\u4e00\u79cd\u7528\u4e8e\u6587\u672c\u63a7\u5236\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u751f\u6210\u7684\u65b0\u65b9\u6cd5 TeSMo\u3002\u901a\u8fc7\u9996\u5148\u5728\u5927\u89c4\u6a21\u8fd0\u52a8\u6355\u6349\u6570\u636e\u4e0a\u9884\u5148\u8bad\u7ec3\u573a\u666f\u65e0\u5173\u7684\u6587\u672c\u5230\u8fd0\u52a8\u6269\u6563\u6a21\u578b\uff0c\u7136\u540e\u4f7f\u7528\u573a\u666f\u611f\u77e5\u7ec4\u4ef6\u8fdb\u884c\u5fae\u8c03\uff0c\u6211\u4eec\u7684\u6587\u672c\u6761\u4ef6\u65b9\u6cd5\u80fd\u591f\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u751f\u6210\u903c\u771f\u3001\u591a\u6837\u7684\u4eba-\u7269\u4e92\u52a8\u3002\u4e3a\u4e86\u652f\u6301\u8fd9\u79cd\u8bad\u7ec3\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u65b0\u7684 Loco-3D-FRONT \u6570\u636e\u96c6\uff0c\u8be5\u6570\u636e\u96c6\u5305\u542b\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u903c\u771f\u5bfc\u822a\u52a8\u4f5c\uff0c\u5e76\u4f7f\u7528\u989d\u5916\u7684\u5bf9\u8c61\u548c\u6587\u672c\u6ce8\u91ca\u6269\u5c55\u4e86 SAMP \u6570\u636e\u96c6\u3002\u5b9e\u9a8c\u8bc1\u660e\uff0c\u6211\u4eec\u751f\u6210\u7684\u8fd0\u52a8\u4e0e\u6700\u5148\u8fdb\u7684\u6269\u6563\u6a21\u578b\u76f8\u5f53\uff0c\u540c\u65f6\u4e0e\u4e4b\u524d\u7684\u5de5\u4f5c\u76f8\u6bd4\uff0c\u63d0\u9ad8\u4e86\u4ea4\u4e92\u7684\u53ef\u4fe1\u5ea6\u548c\u771f\u5b9e\u6027\u3002</p> <p>\u5c40\u9650\u6027\u4e0e\u672a\u6765\u5de5\u4f5c\u3002\u867d\u7136\u6211\u4eec\u7684\u5bfc\u822a\u6a21\u578b\u80fd\u591f\u5b9e\u73b0\u7cbe\u786e\u7684\u76ee\u6807\u5230\u8fbe\u548c\u6587\u672c\u5230\u52a8\u4f5c\u7684\u53ef\u63a7\u6027\uff0c\u4f46\u4e24\u9636\u6bb5\u8fc7\u7a0b\u6709\u65f6\u4f1a\u5bfc\u81f4\u751f\u6210\u7684\u9aa8\u76c6\u8f68\u8ff9\u4e0e\u7ed8\u5236\u7684\u5168\u8eab\u59ff\u52bf\u8131\u8282\u3002\u63a2\u7d22\u80fd\u540c\u65f6\u751f\u6210\u9aa8\u76c6\u8f68\u8ff9\u548c\u59ff\u52bf\u7684\u65b0\u7684\u5355\u9636\u6bb5\u6a21\u578b\u5c06\u7b80\u5316\u8fd9\u4e00\u8fc7\u7a0b\u3002\u6b64\u5916\uff0c\u6211\u4eec\u76ee\u524d\u7684\u65b9\u6cd5\u662f\u5728\u4e8c\u7ef4\u5730\u9762\u5730\u56fe\u4e0a\u8fd0\u884c\uff0c\u8fd9\u9650\u5236\u4e86\u5904\u7406\u590d\u6742\u4ea4\u4e92\u7684\u80fd\u529b\uff0c\u4f8b\u5982\u4e00\u4e2a\u4eba\u8de8\u8fc7\u4e00\u4e2a\u5c0f\u51f3\u5b50\u3002</p> <p>\u6211\u4eec\u76ee\u524d\u7684\u65b9\u6cd5\u4ee5\u53ef\u63a7\u6027\u4e3a\u76ee\u6807\uff0c\u5141\u8bb8\u7528\u6237\u6307\u5b9a\u6587\u672c\u63d0\u793a\u6216\u76ee\u6807\u5bf9\u8c61\u548c\u4f4d\u7f6e\u3002\u4e0d\u8fc7\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u4e5f\u53ef\u80fd\u9002\u7528\u4e8e\u6700\u8fd1\u63d0\u51fa\u7684\u7ba1\u9053[41]\uff0c\u8be5\u7ba1\u9053\u91c7\u7528 LLM \u8ba1\u5212\u5668\u6765\u6307\u5b9a\u4e00\u7cfb\u5217\u52a8\u4f5c\u548c\u8054\u7cfb\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u7528\u4e8e\u6307\u5bfc\u6211\u4eec\u7684\u52a8\u4f5c\u751f\u6210\u3002\u5c55\u671b\u672a\u6765\uff0c\u6211\u4eec\u7684\u76ee\u6807\u8fd8\u5305\u62ec\u6269\u5927\u7cfb\u7edf\u5efa\u6a21\u7684\u52a8\u4f5c\u8303\u56f4\uff0c\u4ee5\u6db5\u76d6\u8eba\u4e0b\u548c\u89e6\u6478\u7b49\u6d3b\u52a8\u3002\u6b64\u5916\uff0c\u5b9e\u73b0\u4e0e\u52a8\u6001\u7269\u4f53\u7684\u4e92\u52a8\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u521b\u9020\u51fa\u66f4\u5177\u4e92\u52a8\u6027\u548c\u771f\u5b9e\u6027\u7684\u573a\u666f\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#appendix","title":"Appendix","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#ablation-study","title":"Ablation Study","text":"<p>\u8868 4\uff1a\u4f7f\u7528 Loco-3D-FRONT \u6d4b\u8bd5\u96c6\u5bf9\u5404\u79cd\u5168\u8eab\u586b\u5145\u65b9\u6cd5\u548c\u5bfc\u822a\u8fd0\u52a8\u751f\u6210\u7684\u4e0d\u540c\u8868\u793a\u65b9\u6cd5\u8fdb\u884c\u7684\u6d88\u878d\u7814\u7a76\u6bd4\u8f83\u3002\uff08\u5de6\uff09\u5bf9\u4e8e\u751f\u6210\u7684\u9aa8\u76c6\u8f68\u8ff9\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u5b9e\u73b0\u4e86\u6700\u4f73\u7684\u76ee\u6807\u5230\u8fbe\u51c6\u786e\u6027\u548c\u8f83\u4f4e\u7684\u78b0\u649e\u7387\u3002(\u53f3\u56fe\uff09\u5728\u5bf9\u5168\u8eab\u8fd0\u52a8\u8fdb\u884c\u5185\u7ed8\u5236\u540e\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u4fdd\u7559\u4e86\u4e0e\u6240\u63d0\u4f9b\u7684\u6587\u672c\u63d0\u793a\u4e00\u81f4\u7684\u591a\u79cd\u903c\u771f\u8fd0\u52a8\uff0c\u8fd9\u4e0e\u91c7\u7528\u53e6\u4e00\u79cd OminiControl \u5168\u8eab\u5185\u7ed8\u5236\u6280\u672f\u7684\u6a21\u578b\u975e\u5e38\u76f8\u4f3c\u3002\u4e0d\u8fc7\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u660e\u663e\u4f18\u4e8e\u91c7\u7528\u5168\u8eab\u8868\u793a\u7684\u6a21\u578b\u3002</p> <p></p> <p></p> <p>\u56fe 8\uff1a\u6211\u4eec\u4e3a\u8bc4\u4f30\u4eba-\u7269\u4e92\u52a8\u7684\u5408\u7406\u6027\u800c\u8fdb\u884c\u7684\u611f\u77e5\u7814\u7a76\u5e03\u5c40\u3002</p> <p>\u53e6\u4e00\u79cd\u5168\u8eab\u7ed8\u5236\u65b9\u6cd5\u3002\u867d\u7136\u6211\u4eec\u7684\u6839\u8f68\u8ff9\u751f\u6210\u65b9\u6cd5\u53ef\u4ee5\u4e0e\u591a\u79cd\u8fd0\u52a8\u5185\u7ed8\u5236\u6280\u672f\u76f8\u7ed3\u5408\uff0c\u4f46\u5728\u672c\u6587\u4e2d\u6211\u4eec\u4f7f\u7528\u7684\u662f PriorMDM [34]\u3002\u4f5c\u4e3a\u66ff\u4ee3\u65b9\u6848\uff0c\u6211\u4eec\u5728\u8868 4 \u4e2d\u8bc4\u4f30\u4e86\u4f7f\u7528 OminiControl [42] \u8fdb\u884c\u5185\u7ed8\u5236\u7684\u65b9\u6cd5\u30024. \u7136\u800c\uff0cOmniControl \u4f1a\u8986\u76d6\u6211\u4eec\u751f\u6210\u7684\u5bc6\u96c6\u9aa8\u76c6\u8f68\u8ff9\uff0c\u5e76\u4e0e\u65b0\u7684\u9aa8\u76c6\u8f68\u8ff9\u5171\u540c\u751f\u6210\u5168\u8eab\u8fd0\u52a8\u8f68\u8ff9\u3002\u5982\u8868 4 \u6240\u793a\uff0c\u8fd9\u4e25\u91cd\u964d\u4f4e\u4e86\u76ee\u6807\u5230\u8fbe\u80fd\u529b\uff08\u4ece 0.169 \u5398\u7c73\u964d\u81f3 0.459 \u5398\u7c73\uff09\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9009\u62e9\u4f7f\u7528 PriorMDM \u4f5c\u4e3a\u8eab\u4f53\u8fd0\u52a8\u5185\u7ed8\u5236\u65b9\u6cd5\u3002\u5b83\u80fd\u5f88\u597d\u5730\u4e0e\u6211\u4eec\u751f\u6210\u7684\u8f68\u8ff9\u4fdd\u6301\u4e00\u81f4\uff0c\u4ece\u800c\u751f\u6210\u53ef\u4fe1\u7684\u8fd0\u52a8\u8f68\u8ff9\uff0c\u540c\u65f6\u4fdd\u6301\u4e0e\u76ee\u6807\u4f4d\u7f6e\u7684\u4e00\u81f4\u6027\u3002</p> <p>\u5355\u9636\u6bb5\u5bfc\u822a\u8fd0\u52a8\u751f\u6210\u3002\u4e3a\u4e86\u8bc4\u4f30\u4e24\u9636\u6bb5\u5bfc\u822a\u6a21\u578b\u8bbe\u8ba1\u7684\u6709\u6548\u6027\uff0c\u6211\u4eec\u5c06\u5176\u4e0e\u5355\u9636\u6bb5\u5168\u8eab\u8fd0\u52a8\u751f\u6210\u6d88\u878d\u6a21\u578b\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u8be5\u6a21\u578b\u91c7\u7528\u76f8\u540c\u7684\u8f93\u5165\u6570\u636e\uff0c\u4f46\u76f4\u63a5\u751f\u6210\u5168\u8eab\u8fd0\u52a8\u3002\u7136\u800c\uff0c\u5982\u8868 4 \u6240\u793a\uff0c\u8fd9\u79cd\u65b9\u6cd5\u9650\u5236\u4e86\u76ee\u6807\u7684\u5b9e\u73b0\u3002\u5982\u8868 4 \u6240\u793a\uff0c\u8fd9\u79cd\u65b9\u6cd5\u9650\u5236\u4e86\u76ee\u6807\u8fbe\u6210\u80fd\u529b\uff0c\u65e0\u6cd5\u751f\u6210\u4e0e\u8f93\u5165\u6587\u672c\u4e00\u81f4\u7684\u8fd0\u52a8\u98ce\u683c\u3002\u5c40\u90e8\u59ff\u52bf\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u4e0e\u6574\u4f53\u9aa8\u76c6\u8f68\u8ff9\u76f8\u5206\u79bb\uff0c\u5141\u8bb8\u8f68\u8ff9\u53d8\u5316\uff0c\u540c\u65f6\u4fdd\u6301\u76f8\u540c\u7684\u8fd0\u52a8\u98ce\u683c\u3002\u4f8b\u5982\uff0c\u4e2a\u4f53\u53ef\u4ee5\u6cbf\u7740\u4e0d\u540c\u7684\u8def\u5f84\u884c\u8d70\uff0c\u540c\u65f6\u4fdd\u6301\u8fd0\u52a8\u98ce\u683c\u7684\u4e00\u81f4\u6027\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#details-on-user-study-for-interaction-motions","title":"Details on User Study for Interaction Motions","text":"<p>\u4e3a\u4e86\u8bc4\u4f30\u4eba-\u7269\u4e92\u52a8\u7684\u53ef\u4fe1\u5ea6\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u4e00\u9879\u7528\u6237\u7814\u7a76\uff0c\u4ee5\u6bd4\u8f83\u6211\u4eec\u7684\u65b9\u6cd5\u548c DIMOS [53]\u3002\u6211\u4eec\u4f7f\u7528 Amazon Mechanical Turk\uff08AMT\uff09[2] \u5f81\u96c6\u4e86 30 \u4e2a\u4eba\u7684\u8bc4\u4f30\u3002\u6211\u4eec\u5411\u8bc4\u6d4b\u8005\u5c55\u793a\u4e86\u4e24\u6bb5\u5e76\u6392\u7684\u89c6\u9891\uff0c\u89c6\u9891\u63cf\u8ff0\u4e86\u751f\u6210\u7684\u4ea4\u4e92\uff0c\u5e76\u8981\u6c42\u8bc4\u6d4b\u8005\u5224\u65ad\u54ea\u6bb5\u89c6\u9891\u770b\u8d77\u6765\u66f4\u903c\u771f\uff0c\u5c24\u5176\u8981\u5173\u6ce8\u4eba\u7269\u7684\u81c0\u90e8\u548c\u80cc\u90e8\u4e0e\u6905\u5b50\u6216\u957f\u51f3\u7684\u63a5\u89e6\uff0c\u4ee5\u53ca\u8eab\u4f53\u4e0e\u7269\u4f53\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u6700\u5c0f\u7a0b\u5ea6\u7684\u76f8\u4e92\u6e17\u900f\u3002\u6211\u4eec\u5c55\u793a\u4e86 70 \u4e2a\u6d4b\u8bd5\u89c6\u9891\uff0c\u5176\u4e2d\u6211\u4eec\u751f\u6210\u7684\u89c6\u9891\u548c DIMO \u7684\u7ed3\u679c\u5728\u6c34\u5e73\u65b9\u5411\u4e0a\u968f\u673a\u6392\u5217\u3002\u4e3a\u4e86\u8fc7\u6ee4\u6389\u4e0d\u4f73\u7684\u56de\u7b54\uff0c\u6211\u4eec\u91cd\u590d\u4e86 5 \u4e2a\u6d4b\u8bd5\u793a\u4f8b\uff0c\u5728\u8fd9 5 \u4e2a\u793a\u4f8b\u4e2d\uff0c\u4e24\u4e2a\u89c6\u9891\u7ed3\u679c\u4e4b\u95f4\u5b58\u5728\u660e\u663e\u7684\u504f\u597d\uff0c\u4f5c\u4e3a\u6355\u6349\u8bd5\u9a8c\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u4ece 70 \u540d\u8bc4\u5206\u8005\u4e2d\u83b7\u5f97\u4e86 65 \u4e2a\u6709\u7528\u7684\u56de\u7b54\u3002\u5b8c\u6574\u7684\u8c03\u67e5\u9875\u9762\u5982\u56fe 8 \u6240\u793a\u3002\u7528\u6237\u7814\u7a76\u663e\u793a\uff0c\u4e0e DIMOS \u751f\u6210\u7684\u7ed3\u679c\u76f8\u6bd4\uff0c\u7528\u6237\u660e\u663e\u66f4\u559c\u6b22\u6211\u4eec\u7684\u65b9\u6cd5\u751f\u6210\u7684\u8fd0\u52a8\u7ed3\u679c\uff08\u9996\u9009 71.9%\uff09\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Interaction%20Motions%20in%20Scenes%20with%20Text%20Control/#details-on-collision-guidance-used-in-interaction-motion-generation","title":"Details on Collision Guidance Used in Interaction Motion Generation","text":"<p>\u5728\u6d4b\u8bd5\u65f6\uff0c\u78b0\u649e\u76ee\u6807\u7528\u4e8e\u963b\u6b62\u4eba\u7c7b\u4e0e\u7269\u4f53\u4e4b\u95f4\u7684\u7a7f\u900f\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u7684\u4ea4\u4e92\u8fd0\u52a8\u751f\u6210\u6a21\u578b\u53ef\u4ee5\u8f93\u51fa\u4e09\u7ef4\u5173\u8282\u4f4d\u7f6e\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06 SMPL \u7f51\u683c\u8868\u9762\u7684\u968f\u673a\u91c7\u6837\u9876\u70b9\u4e0e A \u59ff\u6001\u4e2d\u7684\u4e09\u7ef4\u9aa8\u67b6\u8fde\u63a5\u8d77\u6765\uff0c\u4ece\u800c\u83b7\u5f97\u6bcf\u4e2a\u65b0\u59ff\u52bf\u7684\u59ff\u52bf\u91c7\u6837\u9876\u70b9\u3002\u5176\u5b9a\u4e49\u4e3a Jc = SDF\uff08\u02c6x0\uff0cSO\uff09\uff0c\u5176\u4e2d SDF \u8ba1\u7b97\u7269\u4f53 O \u7684 SDF \u4f53\u79ef\uff0c\u7136\u540e\u67e5\u8be2\u8eab\u4f53\u9876\u70b9\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\u957f\u7684\u7b26\u53f7\u8ddd\u79bb\u503c\u3002\u6b63\u8ddd\u79bb\u8868\u793a\u4ea4\u4e92\u5bf9\u8c61\u5185\u90e8\u7684\u4f53\u9876\u70b9\uff0c\u53d6\u5e73\u5747\u503c\u5f97\u5230\u6700\u7ec8\u635f\u5931\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/","title":"Generating Human Motion in 3D Scenes from Text Descriptions","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#abstract","title":"Abstract","text":"<p>\u6839\u636e\u6587\u5b57\u63cf\u8ff0\u751f\u6210\u4eba\u4f53\u52a8\u4f5c\u7684\u7814\u7a76\u56e0\u5176\u5e94\u7528\u8303\u56f4\u5e7f\u6cdb\u800c\u65e5\u76ca\u53d7\u5230\u5173\u6ce8\u3002\u7136\u800c\uff0c\u53ea\u6709\u5c11\u6570\u4f5c\u54c1\u8003\u8651\u4e86\u4eba\u4e0e\u573a\u666f\u7684\u4ea4\u4e92\u4ee5\u53ca\u6587\u672c\u6761\u4ef6\uff0c\u800c\u8fd9\u5bf9\u4e8e\u89c6\u89c9\u548c\u7269\u7406\u903c\u771f\u5ea6\u81f3\u5173\u91cd\u8981\u3002\u672c\u6587\u4e3b\u8981\u7814\u7a76\u5728\u4e09\u7ef4\u5ba4\u5185\u573a\u666f\u4e2d\uff0c\u6839\u636e\u4eba\u4e0e\u573a\u666f\u4e92\u52a8\u7684\u6587\u5b57\u63cf\u8ff0\u751f\u6210\u4eba\u4f53\u52a8\u4f5c\u7684\u4efb\u52a1\u3002\u7531\u4e8e\u6587\u672c\u3001\u573a\u666f\u548c\u8fd0\u52a8\u7684\u591a\u6a21\u6001\u6027\u8d28\u4ee5\u53ca\u7a7a\u95f4\u63a8\u7406\u7684\u9700\u8981\uff0c\u8fd9\u9879\u4efb\u52a1\u9762\u4e34\u7740\u6311\u6218\u3002\u4e3a\u4e86\u5e94\u5bf9\u8fd9\u4e9b\u6311\u6218\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u65b9\u6cd5\uff0c\u5c06\u590d\u6742\u7684\u95ee\u9898\u5206\u89e3\u4e3a\u4e24\u4e2a\u66f4\u6613\u5904\u7406\u7684\u5b50\u95ee\u9898\uff1a(1) \u76ee\u6807\u5bf9\u8c61\u7684\u8bed\u8a00\u57fa\u7840\u548c (2) \u4ee5\u5bf9\u8c61\u4e3a\u4e2d\u5fc3\u7684\u8fd0\u52a8\u751f\u6210\u3002\u5728\u76ee\u6807\u5bf9\u8c61\u7684\u8bed\u8a00\u5b9a\u4f4d\u65b9\u9762\uff0c\u6211\u4eec\u5229\u7528\u5927\u578b\u8bed\u8a00\u6a21\u578b\u7684\u5f3a\u5927\u529f\u80fd\u6765\u8bc6\u522b\u573a\u666f\u4e2d\u7684\u76ee\u6807\u5bf9\u8c61\u3002\u5728\u8fd0\u52a8\u751f\u6210\u65b9\u9762\uff0c\u6211\u4eec\u4e3a\u751f\u6210\u6a21\u578b\u8bbe\u8ba1\u4e86\u4e00\u79cd\u4ee5\u76ee\u6807\u5bf9\u8c61\u4e3a\u4e2d\u5fc3\u7684\u573a\u666f\u8868\u793a\u6cd5\uff0c\u4f7f\u751f\u6210\u6a21\u578b\u805a\u7126\u4e8e\u76ee\u6807\u5bf9\u8c61\uff0c\u4ece\u800c\u964d\u4f4e\u4e86\u573a\u666f\u7684\u590d\u6742\u6027\uff0c\u4fc3\u8fdb\u4e86\u4eba\u7c7b\u8fd0\u52a8\u4e0e\u5bf9\u8c61\u4e4b\u95f4\u5173\u7cfb\u7684\u5efa\u6a21\u3002\u5b9e\u9a8c\u8bc1\u660e\uff0c\u4e0e\u57fa\u7ebf\u65b9\u6cd5\u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u5177\u6709\u66f4\u597d\u7684\u8fd0\u52a8\u8d28\u91cf\uff0c\u5e76\u9a8c\u8bc1\u4e86\u6211\u4eec\u7684\u8bbe\u8ba1\u9009\u62e9\u3002\u6211\u4eec\u7684\u4ee3\u7801\u5373\u5c06\u53d1\u5e03\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#1-introduction","title":"1. Introduction","text":"<p>\u4eba\u4f53\u52a8\u4f5c\u751f\u6210\u662f\u4e00\u4e2a\u957f\u671f\u5b58\u5728\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u5e94\u7528\u5e7f\u6cdb\uff0c\u5982\u6e38\u620f\u5f00\u53d1\u3001\u865a\u62df\u73b0\u5b9e\u548c\u7535\u5f71\u5236\u4f5c\u7b49\u3002\u6700\u8fd1\uff0c\u8fd9\u4e00\u9886\u57df\u7684\u7814\u7a76\u8303\u5f0f\u53d1\u751f\u4e86\u8f6c\u53d8\uff0c\u4ece\u6839\u636e\u4e30\u5bcc\u7684\u7528\u6237\u8f93\u5165\u8fdb\u884c\u865a\u62df\u5316\u8eab\u4eff\u771f[29]\uff0c\u8f6c\u53d8\u4e3a\u6839\u636e\u9ad8\u7ea7\u8bed\u8a00\u63d0\u793a\uff08\u5982\u6709\u5173\u6240\u9700\u52a8\u4f5c\u7684\u6587\u5b57\u8bf4\u660e\uff09\u8fdb\u884c\u57fa\u4e8e\u5b66\u4e60\u7684\u52a8\u4f5c\u751f\u6210[2, 3, 15, 18, 19, 38, 55, 73, 74]\u3002\u7136\u800c\uff0c\u4e4b\u524d\u5927\u591a\u6570\u5173\u4e8e\u6587\u672c\u9a71\u52a8\u8fd0\u52a8\u5408\u6210\u7684\u7814\u7a76\u90fd\u6ca1\u6709\u8003\u8651\u4eba\u4e0e\u573a\u666f\u7684\u4ea4\u4e92 [38, 55, 73, 74]\uff0c\u800c\u573a\u666f\u4e0a\u4e0b\u6587\u548c\u73af\u5883\u7684\u7269\u7406\u7ea6\u675f\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u51b3\u5b9a\u4e86\u751f\u6210\u7684\u4eba\u4f53\u8fd0\u52a8\u7684\u4fdd\u771f\u5ea6\u3002</p> <p>\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u7684\u91cd\u70b9\u662f\u6839\u636e\u4e09\u7ef4\u5ba4\u5185\u573a\u666f\u4e2d\u7684\u6587\u5b57\u63cf\u8ff0\u751f\u6210\u52a8\u4f5c\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u7ed9\u5b9a\u76ee\u6807\u573a\u666f\u7684\u4e09\u7ef4\u626b\u63cf\u56fe\u50cf\u548c\u4e0e\u573a\u666f\u4e92\u52a8\u7684\u4eba\u4f53\u52a8\u4f5c\u7684\u6587\u5b57\u63cf\u8ff0\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u751f\u6210\u4e0e\u6587\u5b57\u63cf\u8ff0\u4e00\u81f4\u7684\u81ea\u7136\u4eba\u4f53\u52a8\u4f5c\u3002</p> <p>\u7531\u4e8e\u6587\u672c\u3001\u573a\u666f\u548c\u4eba\u7c7b\u79fb\u52a8\u7684\u591a\u6a21\u6001\u6027\u8d28\uff0c\u8fd9\u4e00\u95ee\u9898\u9762\u4e34\u7740\u8bf8\u591a\u6311\u6218\u3002\u4e0e\u4e4b\u524d\u7684\u65b9\u6cd5[2, 3, 55, 73, 74]\u4ec5\u4ec5\u4f9d\u9760\u6587\u5b57\u63cf\u8ff0\u4eba\u7c7b\u5982\u4f55\u79fb\u52a8\u4e0d\u540c\uff0c\u6211\u4eec\u7684\u4efb\u52a1\u8fd8\u5305\u62ec\u989d\u5916\u63cf\u8ff0\u7ed9\u5b9a\u573a\u666f\u4e2d\u7a7a\u95f4\u7ec6\u8282\u7684\u6587\u5b57\uff08\u4f8b\u5982\uff0c\u5750\u5728\u684c\u5b50\u9644\u8fd1\u7684\u6276\u624b\u6905\u4e0a\uff09\u3002\u56e0\u6b64\uff0c\u8fd9\u9879\u4efb\u52a1\u9700\u8981\u7a7a\u95f4\u63a8\u7406\u80fd\u529b[1]\uff0c\u6a21\u578b\u5e94\u5efa\u7acb\u6587\u672c-\u7269\u4f53\u6620\u5c04\uff0c\u4ee5\u4fbf\u5728\u4e09\u7ef4\u573a\u666f\u4e2d\u627e\u5230\u4e0e\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u4e00\u81f4\u7684\u7279\u5b9a\u7269\u4f53\uff08\u4e09\u7ef4\u89c6\u89c9\u57fa\u7840\uff09\u3002\u6b64\u5916\uff0c\u751f\u6210\u7684\u52a8\u4f5c\u4e5f\u5e94\u4e0e\u573a\u666f\u4e0a\u4e0b\u6587\u4fdd\u6301\u4e00\u81f4\u3002</p> <p>\u4f5c\u4e3a\u4e00\u9879\u5f00\u521b\u6027\u7684\u5de5\u4f5c\uff0cHUMANISE[82]\u5efa\u7acb\u4e86\u4e00\u4e2a\u6761\u4ef6\u53d8\u5f02\u81ea\u52a8\u7f16\u7801\u5668\uff08cVAE\uff09[40, 68]\uff0c\u5177\u6709\u573a\u666f\u548c\u6587\u672c\u7684\u4e0d\u540c\u901f\u7387\u7f16\u7801\u5668\uff0c\u7528\u4e8e\u591a\u6a21\u6001\u7406\u89e3\u3002\u4e3a\u4e86\u63d0\u9ad8\u7a7a\u95f4\u63a8\u7406\u80fd\u529b\uff0c\u4ed6\u4eec\u5f15\u5165\u4e86\u76f4\u63a5\u56de\u5f52\u7269\u4f53\u4e2d\u5fc3\u7684\u8f85\u52a9\u4efb\u52a1\uff0c\u4ee5\u9690\u542b\u7684\u65b9\u5f0f\u5b66\u4e60\u4e09\u7ef4\u89c6\u89c9\u57fa\u7840\u3002\u4f46\u4ed6\u4eec\u5e76\u6ca1\u6709\u660e\u786e\u5229\u7528\u9884\u6d4b\u7684\u4e2d\u5fc3\uff0c\u56e0\u6b64\u65e0\u6cd5\u5b8c\u5168\u7eb3\u5165\u89c6\u89c9\u63a5\u5730\u7684\u8bf1\u5bfc\u504f\u5dee\u3002\u6b64\u5916\uff0cHUMANISE[82] \u4f7f\u7528\u5355\u70b9\u53d8\u6362\u5668[98] \u5bf9\u6574\u4e2a\u573a\u666f\u8fdb\u884c\u7f16\u7801\u3002\u7528\u8fd9\u6837\u7684\u6a21\u578b\u76f4\u63a5\u751f\u6210\u8fd0\u52a8\u5177\u6709\u6311\u6218\u6027\uff0c\u56e0\u4e3a\u4e09\u7ef4\u70b9\u4e91\u672c\u8eab\u5177\u6709\u566a\u58f0\u548c\u590d\u6742\u6027[47, 87]\uff0c\u5bfc\u81f4\u65e0\u6cd5\u5b9a\u4f4d\u76ee\u6807\u7269\u4f53\u3002\u6b63\u5982\u6587\u732e[50]\u6240\u8ff0\uff0c\u5e76\u975e\u573a\u666f\u4e2d\u7684\u6bcf\u4e2a\u70b9\u90fd\u4e0e\u6700\u7ec8\u7684\u4eba\u4f53\u8fd0\u52a8\u76f8\u5173\u3002\u56e0\u6b64\uff0c\u6709\u5fc5\u8981\u5f00\u53d1\u4e00\u79cd\u66f4\u6709\u9488\u5bf9\u6027\u7684\u65b9\u6cd5\uff0c\u91cd\u70b9\u5173\u6ce8\u573a\u666f\u4e2d\u7684\u76f8\u5173\u90e8\u5206\uff0c\u4ee5\u63d0\u9ad8\u8fd0\u52a8\u751f\u6210\u7684\u8d28\u91cf\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u5229\u7528\u5927\u578b\u8bed\u8a00\u6a21\u578b (LLM) [6, 41, 51] \u7684\u5f3a\u5927\u529f\u80fd\u7684\u65b0\u65b9\u6cd5\u3002\u6211\u4eec\u7684\u4e3b\u8981\u60f3\u6cd5\u662f\u5c06\u6839\u636e\u6587\u672c\u7ebf\u7d22\u751f\u6210\u573a\u666f\u4e2d\u7684\u8fd0\u52a8\u8fd9\u4e00\u5177\u6709\u6311\u6218\u6027\u7684\u4efb\u52a1\u5206\u89e3\u6210\u4e24\u4e2a\u8f83\u5c0f\u7684\u95ee\u9898\uff1a(1) \u4e09\u7ef4\u573a\u666f\u4e2d\u7269\u4f53\u7684\u8bed\u8a00\u57fa\u7840\uff1b(2) \u4ee5\u76ee\u6807\u7269\u4f53\u4e3a\u4e2d\u5fc3\u751f\u6210\u8fd0\u52a8\u3002\u5bf9\u4e8e\u8bed\u8a00\u57fa\u7840\u95ee\u9898\uff0c\u6211\u4eec\u5efa\u8bae\u5c06\u5176\u8868\u8ff0\u4e3a\u95ee\u9898\u89e3\u7b54\uff0c\u5e76\u5229\u7528 LLM \u7684\u5927\u91cf\u5148\u9a8c\u77e5\u8bc6\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5b66\u4e60\u6587\u672c-\u5bf9\u8c61\u6620\u5c04\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u9996\u5148\u6784\u5efa 3D \u573a\u666f\u7684\u573a\u666f\u56fe\uff0c\u5e76\u751f\u6210\u5176\u6587\u672c\u63cf\u8ff0\u3002\u7136\u540e\uff0c\u6211\u4eec\u5229\u7528 ChatGPT [51] \u6765\u5206\u6790\u573a\u666f\u63cf\u8ff0\u4e0e\u8f93\u5165\u6307\u4ee4\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5e76\u7528\u4e09\u7ef4\u53ef\u89c6\u5316\u63a5\u5730\u56de\u7b54\u3002\u5b9e\u9a8c\u8868\u660e\uff0c\u8fd9\u79cd\u7b56\u7565\u80fd\u6709\u6548\u63d0\u9ad8\u51c6\u786e\u7387\u3002</p> <p>\u5728\u8fd0\u52a8\u751f\u6210\u65b9\u9762\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u79cd\u4ee5\u7269\u4f53\u4e3a\u4e2d\u5fc3\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u4ee5\u5e2e\u52a9\u751f\u6210\u6a21\u578b\u4e13\u6ce8\u4e8e\u76ee\u6807\u7269\u4f53\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5c06\u76ee\u6807\u7269\u4f53\u5468\u56f4\u7684\u70b9\u4e91\u8f6c\u6362\u4e3a\u4f53\u79ef\u4f20\u611f\u5668[69]\uff0c\u4ee5\u5efa\u7acb\u4ee5\u7269\u4f53\u4e3a\u4e2d\u5fc3\u7684\u8868\u5f81\u3002\u7136\u540e\uff0c\u6211\u4eec\u5229\u7528\u6269\u6563\u6a21\u578b[56, 74]\uff0c\u5728\u4ee5\u7269\u4f53\u4e3a\u4e2d\u5fc3\u7684\u8868\u5f81\u548c\u6587\u672c\u4e2d\u5408\u6210\u4eba\u4f53\u8fd0\u52a8\u3002\u539f\u59cb\u573a\u666f\u70b9\u4e91\u53ef\u80fd\u6709\u5404\u79cd\u5c3a\u5ea6\uff0c\u4e0e\u4e4b\u76f8\u6bd4\uff0c\u4ee5\u7269\u4f53\u4e3a\u4e2d\u5fc3\u7684\u8868\u5f81\u66f4\u52a0\u7d27\u51d1\uff0c\u5bf9\u5c3a\u5ea6\u4e5f\u66f4\u52a0\u7a33\u5065\uff0c\u56e0\u4e3a\u540c\u4e00\u7c7b\u522b\u7684\u7269\u4f53\u5927\u5c0f\u76f8\u4f3c\u3002\u56e0\u6b64\uff0c\u8fd9\u79cd\u8868\u793a\u65b9\u6cd5\u964d\u4f4e\u4e86\u573a\u666f\u7684\u590d\u6742\u6027\uff0c\u5e76\u6709\u52a9\u4e8e\u8fd0\u52a8\u4e0e\u7269\u4f53\u4e4b\u95f4\u5173\u7cfb\u7684\u5efa\u6a21\u3002</p> <p>\u6211\u4eec\u5728 HUMANISE \u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u4e86\u5168\u9762\u7684\u6bd4\u8f83\u548c\u6d88\u878d\u5b9e\u9a8c\u3002\u7ed3\u679c\u8868\u660e\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u4f18\u4e8e\u57fa\u7ebf\u65b9\u6cd5\uff0c\u4f53\u73b0\u5728\u66f4\u51c6\u786e\u7684\u7269\u4f53\u5b9a\u4f4d\u7ed3\u679c\u548c\u66f4\u7b26\u5408\u6587\u672c\u63cf\u8ff0\u548c\u573a\u666f\u7684\u8fd0\u52a8\u3002\u6211\u4eec\u8fdb\u4e00\u6b65\u8bc1\u660e\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u53ef\u4ee5\u63a8\u5e7f\u5230 PROX \u6570\u636e\u96c6[22]\uff0c\u65e0\u9700\u4efb\u4f55\u5fae\u8c03\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#2-related-work","title":"2. Related work","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#21-motion-synthesis","title":"2.1. Motion synthesis","text":"<p>\u7528\u4e8e\u8fd0\u52a8\u5408\u6210\u7684\u6df1\u5ea6\u5b66\u4e60\u3002\u8fd1\u5e74\u6765\uff0c\u7528\u4e8e\u8fd0\u52a8\u5408\u6210\u7684\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u53d7\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u5173\u6ce8[14, 21, 25, 28, 29, 49, 70, 90]\u3002\u4e3a\u5b8c\u6210\u8fd9\u9879\u4efb\u52a1\uff0c\u4eba\u4eec\u91c7\u7528\u4e86\u591a\u79cd\u6280\u672f\uff0c\u5305\u62ec MLP [29]\u3001\u4e13\u5bb6\u6df7\u5408\uff08MoE\uff09[71, 90]\u548c\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff08RNN\uff09[21]\u3002\u4e3a\u4e86\u751f\u6210\u591a\u6837\u5316\u7684\u8fd0\u52a8\u7ed3\u679c\uff0c\u4e4b\u524d\u7684\u5de5\u4f5c\u63a2\u7d22\u4e86 cVAE [45, 95]\u3001GAN [43, 60]\u3001\u5f52\u4e00\u5316\u6d41 [26] \u548c\u6269\u6563\u6a21\u578b [74]\u3002</p> <p>\u6587\u672c\u9a71\u52a8\u7684\u8fd0\u52a8\u751f\u6210\u3002\u6700\u8fd1\uff0c\u4eba\u4eec\u5bf9\u6587\u672c\u9a71\u52a8\u7684\u8fd0\u52a8\u751f\u6210\u8d8a\u6765\u8d8a\u611f\u5174\u8da3[2, 55, 73]\u3002\u8fd9\u9879\u4efb\u52a1\u4ee5\u81ea\u7136\u8bed\u8a00\u4e3a\u8f93\u5165\uff0c\u5408\u6210\u7b26\u5408\u6307\u4ee4\u7684\u4eba\u4f53\u52a8\u4f5c\u3002KIT-ML [57] \u662f\u8fd9\u9879\u4efb\u52a1\u7684\u7b2c\u4e00\u4e2a\u57fa\u51c6\u3002\u4e00\u4e9b\u7814\u7a76\u8fd8\u8fdb\u4e00\u6b65\u4e3a AMASS \u6570\u636e\u96c6 [48] \u6dfb\u52a0\u4e86\u52a8\u4f5c\u6807\u7b7e [58] \u548c\u6587\u672c [18]\u3002\u4e3a\u4e86\u5b8c\u6210\u8fd9\u9879\u4efb\u52a1\uff0c[2, 15, 73] \u63d0\u51fa\u5b66\u4e60\u6587\u672c\u548c\u52a8\u4f5c\u7684\u5171\u4eab\u6f5c\u7a7a\u95f4\u3002[55] \u91c7\u7528\u53d8\u6362\u5668 VAE [54] \u751f\u6210\u4e0d\u540c\u7684\u7ed3\u679c\u3002[19\uff0c92] \u901a\u8fc7 VQ-VAE \u7684\u79bb\u6563\u518d\u5448\u73b0[64\uff0c77]\u5b9e\u73b0\u4e86\u66f4\u597d\u7684\u6027\u80fd\u3002[12, 38, 74, 93] \u6210\u529f\u5730\u5c06\u6269\u6563\u6a21\u578b\u5e94\u7528\u4e8e\u8fd9\u4e00\u65b9\u5411\u3002[5, 42] \u8fdb\u4e00\u6b65\u63a2\u7d22\u4e86\u6f5c\u5728\u6269\u6563\u6a21\u578b[66]\u3002\u5728 [74] \u7684\u57fa\u7840\u4e0a\uff0c[37, 84] \u5f15\u5165\u4e86\u7a00\u758f\u7a7a\u95f4\u63a7\u5236\u3002[3, 59, 67] \u8fd8\u7814\u7a76\u4e86\u957f\u5e8f\u5217\u8fd0\u52a8\u751f\u6210\u3002\u5176\u4ed6\u73b0\u6709\u7814\u7a76[4, 36, 81, 97]\u5c06\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09[6, 41, 52, 76]\u5e94\u7528\u4e8e\u8fd0\u52a8\u9886\u57df\u3002[4]\u901a\u8fc7\u5c06\u4e0d\u540c\u7684\u8eab\u4f53\u90e8\u4f4d\u4e0e LLM \u76f8\u7ed3\u5408\u6765\u6784\u5efa\u5408\u6210\u8fd0\u52a8\u3002[35\uff0c97] \u5c06\u52a8\u4f5c\u89c6\u4e3a\u4e00\u79cd\u8bed\u8a00\uff0c\u5e76\u5229\u7528\u52a8\u4f5c\u6807\u8bb0[19\uff0c92] \u5bf9 LLM \u8fdb\u884c\u5fae\u8c03[62]\u3002</p> <p>\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u751f\u6210 \u8fd9\u4e2a\u65b9\u5411\u662f\u751f\u6210\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u4eba\u4f53\u8fd0\u52a8[69, 79]\u3002\u4e3a\u4e86\u5408\u6210\u884c\u8d70\u548c\u5750\u59ff\u52a8\u4f5c\uff0c[69] \u6784\u5efa\u4e86\u4f53\u79ef\u4f20\u611f\u5668\u6765\u7f16\u7801\u7269\u4f53\u4fe1\u606f\u548c\u4eba\u7269\u5468\u56f4\u73af\u5883\u3002\u6587\u732e[23]\u5bf9\u5176\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u4ee5\u5408\u6210\u5177\u6709\u4e0d\u540c\u5750\u59ff\u548c\u8eba\u59ff\u7684\u52a8\u4f5c\u3002\u6b64\u5916\uff0c[94] \u8fd8\u63d0\u51fa\u901a\u8fc7\u624b\u90e8\u63a5\u89e6\u6765\u63a7\u5236\u5750\u59ff\u3002\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c[56] \u91c7\u7528\u4e86\u5206\u5c42\u6846\u67b6\uff0c\u6309\u987a\u5e8f\u751f\u6210\u76ee\u6807\u59ff\u52bf\u3001\u91cc\u7a0b\u7891\u548c\u52a8\u4f5c\u3002[72, 83] \u7528\u5c0f\u7269\u4f53\u5408\u6210\u5168\u8eab\uff08\u8eab\u4f53\u548c\u624b\u90e8\u624b\u6307\uff09\u6293\u53d6\u52a8\u4f5c\u3002[16, 44, 70, 85]\u63a2\u7d22\u4e86\u4e0e\u52a8\u6001\u7269\u4f53\u7684\u4ea4\u4e92\uff0c\u5305\u62ec\u64cd\u7eb5[16, 44]\u548c\u643a\u5e26[85]\u3002[8, 24]\u63a2\u8ba8\u4e86\u4e0e\u7269\u7406\u6a21\u62df\u89d2\u8272\u7684\u4eba-\u7269\u4e92\u52a8\u3002\u8fd9\u4e9b\u7814\u7a76\u4e3b\u8981\u96c6\u4e2d\u5728\u4e00\u4e24\u4e2a\u7269\u4f53\u4e0a\uff0c\u800c\u5176\u4ed6\u7814\u7a76[79, 80]\u5219\u8003\u8651\u4e86\u66f4\u590d\u6742\u7684\u573a\u666f\u8f93\u5165\uff08\u5982\u5305\u62ec\u5899\u58c1\u548c\u5730\u677f\u5728\u5185\u7684\u573a\u666f\u70b9\u4e91\uff09\u3002[79\u300180] \u91c7\u7528\u5206\u5c42\u6846\u67b6\uff0c\u5206\u522b\u751f\u6210\u8f68\u8ff9\u548c\u8fd0\u52a8\u3002[102]\u5f15\u5165\u51dd\u89c6\u6765\u5e2e\u52a9\u751f\u6210\u3002[33]\u8fdb\u4e00\u6b65\u91c7\u7528\u4e86\u6269\u6563\u6a21\u578b\uff0c[50]\u901a\u8fc7\u5c06\u957f\u5e8f\u5217\u5206\u5272\u6210\u591a\u4e2a\u77ed\u5e8f\u5217\u6765\u5408\u6210\u573a\u666f\u4e2d\u7684\u957f\u671f\u8fd0\u52a8\u3002[100] \u8bbe\u8ba1\u4e86\u4e00\u4e2a\u518d\u5f3a\u5316\u5b66\u4e60\u7ba1\u9053\uff0c\u4ee5\u5b9e\u73b0\u5728\u590d\u6742\u573a\u666f\u4e2d\u7684\u5bfc\u822a\u548c\u4ea4\u4e92\u5f0f\u63a7\u5236\u3002</p> <p>\u6587\u672c\u9a71\u52a8\u7684\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u751f\u6210 \u53ea\u6709\u5c11\u6570\u4f5c\u54c1\u540c\u65f6\u8003\u8651\u4e86\u6587\u672c\u548c\u573a\u666f[37, 82, 100]\u3002\u867d\u7136[100]\u901a\u8fc7[99]\u5b9e\u73b0\u4e86\u5bf9\u5750\u59ff\u7684\u6587\u672c\u63a7\u5236\uff0c\u4f46\u5728\u6211\u4eec\u7684\u8bbe\u7f6e\u4e2d\uff0c\u6587\u672c\u63cf\u8ff0\u7528\u4e8e\u5728\u6742\u4e71\u7684\u573a\u666f\u4e2d\u9009\u62e9\u5bf9\u8c61\u3002[37]\u53ef\u4ee5\u5728\u884c\u8d70\u8fc7\u7a0b\u4e2d\u907f\u5f00\u969c\u788d\u7269\uff0c\u800c\u6211\u4eec\u7684\u4efb\u52a1\u9700\u8981\u5904\u7406\u5404\u79cd\u52a8\u4f5c\u3002\u4e0e\u6211\u4eec\u6700\u76f8\u5173\u7684\u5de5\u4f5c\u662f HUMANISE [82]\uff0c\u5b83\u91c7\u7528\u4e86\u4e00\u79cd\u8f6c\u6362\u5668 VAE \u67b6\u6784\uff0c\u5e26\u6709\u6587\u672c\u548c\u573a\u666f\u53cc\u6d41\u6761\u4ef6\u6a21\u5757\u3002\u4e3a\u4e86\u7cbe\u786e\u5b9a\u4f4d\u76ee\u6807\u5bf9\u8c61\uff0c\u4ed6\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e9b\u8f85\u52a9\u4efb\u52a1\uff0c\u5982\u5bf9\u5bf9\u8c61\u4e2d\u5fc3\u8fdb\u884c\u53cc\u5411\u56de\u5f52\u3002\u4e0e HUMANISE \u4e0d\u540c\u7684\u662f\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u4e24\u9636\u6bb5\u7ba1\u9053\uff0c\u9996\u5148\u5728 ChatGPT [51] \u7684\u5e2e\u52a9\u4e0b\u5b9a\u4f4d\u76ee\u6807\u5bf9\u8c61\uff0c\u7136\u540e\u4f7f\u7528\u4ee5\u5bf9\u8c61\u4e3a\u4e2d\u5fc3\u7684\u8868\u793a\u6cd5\u751f\u6210\u4eba\u4f53\u8fd0\u52a8\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#22-3d-visual-grounding","title":"2.2. 3D visual grounding.","text":"<p>\u8fd1\u5e74\u6765\uff0c\u4eba\u4eec\u5bf9\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u89c6\u89c9\u5b9a\u4f4d\u8fdb\u884c\u4e86\u63a2\u7d22[1, 11, 75]\uff0c\u5e76\u5728\u4e09\u7ef4\u95ee\u9898\u89e3\u7b54[13, 88]\u4e2d\u89e3\u51b3\u4e86\u8fd9\u4e00\u95ee\u9898\u3002\u9274\u4e8e\u4e09\u7ef4\u573a\u666f\u7684\u70b9\u4e91\uff0c\u8fd9\u9879\u4efb\u52a1[1]\u8981\u6c42\u6a21\u578b\u6839\u636e\u6587\u672c\u6307\u793a\u5b9a\u4f4d\u76ee\u6807\u5bf9\u8c61\u3002\u5927\u591a\u6570\u7814\u7a76\u91c7\u7528\u4e24\u9636\u6bb5\u65b9\u6848\uff0c\u9996\u5148\u9884\u6d4b\u591a\u4e2a\u8fb9\u754c\u6846 [9, 65, 101] \u6216\u5206\u5272\u7ed3\u679c [31, 89] \uff0c\u7136\u540e\u6839\u636e\u8bed\u8a00\u63cf\u8ff0\u9009\u62e9\u5bf9\u8c61\u3002[32] \u5f15\u5165\u4e86\u591a\u89c6\u89d2\u8f93\u5165\uff0c\u800c [87] \u5219\u91c7\u7528\u4e86\u4e8c\u7ef4\u8bed\u4e49\u3002[34]\u7ed3\u5408\u4e86\u81ea\u4e0b\u800c\u4e0a[46]\u548c\u81ea\u4e0a\u800c\u4e0b[7]\u7684\u68c0\u6d4b\u65b9\u6cd5\u3002[47]\u901a\u8fc7\u9010\u6b65\u9009\u62e9\u5173\u952e\u70b9\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5355\u7ea7\u6d41\u6c34\u7ebf\u3002[20]\u5728 GPT [6] \u7684\u5e2e\u52a9\u4e0b\u6269\u5c55\u4e86[32]\uff0c\u4ee5\u751f\u6210\u591a\u89c6\u56fe\u6587\u672c\u8f93\u5165\u3002\u6700\u8fd1\uff0c[30] \u63d0\u51fa\u4e86\u4e00\u79cd\u5177\u6709\u5927\u578b\u8bed\u8a00\u5230\u4ee3\u7801\u6a21\u578b\u7684\u795e\u7ecf\u7b26\u53f7\u6846\u67b6[10]\u3002\u5927\u591a\u6570\u4f5c\u54c1\u53ea\u80fd\u5b9a\u4f4d\u5355\u4e2a\u5bf9\u8c61\uff0c\u800c [96] \u53ef\u4ee5\u7075\u6d3b\u5b9a\u4f4d\u591a\u4e2a\u5bf9\u8c61\u3002\u4e0e\u4ee5\u5f80\u76f4\u63a5\u5904\u7406\u70b9\u4e91\u6216\u591a\u89c6\u89d2\u56fe\u50cf\u7684\u5de5\u4f5c\u4e0d\u540c\uff0c\u6211\u4eec\u5c06\u573a\u666f\u8f6c\u6362\u4e3a\u6587\u672c\u63cf\u8ff0\uff0c\u5e76\u5229\u7528\u5927\u578b\u8bed\u8a00\u6a21\u578b\u6765\u63a8\u65ad\u76ee\u6807\u5bf9\u8c61\u3002\u4e0e\u6587\u732e[30]\u4e00\u6837\uff0c\u6211\u4eec\u4e5f\u5229\u7528\u5927\u578b\u8bed\u8a00\u6a21\u578b\u8fdb\u884c\u7269\u4f53\u5b9a\u4f4d\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#3-problem-setup-and-preliminaries","title":"3. Problem setup and preliminaries","text":"<p>\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u4efb\u52a1\u7684\u5b9a\u4e49\u548c\u524d\u671f\u51c6\u5907\u5de5\u4f5c\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u751f\u6210\u4e0e\u6587\u672c\u63cf\u8ff0\u548c\u7ed9\u5b9a\u573a\u666f\u4e00\u81f4\u7684\u4eba\u4f53\u52a8\u4f5c\u3002</p> <p>\u6587\u672c\u63cf\u8ff0\u3002\u6587\u672c\u63cf\u8ff0\u9075\u5faa Sr3D [1] \u4e2d\u7684\u6a21\u677f &lt; \u52a8\u4f5c &gt;&lt; \u76ee\u6807\u7c7b &gt; [&lt; \u7a7a\u95f4\u5173\u7cfb &gt;&lt; \u951a\u70b9\u7c7b &gt;]\uff08\u4f8b\u5982\uff0c\"&lt;\u5750\u5728&gt; &lt;\u6905\u5b50\u4e0a&gt; [&lt; \u4f4d\u4e8e&gt; &lt;\u4e66\u684c\u548c\u4e66\u67b6&gt; \u7684\u4e2d\u592e&gt;]\"\uff09\u3002\u6709\u56db\u4e2a\u52a8\u4f5c\uff08\u8d70\u3001\u5750\u3001\u7ad9\u548c\u8eba\uff09\u3002\u76ee\u6807\u4ee3\u8868\u4ee3\u7406\u9700\u8981\u4e0e\u4e4b\u4ea4\u4e92\u7684\u5bf9\u8c61\uff0c\u800c\u951a\u5b9a\u5bf9\u8c61\u6709\u52a9\u4e8e\u786e\u5b9a\u76ee\u6807\u3002\u67d0\u4e00\u7c7b\u578b\u7684\u76ee\u6807\u5bb6\u5177\u901a\u5e38\u5728\u4e00\u4e2a\u573a\u666f\u4e2d\u6709\u5f88\u591a\u5b9e\u4f8b\uff0c\u800c\u951a\u5b9a\u5bb6\u5177\u5e94\u8be5\u662f\u552f\u4e00\u7684\u3002\u4e3a\u4e86\u786e\u5b9a\u786e\u5207\u7684\u76ee\u6807\u5bf9\u8c61\uff0c\u76ee\u6807\u5bf9\u8c61\u548c\u951a\u5b9a\u5bf9\u8c61\u4e4b\u95f4\u6709\u4e94\u79cd\u7a7a\u95f4\u5173\u7cfb[1]\uff1a\u6c34\u5e73\u63a5\u8fd1\u3001\u5782\u76f4\u63a5\u8fd1\u3001\u4e4b\u95f4\u3001\u5206\u914d\u4e2d\u5fc3\u548c\u652f\u6301\u3002</p> <p>\u573a\u666f\u8868\u793a\u6cd5\u3002\u573a\u666f\u8868\u793a\u4e3a\u7531 N \u4e2a\u70b9\u7ec4\u6210\u7684\u70b9\u4e91\uff1a S \u2208 RN\u00d76\uff0c\u5305\u542b\u6bcf\u4e2a\u70b9\u7684\u4f4d\u7f6e\u548c\u6cd5\u7ebf\u65b9\u5411\u4fe1\u606f\u3002</p> <p>\u8fd0\u52a8\u8868\u793a\u3002SMPL-X \u662f\u4e00\u4e2a\u53c2\u6570\u5316\u4eba\u4f53\u6a21\u578b\u3002\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u4eba\u4f53\u53c2\u6570\u5305\u62ec\u8eab\u4f53\u5f62\u72b6\u53c2\u6570 \u03b2\u2208 R10\u3001\u5168\u5c40\u5e73\u79fb r\u2208 R3\u30016D \u5168\u5c40\u65b9\u5411 \u03b3\u2208 R6 \u548c J \u5173\u8282\u7684 6D \u59ff\u52bf\u53c2\u6570 \u03b8\u2208 RJ\u00d76 [103]\u3002\u6839\u636e\u6587\u732e[82]\uff0c\u03b2 \u88ab\u89c6\u4e3a\u6a21\u62df\u8eab\u4f53\u5f62\u72b6\u5f71\u54cd\u7684\u6761\u4ef6\uff0c\u4e3a\u4fbf\u4e8e\u8bb0\u8ff0\uff0c\u6211\u4eec\u7701\u7565\u4e86\u5b83\u3002</p> <p>diffusion model \u7565</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#4-method","title":"4. Method","text":"<p>\u6211\u4eec\u7684\u65b9\u6cd5\u6982\u89c8\u5982\u56fe 2 \u6240\u793a\u3002\u5728\u7b2c 4.1 \u8282\u4e2d\uff0c\u6211\u4eec\u5229\u7528 ChatGPT \u5728\u4e09\u7ef4\u573a\u666f\u548c\u6587\u672c\u63cf\u8ff0\u4e2d\u5b9a\u4f4d\u76ee\u6807\u5bf9\u8c61\u3002\u5728\u7cbe\u786e\u5b9a\u4f4d\u7684\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u76ee\u6807\u5bf9\u8c61\u4e0a\uff0c\u5e76\u91c7\u7528\u4ee5\u5bf9\u8c61\u4e3a\u4e2d\u5fc3\u7684\u751f\u6210\u7ba1\u9053\u6765\u5206\u522b\u5408\u6210\u8f68\u8ff9\uff08\u7b2c 4.2 \u8282\uff09\u548c\u8fd0\u52a8\uff08\u7b2c 4.3 \u8282\uff09\u3002\u5408\u6210\u7ec6\u8282\u5c06\u5728\u7b2c 4.4 \u8282\u4e2d\u8ba8\u8bba\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#41-language-grounding-of-objects-in-3d-scenes","title":"4.1. Language grounding of objects in 3D scenes","text":"<p>\u6839\u636e\u6587\u672c\u63cf\u8ff0\u751f\u6210\u573a\u666f\u611f\u77e5\u52a8\u4f5c\u9700\u8981\u5177\u5907\u573a\u666f\u7406\u89e3\u80fd\u529b\uff0c\u5e76\u5728\u573a\u666f\u548c\u6587\u672c\u4e4b\u95f4\u5efa\u7acb\u91cd\u65b0\u5173\u8054\u3002\u7531\u4e8e\u6307\u4ee4\u63cf\u8ff0\u7684\u662f\u89d2\u8272\u5982\u4f55\u79fb\u52a8\u5e76\u4e0e\u5355\u4e2a\u76ee\u6807\u5bf9\u8c61\u4e92\u52a8\uff0c\u56e0\u6b64\u573a\u666f\u7684\u5927\u90e8\u5206\u5185\u5bb9\u53ef\u80fd\u4e0e\u6700\u7ec8\u52a8\u4f5c\u7684\u76f8\u5173\u6027\u5fae\u4e4e\u5176\u5fae[50]\u3002\u53d7\u6b64\u542f\u53d1\uff0c\u6211\u4eec\u5efa\u8bae\u5bf9\u76ee\u6807\u5bf9\u8c61\u8fdb\u884c\u5b9a\u4f4d\uff0c\u4ee5\u8bc6\u522b\u6700\u76f8\u5173\u7684\u4fe1\u606f\u3002\u53d7 LLM [41, 51, 52] \u6700\u65b0\u8fdb\u5c55\u7684\u542f\u53d1\uff0c\u6211\u4eec\u5229\u7528 ChatGPT [51] \u6765\u67e5\u627e\u7ed9\u5b9a\u6587\u672c\u4e2d\u7684\u7279\u5b9a\u5bf9\u8c61\u3002\u6211\u4eec\u9996\u5148\u901a\u8fc7\u6784\u5efa\u573a\u666f\u56fe\u6765\u83b7\u53d6\u573a\u666f\u7684\u6587\u672c\u63cf\u8ff0\u3002\u7136\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u4e13\u95e8\u8bbe\u8ba1\u7684\u63d0\u793a\u5c06\u6587\u672c\u6307\u4ee4\u8f93\u5165 ChatGPT\uff0c\u5e76\u89e3\u6790\u54cd\u5e94\u4ee5\u83b7\u53d6\u76ee\u6807\u5bf9\u8c61\u3002</p> <p>\u7a7a\u95f4\u573a\u666f\u56fe\u63d0\u53d6\u3002\u8981\u5229\u7528 LLM\uff0c\u7b2c\u4e00\u6b65\u662f\u5c06\u4e09\u7ef4\u573a\u666f\u8f6c\u6362\u6210\u6587\u672c\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u6784\u5efa\u7a7a\u95f4\u573a\u666f\u56fe\u6765\u5b9e\u73b0\u3002\u6211\u4eec\u5229\u7528 [46] \u4e2d\u9884\u5148\u8bad\u7ec3\u597d\u7684\u4e09\u7ef4\u7269\u4f53\u68c0\u6d4b\u6a21\u578b\u6765\u63d0\u4f9b\u4e09\u7ef4\u65b9\u6846\u5efa\u8bae\u3002\u968f\u540e\uff0c\u6211\u4eec\u91c7\u7528 [1] \u7684\u65b9\u6cd5\u6765\u83b7\u53d6\u7269\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u6bcf\u7ec4\u4e24\u4e2a\u7269\u4f53\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5b83\u4eec\u7684\u8fb9\u754c\u6846\u4e2d\u63a8\u65ad\u51fa\u5b83\u4eec\u4e4b\u95f4\u7684\u4e09\u79cd\u5173\u7cfb\uff1a\u6c34\u5e73\u63a5\u8fd1\u5ea6\u3001\u5782\u76f4\u63a5\u8fd1\u5ea6\u548c\u652f\u6491\u5ea6\uff08\u5982\u7b2c 3 \u8282\u6240\u8ff0\uff09\uff1b\u5bf9\u4e8e\u6bcf\u7ec4\u4e09\u4e2a\u7269\u4f53\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u65ad\u51fa\u5176\u4e2d\u4e00\u4e2a\u7269\u4f53\u662f\u5426\u4f4d\u4e8e\u53e6\u5916\u4e24\u4e2a\u7269\u4f53\u4e4b\u95f4\u3002\u7531\u4e8e\u68c0\u6d4b\u7ed3\u679c\u4e0d\u5305\u542b\u7269\u4f53\u59ff\u6001\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u6784\u5efa\u5206\u914d\u4e2d\u5fc3\u5173\u7cfb\uff08\u4f8b\u5982 \"\u6c99\u53d1\u540e\u9762\u7684\u67b6\u5b50\"\uff09\u3002\u7136\u540e\uff0c\u6211\u4eec\u6784\u5efa\u4e00\u4e2a\u573a\u666f\u56fe\uff0c\u5c06\u6bcf\u4e2a\u7269\u4f53\u6307\u5b9a\u4e3a\u56fe\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u4ee3\u8868\u7269\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u901a\u8fc7\u5c06\u4e09\u7ef4\u573a\u666f\u8f6c\u6362\u4e3a\u6587\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u5e94\u7528 ChatGPT \u4ece\u6570\u636e\u4e2d\u63d0\u53d6\u6709\u610f\u4e49\u7684\u89c1\u89e3\u3002</p> <p>\u5229\u7528 ChatGPT \u5b9a\u4f4d\u76ee\u6807\u5bf9\u8c61\u3002\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u5c06\u6574\u4e2a\u573a\u666f\u56fe\u8f93\u5165 ChatGPT\uff0c\u7136\u540e\u8ba9\u5b83\u9009\u62e9\u76ee\u6807\u5bf9\u8c61\u3002\u7136\u800c\uff0c\u573a\u666f\u4e2d\u53ef\u80fd\u5305\u542b\u8bb8\u591a\u7269\u4f53\uff0c\u4ece\u800c\u5bfc\u81f4\u7eb9\u7406\u63cf\u8ff0\u8fc7\u957f\u3002\u6211\u4eec\u89c2\u5bdf\u5230\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cChat-GPT \u7ecf\u5e38\u4f1a\u611f\u5230\u56f0\u60d1\uff0c\u65e0\u6cd5\u7ed9\u51fa\u6b63\u786e\u7684\u7b54\u6848\u3002\u4e3a\u4e86\u7f29\u5c0f\u641c\u7d22\u7a7a\u95f4\uff0c\u6211\u4eec\u9996\u5148\u4f7f\u7528 ChatGPT \u6765\u8bc6\u522b\u4e0e\u6240\u63d0\u4f9b\u6587\u672c\u76f8\u5173\u7684\u5bf9\u8c61\u3002\u7136\u540e\uff0c\u6211\u4eec\u4ece\u573a\u666f\u56fe\u4e2d\u6392\u9664\u65e0\u5173\u7684\u5bf9\u8c61\uff0c\u53ea\u5173\u6ce8\u5177\u6709\u76f8\u5173\u4fe1\u606f\u7684\u5bf9\u8c61\uff0c\u4ece\u800c\u6709\u6548\u5730\u786e\u5b9a\u76ee\u6807\u5bf9\u8c61\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u4f18\u70b9\u662f\u51cf\u5c11\u4e86\u9700\u8981\u8003\u8651\u7684\u5bf9\u8c61\u6570\u91cf\uff0c\u4f7f ChatGPT \u66f4\u5bb9\u6613\u8bc6\u522b\u76ee\u6807\u5bf9\u8c61\u3002</p> <p>\u5982\u56fe 3 \u6240\u793a\uff0c\u6211\u4eec\u4ee5\u5e8f\u5217\u7684\u65b9\u5f0f\u6784\u5efa\u4e24\u4e2a\u63d0\u793a\u3002\u4ee5 \"\u5750\u5728\u9ed1\u677f\u548c\u672b\u7aef\u684c\u5b50\u4e2d\u95f4\u7684\u6905\u5b50\u4e0a \"\u4e3a\u4f8b\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u7f29\u5c0f\u5bf9\u8c61\u7c7b\u522b\u641c\u7d22\u7a7a\u95f4\u3002\u4e3a\u4e86\u627e\u5230\u6211\u4eec\u5173\u5fc3\u7684\u5bf9\u8c61\u7c7b\u578b\uff0c\u6211\u4eec\u6784\u5efa\u4e86\u7b2c\u4e00\u4e2a\u63d0\u793a\uff0c\u8981\u6c42 ChatGPT \u627e\u51fa\u76ee\u6807\u5bf9\u8c61\u548c\u966a\u886c\u5bf9\u8c61\u3002\u76ee\u6807\u5bf9\u8c61\u662f\u6307\u6211\u4eec\u5e0c\u671b\u4ee3\u7406\u4e0e\u4e4b\u4ea4\u4e92\u7684\u6700\u7ec8\u5bf9\u8c61\uff0c\u5728\u672c\u4f8b\u4e2d\u5c31\u662f \"\u684c\u5b50\"\u3002\u951a\u70b9\u5bf9\u8c61\u662f\u5e2e\u52a9\u786e\u5b9a\u76ee\u6807\u5bf9\u8c61\u7684\u5bf9\u8c61\uff0c\u56e0\u4e3a\u4e00\u4e2a\u573a\u666f\u4e2d\u53ef\u80fd\u6709\u5f88\u591a\u6905\u5b50\u3002\u6839\u636e\u76ee\u6807\u5bf9\u8c61 \"\u6905\u5b50 \"\u4ee5\u53ca\u951a\u5b9a\u5bf9\u8c61 \"\u6728\u677f \"\u548c \"\u684c\u5b50\"\uff0c\u6211\u4eec\u53ef\u4ee5\u8fc7\u6ee4\u6389\u573a\u666f\u4e2d\u6240\u6709\u4e0d\u76f8\u5173\u7684\u5bf9\u8c61\uff0c\u5728\u573a\u666f\u56fe\u4e2d\u53ea\u4fdd\u7559\u6905\u5b50\u3001\u6728\u677f\u548c\u684c\u5b50\u3002\u63a5\u4e0b\u6765\uff0c\u6839\u636e\u7b80\u5316\u540e\u7684\u573a\u666f\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6587\u5b57\u63cf\u8ff0\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a\u573a\u666f\u56fe\u4e2d\u7684\u6bcf\u4e00\u6761\u8fb9\u90fd\u53ef\u4ee5\u8f6c\u6362\u6210\u7c7b\u4f3c \"\u6905\u5b50 4 \u79bb\u672b\u7aef\u7684\u684c\u5b50 0 \u5f88\u8fdc \"\u8fd9\u6837\u7684\u8fb9\u53e5\u5b50\u3002\u5c06\u6240\u6709\u7684\u8fb9\u8f6c\u6362\u6210\u8fd9\u6837\u7684\u8fb9\u53e5\u5b50\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6574\u5730\u63cf\u8ff0\u5f53\u524d\u573a\u666f\u3002\u6700\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u8981\u6c42 ChatGPT \u4ece\u79ef\u7d2f\u7684\u8fb9\u7f18\u53e5\u4e2d\u63a8\u65ad\u51fa\u76ee\u6807\u5bf9\u8c61\u6765\u6784\u5efa\u7b2c\u4e8c\u4e2a\u63d0\u793a\u3002\u66f4\u591a\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605\u8865\u5145\u6750\u6599\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#42-diffusion-based-trajectory-generation","title":"4.2. Diffusion-based trajectory generation","text":"<p>\u7ed9\u5b9a ChatGPT \u5b9a\u4f4d\u7684\u5bf9\u8c61\u540e\uff0c\u6211\u4eec\u9996\u5148\u6839\u636e\u6307\u4ee4\u751f\u6210\u8f68\u8ff9\uff0c\u7136\u540e\u5408\u6210\u672c\u5730\u4eba\u7684\u59ff\u52bf\u3002\u8f68\u8ff9\u88ab\u5b9a\u4e49\u4e3a\u4eba\u7269\u7684\u5e73\u79fb\u548c\u65b9\u5411\u5e8f\u5217\u3002\u6b63\u5982\u6587\u732e[50]\u6240\u8ff0\uff0c\u5e76\u975e\u573a\u666f\u4e2d\u7684\u6bcf\u4e2a\u70b9\u90fd\u4e0e\u6700\u7ec8\u7684\u4eba\u4f53\u52a8\u4f5c\u76f8\u5173\u3002\u53d7 NSM [69] \u548c ManipNet [91] \u7684\u542f\u53d1\uff0c\u6211\u4eec\u91c7\u7528\u76ee\u6807\u7269\u4f53\u5468\u56f4\u7684\u4f53\u79ef\u4f20\u611f\u5668\uff08\u5982\u56fe 4 \u6240\u793a\uff09\u6765\u8868\u793a\u573a\u666f\u3002</p> <p>\u4ee5\u7269\u4f53\u4e3a\u4e2d\u5fc3\u7684\u573a\u666f\u8868\u793a\u6cd5\u3002\u5c06\u76ee\u6807\u7269\u4f53\u4e2d\u5fc3\u4f4d\u7f6e\u8bb0\u4e3a (cx,cy,cz)\u3002\u6211\u4eec\u5c06\u573a\u666f S \u7684\u70b9\u4e91\u8f6c\u6362\u4e3a\u4ee5 (cx, cy, cz) \u4e3a\u4e2d\u5fc3\u7684\u7269\u4f53\u4e2d\u5fc3\u5750\u6807\u8f74\u3002\u4e3a\u4e86\u8bc6\u522b\u76ee\u6807\u7269\u4f53\u5468\u56f4\u7684\u51e0\u4f55\u5c3a\u5bf8\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u540d\u4e3a \"\u73af\u5883\u4f20\u611f\u5668 \"\u548c \"\u76ee\u6807\u4f20\u611f\u5668 \"\u7684\u4f53\u79ef\u4f20\u611f\u5668\u3002</p> <p>\u73af\u5883\u4f20\u611f\u5668\u4ee5\uff08cx, cy, cz\uff09\u4e3a\u4e2d\u5fc3\uff0c\u5448\u7acb\u65b9\u4f53\u5f62\u72b6\uff0c\u4f53\u79ef\u4e3a 4 \u00d7 4 \u00d7 4 m3\uff0c\u5305\u542b 8\u00d78\u00d78 \u7acb\u65b9\u4f53\u4f53\u7d20\uff0c\u5982\u56fe 4 \u00a9\u6240\u793a\u3002\u4e0e\u6587\u732e[69]\u4e00\u6837\uff0c\u6839\u636e\u7ed9\u5b9a\u7684\u573a\u666f\u7f51\u683c\u5b9a\u4e49\u6bcf\u4e2a\u4f53\u7d20\u4e2d\u7684\u573a\u666f\u5360\u4f4dos\u2208R1\uff1a</p> <p>\u5176\u4e2d\uff0cds \u662f\u573a\u666f\u7f51\u683c\u4e0e\u4f53\u7d20\u4e2d\u5fc3\u4e4b\u95f4\u7684\u7b26\u53f7\u8ddd\u79bb\uff0cas \u662f\u4f53\u7d20\u8fb9\u957f\uff0cnv \u662f\u8ddd\u79bb\u4f53\u7d20\u4e2d\u5fc3\u6700\u8fd1\u7684\u573a\u666f\u70b9\u7684\u6cd5\u7ebf\u65b9\u5411\u3002\u73af\u5883\u4f20\u611f\u5668\u63d0\u4f9b\u76ee\u6807\u7269\u4f53\u5468\u56f4\u7684\u7c97\u7565\u573a\u666f\u51e0\u4f55\u6d4b\u91cf\u3002</p> <p>\u4e3a\u4e86\u6355\u6349\u76ee\u6807\u7269\u4f53\u7684\u8be6\u7ec6\u51e0\u4f55\u5f62\u72b6\uff0c\u6211\u4eec\u8fdb\u4e00\u6b65\u6784\u5efa\u4e86\u53e6\u4e00\u4e2a\u540d\u4e3a \"\u76ee\u6807\u4f20\u611f\u5668\"\uff08Target Sen-sor\uff09\u7684\u4f53\u79ef\u4f20\u611f\u5668\u3002\u7531\u4e8e\u6211\u4eec\u5728\u7b2c 4.1 \u8282\u4e2d\u5df2\u7ecf\u83b7\u5f97\u4e86\u76ee\u6807\u7269\u4f53\u7684\u4e09\u7ef4\u8fb9\u754c\u6846\uff0c\u56e0\u6b64\u6211\u4eec\u6839\u636e\u8fb9\u754c\u6846\u88c1\u526a\u70b9\u4e91\uff0c\u5e76\u6784\u5efa\u4e00\u4e2a\u8986\u76d6\u8fb9\u754c\u6846\u7684 8 \u00d7 8 \u00d7 8 \u7acb\u65b9\u4f53\u4f53\u79ef\uff0c\u5982\u56fe 4 (b) \u6240\u793a\u3002\u76ee\u6807\u4f20\u611f\u5668 T \u4e0e\u73af\u5883\u4f20\u611f\u5668 E \u7684\u5f62\u5f0f\u76f8\u540c\uff0c\u53ea\u662f\u76ee\u6807\u4f20\u611f\u5668\u7684\u4f53\u7d20\u5927\u5c0f\u4e0d\u540c\uff0c\u5982\u56fe 4 (b) \u548c \u00a9 \u6240\u793a\u3002 \u9274\u4e8e\u6240\u6784\u5efa\u7684\u4ee5\u5bf9\u8c61\u4e3a\u4e2d\u5fc3\u7684\u8868\u793a\u6cd5\uff0c\u6211\u4eec\u9075\u5faa\u6587\u732e[56]\uff0c\u91c7\u7528\u53d8\u538b\u5668\u89e3\u7801\u5668\u67b6\u6784[78]\uff0c\u8be5\u67b6\u6784\u53ef\u5b9e\u73b0\u4efb\u610f\u957f\u5ea6\u7684\u8fd0\u52a8\u3002\u81f3\u4e8e\u6587\u672c\u8f93\u5165\uff0c\u6211\u4eec\u4f7f\u7528 CLIP [61] \u6587\u672c\u7f16\u7801\u5668\u5c06\u8f93\u5165\u6587\u672c\u7f16\u7801\u4e3a\u6587\u672c\u7279\u5f81 L\u3002\u603b\u4e4b\uff0c\u8fd9\u79cd\u751f\u6210\u6a21\u578b\u7684\u6761\u4ef6\u662f</p> <p>Ct = {L, E, T },</p> <p>\u5176\u4e2d\uff0cL \u662f\u6587\u672c\u7279\u5f81\uff0cE \u662f\u73af\u5883\u4f20\u611f\u5668\uff0cT \u662f\u76ee\u6807\u4f20\u611f\u5668\u3002\u6240\u6709\u6761\u4ef6\u901a\u8fc7 MLP \u6295\u5f71\u5230\u540c\u4e00\u7ef4\u5ea6 D = 512\uff0c\u5e76\u4e0e\u4f4d\u7f6e\u5d4c\u5165\u76f8\u52a0\u5f62\u6210\u8bcd\u5757\u3002\u6211\u4eec\u4f7f\u7528\u516c\u5f0f 2 \u4e2d\u63cf\u8ff0\u7684\u7b80\u5355\u76ee\u6807\u6765\u8bad\u7ec3\u8f68\u8ff9\u751f\u6210\u6a21\u578b Gr\uff0c\u4ee5\u751f\u6210\u957f\u5ea6\u4e3a N \u7684\u8f68\u8ff9 r1:N\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#43-diffusion-based-motion-completion","title":"4.3. Diffusion-based motion completion","text":"<p>\u6709\u4e86\u7b2c 4.2 \u8282\u4e2d\u7684\u8fd0\u52a8\u8f68\u8ff9\uff0c\u4e0b\u4e00\u6b65\u5c31\u662f\u5b8c\u6210\u6574\u4e2a\u8fd0\u52a8\u3002\u6839\u636e\u751f\u6210\u7684\u8fd0\u52a8\u8f68\u8ff9\uff0c\u6211\u4eec\u6784\u5efa\u4e86\u4e00\u4e2a\u8f68\u8ff9\u4f20\u611f\u5668 O\uff0c\u7528\u4e8e\u660e\u786e\u63a8\u7406\u89d2\u8272\u4e0e\u573a\u666f\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002 \u8f68\u8ff9\u4f20\u611f\u5668 \u5982\u56fe 4 (d) \u6240\u793a\uff0c\u8f68\u8ff9\u4f20\u611f\u5668\u4e5f\u662f\u4e00\u79cd\u4f53\u79ef\u4f20\u611f\u5668\uff0c\u5176\u5f62\u5f0f\u4e0e\u73af\u5883\u4f20\u611f\u5668\u7c7b\u4f3c\uff0c\u4f46\u8bbe\u8ba1\u7528\u4e8e\u4ee5\u81ea\u6211\u4e3a\u4e2d\u5fc3\u7684\u611f\u77e5[94]\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8f68\u8ff9\u4f20\u611f\u5668\u88ab\u653e\u7f6e\u5728\u6bcf\u4e2a\u5e27\u4e2d\u4eba\u7269\u7684\u5468\u56f4\u3002\u4f20\u611f\u5668 Oi \u4ee5\u7b2c i \u5e27\u7684\u9884\u6d4b\u6839\u4f4d\u7f6e\u4e3a\u4e2d\u5fc3\uff0c\u9762\u5411\u7b2c i \u5e27\u7684\u9884\u6d4b\u6839\u65b9\u5411\uff0c\u5305\u542b 8 \u00d7 8 \u00d7 8 \u7acb\u65b9\u4f53\uff0c\u7528\u4e8e\u5b58\u50a8\u573a\u666f\u5360\u7528\u7387\u3002\u5360\u7528\u7387\u8ba1\u7b97\u4e0e\u516c\u5f0f 3 \u76f8\u540c\u3002 \u53e6\u4e00\u4e2a\u57fa\u4e8e\u53d8\u6362\u5668\u7684\u6761\u4ef6\u6269\u6563\u6a21\u578b\u7528\u4e8e\u6cbf\u8f68\u8ff9\u5408\u6210\u5c40\u90e8\u59ff\u6001\u3002\u6761\u4ef6\u6269\u6563\u6a21\u578b\u7684\u5b9a\u4e49\u5982\u4e0b</p> <p>Cm = {L, E, T, O1, ..., ON },</p> <p>\u5176\u4e2d L\u3001E \u548c T \u4e0e\u516c\u5f0f 4 \u4e2d\u7684\u542b\u4e49\u76f8\u540c\u3002\u516c\u5f0f 2 \u4e2d\u63cf\u8ff0\u7684\u7b80\u5355\u76ee\u6807\u7528\u4e8e\u8bad\u7ec3\u8fd0\u52a8\u751f\u6210\u6a21\u578b Gm\uff0c\u4ee5\u751f\u6210\u957f\u5ea6\u4e3a N \u7684\u5168\u5c40\u65b9\u5411 \u03b31:N \u548c\u5c40\u90e8\u59ff\u6001 \u03b81:N\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#44-implementation-details","title":"4.4. Implementation details","text":"<p>\u6839\u636e\u6587\u732e[37, 56, 79, 80]\uff0c\u6211\u4eec\u5728\u8f68\u8ff9\u751f\u6210\u548c\u8fd0\u52a8\u751f\u6210\u4e2d\u5206\u522b\u4f7f\u7528\u4e0d\u540c\u7684\u6269\u6563\u6a21\u578b\u3002\u7531\u4e8e HUMANISE \u6570\u636e\u96c6[82]\u4e0e AMASS \u6570\u636e\u96c6\uff083772 \u5206\u949f\uff09[48]\u76f8\u6bd4\u53ea\u5305\u542b\u76f8\u5bf9\u8f83\u5c11\uff0851 \u5206\u949f\uff09\u7684\u7eaf\u8fd0\u52a8\u6837\u672c\uff0c\u56e0\u6b64\u6211\u4eec\u9996\u5148\u5728\u6574\u4e2a AMASS \u6570\u636e\u96c6\u4e0a\u5bf9\u6a21\u578b\u8fdb\u884c 200 \u4e2a\u5386\u65f6\u7684\u9884\u8bad\u7ec3\uff0c\u7136\u540e\u5728 HUMANISE \u6570\u636e\u96c6\u4e0a\u8fdb\u884c 200 \u4e2a\u5386\u65f6\u7684\u5fae\u8c03\u4ee5\u63d0\u9ad8\u8fd0\u52a8\u8d28\u91cf\u3002\u5728\u9884\u8bad\u7ec3\u671f\u95f4\uff0c\u6587\u672c\u7279\u5f81 L \u88ab\u8bbe\u7f6e\u4e3a\u5168\u96f6\u3002\u4e24\u4e2a\u6a21\u578b\u90fd\u4f7f\u7528 AdamW \u4f18\u5316\u5668[39]\u8fdb\u884c\u8bad\u7ec3\uff0c\u5728\u4e00\u4e2a Nvidia RTX 3090 GPU \u4e0a\u4f7f\u7528 0.0001 \u7684\u5b66\u4e60\u7387\u3002\u6279\u91cf\u5927\u5c0f\u8bbe\u7f6e\u4e3a 128\u3002\u66f4\u591a\u8be6\u60c5\u8bf7\u53c2\u89c1\u8865\u5145\u6750\u6599\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#5-experiments","title":"5. Experiments","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#51-evaluation-metrics","title":"5.1. Evaluation metrics","text":"<p>\u8fd9\u9879\u4efb\u52a1\u8981\u6c42\u751f\u6210\u7684\u52a8\u4f5c\u4e0d\u4ec5\u8981\u81ea\u7136\u3001\u53ef\u4fe1\uff0c\u8fd8\u8981\u4e0e\u573a\u666f\u548c\u6587\u672c\u8f93\u5165\u4e00\u81f4\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4ece\u4e09\u4e2a\u65b9\u9762\u5bf9\u751f\u6210\u7684\u52a8\u4f5c\u8fdb\u884c\u8bc4\u4f30\uff1a\u573a\u666f\u6761\u4ef6\u52a8\u4f5c\u8d28\u91cf\u3001\u52a8\u4f5c\u6761\u4ef6\u52a8\u4f5c\u8d28\u91cf\u548c\u7eaf\u52a8\u4f5c\u8d28\u91cf\u3002 \u573a\u666f\u6761\u4ef6\u8fd0\u52a8\u8d28\u91cf\u3002\u4e3a\u4e86\u8bc4\u4f30\u751f\u6210\u7684\u52a8\u4f5c\u4e0e\u573a\u666f\u7684\u4e00\u81f4\u6027\uff0c\u6211\u4eec\u8ba1\u7b97\u4e86 [82] \u63d0\u51fa\u7684\u8eab\u4f53\u5230\u76ee\u6807\u7684\u8ddd\u79bb\uff08goal dist.\uff09 \u867d\u7136\u76ee\u6807\u8ddd\u79bb\u6d4b\u91cf\u7684\u662f\u4e0e\u76ee\u6807\u5bf9\u8c61\u7684\u63a5\u8fd1\u7a0b\u5ea6\uff0c\u4f46\u5b83\u5e76\u4e0d\u8003\u8651\u6574\u4e2a\u52a8\u4f5c\u4e0e\u573a\u666f\u7684\u4e00\u81f4\u6027\uff08\u4f8b\u5982\uff0c\u5750\u5728\u6c99\u53d1\u4e0a\u4f46\u53e3\u578b\u4e0d\u6b63\u786e\uff09\u3002\u4e3a\u4e86\u5f25\u8865\u76ee\u6807\u8ddd\u79bb\u7684\u4e0d\u8db3\uff0c\u5bf9\u6bcf\u4e2a\u6a21\u578b\u968f\u673a\u62bd\u53d6 20 \u4e2a\u573a\u666f\u8fdb\u884c\u4eba\u7c7b\u611f\u77e5\u7814\u7a76\uff08\u4ee5\u573a\u666f\u8bc4\u5206\u8868\u793a\uff09\uff0c\u6bcf\u4e2a\u6837\u672c\u9700\u8981 10 \u540d\u5de5\u4f5c\u4eba\u5458\u8fdb\u884c\u8bc4\u5206\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1\u8865\u5145\u6750\u6599\u3002 \u52a8\u4f5c\u6761\u4ef6\u8fd0\u52a8\u8d28\u91cf\u3002\u4e3a\u4e86\u8861\u91cf\u751f\u6210\u7684\u52a8\u4f5c\u4e0e\u6587\u672c\u7684\u4e00\u81f4\u6027\uff0c\u6211\u4eec\u6309\u7167 [17] \u7684\u65b9\u6cd5\u6765\u8bc4\u4f30\u52a8\u4f5c\u8bc6\u522b\u7684\u51c6\u786e\u6027\uff08\u51c6\u786e\u7387\uff09\u3001\u591a\u6837\u6027\u548c\u7ed3\u679c\u7684\u591a\u6a21\u6001\u6027\u3002\u8ba1\u7b97\u8fd9\u4e9b\u6307\u6807\u4f9d\u8d56\u4e8e\u9884\u5148\u8bad\u7ec3\u7684\u52a8\u4f5c\u8bc6\u522b\u6a21\u578b[86]\uff0c\u6211\u4eec\u5728 HUMANISE \u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u8bc6\u522b\u6a21\u578b\u3002 \u7eaf\u52a8\u4f5c\u8d28\u91cf\u3002\u6211\u4eec\u4f7f\u7528 [17] \u63d0\u51fa\u7684\u6307\u6807\uff0c\u5373 Frechet Inception Distance (FID) \u6765\u8bc4\u4f30\u751f\u6210\u52a8\u4f5c\u7684\u903c\u771f\u5ea6\u3002FID \u8d8a\u5c0f\uff0c\u8bf4\u660e\u751f\u6210\u7684\u8fd0\u52a8\u8d8a\u63a5\u8fd1\u5730\u9762\u771f\u5b9e\u8fd0\u52a8\u3002\u6211\u4eec\u8fd8\u8fdb\u884c\u4e86\u4eba\u7c7b\u611f\u77e5\u7814\u7a76\uff08\u4ee5\u8d28\u91cf\u5206\u6570\u8868\u793a\uff09\uff0c\u4ee5\u8861\u91cf\u7eaf\u8fd0\u52a8\u8d28\u91cf\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1\u8865\u5145\u6750\u6599\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#52-generating-human-motion-from-text-and-scene","title":"5.2. Generating human motion from text and scene","text":"<p>\u6211\u4eec\u7684\u5b9e\u9a8c\u662f\u5728 HUMANISE \u6570\u636e\u96c6 [82] \u4e0a\u8fdb\u884c\u7684\u3002\u6309\u7167\u4e4b\u524d\u7684\u8bbe\u7f6e[82]\uff0c\u6211\u4eec\u4f7f\u7528 543 \u4e2a\u573a\u666f\u4e2d\u7684 16.5k \u4e2a\u8fd0\u52a8\u5e8f\u5217\u8fdb\u884c\u8bad\u7ec3\uff0c\u5e76\u4f7f\u7528 100 \u4e2a\u573a\u666f\u4e2d\u7684 3.1k \u4e2a\u8fd0\u52a8\u5e8f\u5217\u8fdb\u884c\u6d4b\u8bd5\u3002\u6211\u4eec\u5c06\u6211\u4eec\u7684\u65b9\u6cd5\u4e0e\u56db\u79cd\u57fa\u7ebf\u65b9\u6cd5\u8fdb\u884c\u6bd4\u8f83\uff1a(1) MDM\u2217\uff1a MDM [74] \u662f\u4e00\u79cd\u57fa\u4e8e\u6269\u6563\u7684\u8fd0\u52a8\u751f\u6210\u5668\u3002\u4e0e HUMANISE \u7c7b\u4f3c\uff0c\u6211\u4eec\u4f7f\u7528\u70b9\u53d8\u6362\u5668\u4e3a MDM \u63d0\u4f9b\u573a\u666f\u7279\u5f81\u3002(2) GMD\u2217\uff1a\u5728 MDM \u7684\u57fa\u7840\u4e0a\uff0cGMD[37] \u63d0\u51fa\u4e86\u5404\u79cd\u6280\u672f\u6765\u589e\u5f3a MDM \u7684\u63a7\u5236\u548c\u8d28\u91cf\u3002\u6211\u4eec\u91c7\u7528 GMD\u2217 \u7684\u5355\u9636\u6bb5\u8bbe\u7f6e\u3002\u573a\u666f\u4fe1\u606f\u7684\u7ed9\u51fa\u5f62\u5f0f\u4e0e MDM\u2217 \u548c HUMANISE \u76f8\u540c\u3002(3) GMDHC\uff1a\u6211\u4eec\u63d0\u4f9b\u7531 HUMANISE \u9884\u6d4b\u7684\u7269\u4f53\u4e2d\u5fc3\uff08\u7528 HC \u8868\u793a\uff09\uff0c\u901a\u8fc7\u589e\u52a0\u63a5\u8fd1\u635f\u5931\u6765\u9f13\u52b1\u8fd0\u52a8\u9760\u8fd1\u9884\u6d4b\u7684\u7269\u4f53\u4e2d\u5fc3\uff0c\u4ece\u800c\u6307\u5bfc GMD \u7684\u8fd0\u52a8\u751f\u6210\u8fc7\u7a0b\u3002\u63a5\u8fd1\u635f\u5931\u7684\u5b9a\u4e49\u662f\uff0c\u5728\u4ea4\u4e92\u5e27\u4e2d\uff0cHC \u4e0e\u9884\u6d4b\u7684\u4eba\u4f53\u9aa8\u76c6\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002(4) HUMANISE\uff1aHUMANISE \u662f\u4e00\u79cd\u57fa\u4e8e cVAE \u7684\u65b9\u6cd5\uff0c\u53ef\u6839\u636e\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u6587\u5b57\u751f\u6210\u4eba\u4f53\u52a8\u4f5c\u3002\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u5176\u53d1\u5e03\u7684\u6a21\u578b\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1\u8865\u5145\u6750\u6599\u3002 \u5b9a\u91cf\u7ed3\u679c\u5982\u8868 1 \u6240\u793a\u30021. \u6211\u4eec\u7684\u65b9\u6cd5\u5728\u76ee\u6807\u8ddd\u79bb\u3001\u573a\u666f\u5f97\u5206\u3001\u51c6\u786e\u7387\u3001FID \u548c\u8d28\u91cf\u5f97\u5206\u65b9\u9762\u90fd\u4f18\u4e8e\u57fa\u7ebf\u65b9\u6cd5\uff0c\u5e76\u5728\u591a\u6837\u6027\u548c\u591a\u6a21\u6001\u65b9\u9762\u53d6\u5f97\u4e86\u6709\u7ade\u4e89\u529b\u7684\u7ed3\u679c\u3002\u5b9a\u91cf\u7ed3\u679c\u8868\u660e\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u53ef\u4ee5\u751f\u6210\u66f4\u9ad8\u8d28\u91cf\u7684\u56fe\u50cf\uff0c\u5e76\u4e14\u5728\u6240\u6709\u6761\u4ef6\u4e0b\u90fd\u66f4\u52a0\u4e00\u81f4\u3002\u56fe 5 \u5c55\u793a\u4e86\u5b9a\u6027\u7ed3\u679c\u3002\u6211\u4eec\u7684\u7ba1\u9053\u53ef\u4ee5\u751f\u6210\u4e0e\u573a\u666f\u548c\u6587\u672c\u4e00\u81f4\u7684\u66f4\u81ea\u7136\u7684\u52a8\u4f5c\u3002\u66f4\u591a\u53ef\u89c6\u5316\u6548\u679c\u8bf7\u53c2\u9605\u8865\u5145\u6750\u6599\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#53-ablation-study","title":"5.3. Ablation study","text":"<p>\u4e3b\u8981\u90e8\u4ef6\u7684\u70e7\u8680\u3002\u4e3a\u4e86\u63a2\u7d22\u6211\u4eec\u7684\u8bbe\u8ba1\u9009\u62e9\u6240\u4ea7\u751f\u7684\u6548\u679c\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e86\u56db\u79cd\u53d8\u4f53\u3002(1) \"\u65e0\u5b9a\u4f4d\"\uff1a\u53bb\u6389\u5b9a\u4f4d\u6a21\u5757\uff0c\u76f4\u63a5\u4f7f\u7528\u573a\u666f\u70b9\u4e91\u751f\u6210\u8f68\u8ff9\u548c\u8fd0\u52a8\u3002\u4e0e HUMANISE \u4e00\u6837\uff0c\u901a\u8fc7\u56fa\u5b9a\u7684\u70b9\u53d8\u6362\u5668\u63d0\u53d6\u573a\u666f\u7279\u5f81\u3002(2) \"\u4e0d\u4ee5\u7269\u4f53\u4e3a\u4e2d\u5fc3\"\uff1a\u6211\u4eec\u53bb\u6389\u4e86\u4ee5\u7269\u4f53\u4e3a\u4e2d\u5fc3\u7684\u8868\u5f81\uff0c\u4ee5\u573a\u666f\u5750\u6807\u9884\u6d4b\u8fd0\u52a8\u3002\u6211\u4eec\u4ecd\u7136\u4f7f\u7528\u4f20\u611f\u5668\u7684\u573a\u666f\u7279\u5f81\u3002(3) \"\u4e0d\u542b\u4e24\u9636\u6bb5\"\uff1a\u540c\u65f6\u751f\u6210\u8f68\u8ff9\u548c\u8fd0\u52a8\u3002(4) \"\u65e0\u6269\u6563\"\uff1a\u91c7\u7528 cVAE \u4ee3\u66ff\u6269\u6563\u6a21\u578b\u4f5c\u4e3a\u67b6\u6784\u3002(5\uff09\"w/o pretrain\"\uff1a\u4e0d\u5728 AMASS \u6570\u636e\u96c6\u4e0a\u5bf9\u6a21\u578b\u8fdb\u884c\u9884\u8bad\u7ec3\u3002\u5982\u8868 2 \u6240\u793a \u5982\u8868 2 \u6240\u793a\uff0c\u5b9a\u4f4d\u589e\u5f3a\u4e86\u7cbe\u786e\u4ea4\u4e92\u80fd\u529b\uff0c\u800c\u4ee5\u7269\u4f53\u4e3a\u4e2d\u5fc3\u7684\u8868\u793a\u5219\u63d0\u9ad8\u4e86\u8fd0\u52a8\u8d28\u91cf\u3002\u66f4\u591a\u7ed3\u679c\u8bf7\u53c2\u9605\u8865\u5145\u6750\u6599\u3002 \u7269\u4f53\u5b9a\u4f4d\u7684\u8bbe\u8ba1\u9009\u62e9\u3002\u5728\u7269\u4f53\u5b9a\u4f4d\u65b9\u9762\uff0c\u6211\u4eec\u5c06\u6211\u4eec\u7684\u65b9\u6cd5\u4e0e\u4e24\u79cd\u57fa\u7ebf\u548c\u4e09\u79cd\u53d8\u4f53\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002(1) BUTD-DETR\uff1aBUTD-DETR [34] \u662f\u4e00\u79cd\u73b0\u6709\u7684 3D \u89c6\u89c9\u5b9a\u4f4d\u65b9\u6cd5\u3002(2) HUMAN-ISE\uff1aHUMANISE \u5728\u8f85\u52a9\u4efb\u52a1\u4e2d\u9884\u6d4b\u7269\u4f53\u4e2d\u5fc3\u3002(3) \"\u6211\u4eec\u4f7f\u7528 LLaMA\"\uff1a \u7528 LLaMA \u53d6\u4ee3 ChatGPT\u3002(4) \"ours w/o two-stage\"\uff1a\u6211\u4eec\u91c7\u7528\u5355\u9636\u6bb5\u95ee\u7b54\u6d41\u7a0b\uff0c\u800c\u4e0d\u662f\u4e24\u9636\u6bb5\u65b9\u5f0f\u3002(5) \"ours w/o few-shot\"\uff1aChatGPT \u4e0d\u63d0\u4f9b few-shot \u793a\u4f8b\u3002\u6211\u4eec\u5728\u4e24\u79cd\u60c5\u51b5\u4e0b\u5bf9\u8fd9\u4e9b\u53d8\u4f53\u8fdb\u884c\u4e86\u8bc4\u4f30\uff1a\u9884\u6d4b\u68c0\u6d4b[46]\u548c\u5730\u9762\u5b9e\u51b5\u68c0\u6d4b\u3002\u8bc4\u4f30\u6307\u6807\u5305\u62ec\u5bf9\u8c61\u6821\u51c6\u7684\u51c6\u786e\u5ea6\uff08acc.\uff09\u548c\u9884\u6d4b\u4e2d\u5fc3\u5230\u5bf9\u8c61\u4e2d\u5fc3\u7684\u8ddd\u79bb\uff08center dist.\uff09\u3002\u8868 3 \u8868 3 \u663e\u793a\uff0c\u4e0e\u5176\u4ed6\u53d8\u4f53\u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u80fd\u4ee5\u66f4\u9ad8\u7684\u7cbe\u5ea6\u548c\u66f4\u4f4e\u7684\u4e2d\u5fc3\u8ddd\u5b9a\u4f4d\u76ee\u6807\u5bf9\u8c61\u3002\u6211\u4eec\u7684\u5b9a\u4f4d\u6a21\u5757\u7684\u4e24\u9636\u6bb5\u8bbe\u8ba1\u5bf9\u6700\u7ec8\u6027\u80fd\u6709\u5f88\u5927\u5e2e\u52a9\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5982\u679c\u63d0\u4f9b\u5730\u9762\u5b9e\u51b5\u68c0\u6d4b\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u53ef\u4ee5\u53d6\u5f97\u66f4\u597d\u7684\u6548\u679c\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#54-generalization","title":"5.4. Generalization","text":"<p>\u4e3a\u4e86\u9a8c\u8bc1\u6211\u4eec\u65b9\u6cd5\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u6211\u4eec\u5728\u672a\u8fdb\u884c\u5fae\u8c03\u7684\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u5728\u672a\u89c1\u8fc7\u7684 PROX \u6570\u636e\u96c6 [22] \u4e0a\u8fd0\u884c\u6211\u4eec\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u5728\u56fe 6 \u4e2d\u8fdb\u884c\u4e86\u8bf4\u660e\u3002\u6709\u4e86\u57fa\u4e8e ChatGPT \u7684\u5b9a\u4f4d\u65b9\u6cd5\u548c\u57fa\u4e8e\u4f53\u79ef\u4f20\u611f\u5668\u7684\u8fd0\u52a8\u751f\u6210\u65b9\u6cd5\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u63a8\u5e7f\u5230\u5176\u4ed6\u6570\u636e\u96c6\u3002\u66f4\u591a\u7ed3\u679c\u8bf7\u53c2\u9605\u8865\u5145\u6750\u6599\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#6-discussion","title":"6. Discussion","text":"<p>\u6211\u4eec\u5df2\u7ecf\u8bc1\u660e\uff0c\u4e0e\u6240\u6709\u57fa\u7ebf\u65b9\u6cd5\u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u53ef\u4ee5\u5408\u6210\u8d28\u91cf\u66f4\u597d\u3001\u4e92\u52a8\u66f4\u7cbe\u786e\u7684\u52a8\u4f5c\u3002\u4e0d\u8fc7\uff0c\u53d7\u6570\u636e\u96c6\u7684\u9650\u5236\uff0c\u52a8\u4f5c\u7684\u6301\u7eed\u65f6\u95f4\u76f8\u5bf9\u8f83\u77ed\uff0860% \u7ea6\u4e3a 1-3s\uff09\uff0c\u800c\u4e14\u5927\u591a\u6570\u6587\u672c\u90fd\u662f\u6309\u7167\u6a21\u677f [1] \u5236\u4f5c\u7684\uff0c\u6ca1\u6709\u8be6\u7ec6\u63cf\u8ff0\u3002\u6211\u4eec\u4e5f\u627f\u8ba4 ChatGPT \u7684\u884c\u4e3a\u53d7\u63d0\u793a[36]\u7684\u5236\u7ea6\uff0c\u800c\u4e14 ChatGPT \u5076\u5c14\u4f1a\u72af\u9519\u3002\u672a\u6765\u5de5\u4f5c\u7684\u4e00\u4e2a\u6f5c\u5728\u65b9\u5411\u662f\u63a2\u7d22 ChatGPT \u7684\u81ea\u52a8\u66f4\u6b63\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u53ea\u5904\u7406\u4e86\u9759\u6001\u573a\u666f\uff0c\u56e0\u6b64\u6709\u5174\u8da3\u5c06\u6211\u4eec\u7684\u65b9\u6cd5\u6269\u5c55\u5230\u4e0e\u52a8\u6001\u5143\u7d20\u7684\u4ea4\u4e92\uff0c\u4f8b\u5982\u642c\u8fd0\u4efb\u52a1\u4e2d\u7684\u79fb\u52a8\u7269\u4f53\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Generating%20Human%20Motion%20in%203D%20Scenes%20from%20Text%20Descriptions/#7-conclusion","title":"7. Conclusion","text":"<p>\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u4e00\u79cd\u4ece\u573a\u666f\u4e2d\u7684\u6587\u672c\u751f\u6210\u8fd0\u52a8\u7684\u65b0\u65b9\u6cd5\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u5177\u6709\u6311\u6218\u6027\u7684\u95ee\u9898\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u5206\u4e24\u6b65\u8d70\u7684\u65b9\u6cd5\u3002\u7b2c\u4e00\u6b65\u6d89\u53ca\u4e09\u7ef4\u89c6\u89c9\u57fa\u7840\uff0c\u5373\u8bc6\u522b\u573a\u666f\u4e2d\u7684\u7269\u4f53\u3002\u7b2c\u4e8c\u6b65\uff0c\u9488\u5bf9\u76ee\u6807\u5bf9\u8c61\uff0c\u6211\u4eec\u5efa\u7acb\u4e86\u4e00\u79cd\u57fa\u4e8e\u6269\u6563\u7684\u8fd0\u52a8\u751f\u6210\u65b9\u6cd5\u3002\u4e0e\u73b0\u6709\u65b9\u6cd5\u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u65b9\u6cd5\u5177\u6709\u591a\u9879\u4f18\u52bf\uff0c\u5305\u62ec\u63d0\u9ad8\u4e86\u4e09\u7ef4\u89c6\u89c9\u5b9a\u4f4d\u7cbe\u5ea6\u548c\u8fd0\u52a8\u8d28\u91cf\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/","title":"Human Motion Generation: A Survey","text":"<p>\u6458\u8981--\u4eba\u4f53\u8fd0\u52a8\u751f\u6210\u65e8\u5728\u751f\u6210\u81ea\u7136\u7684\u4eba\u4f53\u59ff\u52bf\u5e8f\u5217\uff0c\u5728\u73b0\u5b9e\u4e16\u754c\u7684\u5e94\u7528\u4e2d\u663e\u793a\u51fa\u5de8\u5927\u7684\u6f5c\u529b\u3002\u8fd1\u6765\uff0c\u8fd0\u52a8\u6570\u636e\u91c7\u96c6\u6280\u672f\u548c\u751f\u6210\u65b9\u6cd5\u53d6\u5f97\u4e86\u957f\u8db3\u8fdb\u6b65\uff0c\u4e3a\u4eba\u7c7b\u8fd0\u52a8\u751f\u6210\u9886\u57df\u65e5\u76ca\u589e\u957f\u7684\u5174\u8da3\u5960\u5b9a\u4e86\u57fa\u7840\u3002\u8be5\u9886\u57df\u7684\u5927\u90e8\u5206\u7814\u7a76\u90fd\u96c6\u4e2d\u5728\u6839\u636e\u6761\u4ef6\u4fe1\u53f7\uff08\u5982\u6587\u672c\u3001\u97f3\u9891\u548c\u573a\u666f\u80cc\u666f\uff09\u751f\u6210\u4eba\u4f53\u8fd0\u52a8\u3002\u867d\u7136\u8fd1\u5e74\u6765\u53d6\u5f97\u4e86\u91cd\u5927\u8fdb\u5c55\uff0c\u4f46\u7531\u4e8e\u4eba\u4f53\u8fd0\u52a8\u7684\u590d\u6742\u6027\u53ca\u5176\u4e0e\u6761\u4ef6\u4fe1\u53f7\u4e4b\u95f4\u7684\u9690\u542b\u5173\u7cfb\uff0c\u8fd9\u9879\u4efb\u52a1\u4ecd\u9762\u4e34\u6311\u6218\u3002\u5728\u672c\u8c03\u67e5\u62a5\u544a\u4e2d\uff0c\u6211\u4eec\u5bf9\u4eba\u7c7b\u8fd0\u52a8\u751f\u6210\u8fdb\u884c\u4e86\u5168\u9762\u7684\u6587\u732e\u7efc\u8ff0\uff0c\u636e\u6211\u4eec\u6240\u77e5\uff0c\u8fd9\u5728\u8be5\u9886\u57df\u5c1a\u5c5e\u9996\u6b21\u3002\u6211\u4eec\u9996\u5148\u4ecb\u7ecd\u4e86\u4eba\u4f53\u8fd0\u52a8\u548c\u751f\u6210\u6a21\u578b\u7684\u80cc\u666f\uff0c\u7136\u540e\u7814\u7a76\u4e86\u4e09\u4e2a\u4e3b\u6d41\u5b50\u4efb\u52a1\u7684\u4ee3\u8868\u6027\u65b9\u6cd5\uff1a\u6587\u672c\u6761\u4ef6\u3001\u97f3\u9891\u6761\u4ef6\u548c\u573a\u666f\u6761\u4ef6\u4eba\u4f53\u8fd0\u52a8\u751f\u6210\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u6982\u8ff0\u4e86\u5e38\u89c1\u7684\u6570\u636e\u96c6\u548c\u8bc4\u4f30\u6307\u6807\u3002\u6700\u540e\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u5c1a\u672a\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u5e76\u6982\u8ff0\u4e86\u6f5c\u5728\u7684\u672a\u6765\u7814\u7a76\u65b9\u5411\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u4efd\u8c03\u67e5\u62a5\u544a\u80fd\u4e3a\u793e\u4f1a\u5404\u754c\u63d0\u4f9b\u5bf9\u8fd9\u4e00\u5feb\u901f\u53d1\u5c55\u9886\u57df\u7684\u5168\u9762\u4e86\u89e3\uff0c\u5e76\u542f\u53d1\u65b0\u7684\u60f3\u6cd5\uff0c\u4ee5\u89e3\u51b3\u60ac\u800c\u672a\u51b3\u7684\u6311\u6218\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#introduction","title":"INTRODUCTION","text":"<p>\u4eba\u7c7b\u6839\u636e\u81ea\u5df1\u7684\u610f\u56fe\u548c\u73af\u5883\u523a\u6fc0\u6765\u8ba1\u5212\u548c\u6267\u884c\u8eab\u4f53\u52a8\u4f5c[1], [2]\u3002\u4f5c\u4e3a\u4eba\u5de5\u667a\u80fd\u7684\u4e00\u4e2a\u57fa\u672c\u76ee\u6807\uff0c\u751f\u6210\u7c7b\u4f3c\u4eba\u7c7b\u7684\u8fd0\u52a8\u6a21\u5f0f\u8d8a\u6765\u8d8a\u53d7\u5230\u5404\u4e2a\u7814\u7a76\u9886\u57df\u7684\u5173\u6ce8\uff0c\u5305\u62ec\u8ba1\u7b97\u673a\u89c6\u89c9 [3]\u3001[4]\u3001\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66 [5]\u3001[6]\u3001\u591a\u5a92\u4f53 [7]\u3001[8]\u3001\u673a\u5668\u4eba\u5b66 [9]\u3001[10] \u548c\u4eba\u673a\u4ea4\u4e92 [11]\u3001[12]\u3002\u4eba\u7c7b\u52a8\u4f5c\u751f\u6210\u7684\u76ee\u6807\u662f\u751f\u6210\u81ea\u7136\u3001\u903c\u771f\u548c\u591a\u6837\u5316\u7684\u4eba\u7c7b\u52a8\u4f5c\uff0c\u8fd9\u4e9b\u52a8\u4f5c\u53ef\u7528\u4e8e\u7535\u5f71\u5236\u4f5c\u3001\u89c6\u9891\u6e38\u620f\u3001AR/VR\u3001\u4eba\u673a\u4ea4\u4e92\u548c\u6570\u5b57\u4eba\u7c7b\u7b49\u5e7f\u6cdb\u5e94\u7528\u3002</p> <p>\u968f\u7740\u6df1\u5ea6\u5b66\u4e60[17]\u7684\u5174\u8d77\uff0c\u8fd1\u5e74\u6765\u5404\u79cd\u751f\u6210\u65b9\u6cd5\u5f97\u5230\u4e86\u5feb\u901f\u53d1\u5c55\uff0c\u4f8b\u5982\u81ea\u56de\u5f52\u6a21\u578b[18]\u3001\u53d8\u5f02\u81ea\u52a8\u7f16\u7801\u5668\uff08VAE\uff09[19]\u3001\u5f52\u4e00\u5316\u6d41[20]\u3001\u751f\u6210\u5bf9\u6297\u7f51\u7edc\uff08GAN\uff09[21]\u548c\u53bb\u566a\u6269\u6563\u6982\u7387\u6a21\u578b\uff08DDPM\uff09[22]\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5728\u4e0d\u540c\u9886\u57df\u90fd\u53d6\u5f97\u4e86\u5de8\u5927\u6210\u529f\uff0c\u5305\u62ec\u6587\u672c[23]\u3001[24]\u3001\u56fe\u50cf[25]\u3001[26]\u3001[27]\u3001\u89c6\u9891[28]\u3001[29]\u3001[30]\u548c\u4e09\u7ef4\u7269\u4f53[31]\u3001[32]\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u4eba\u4f53\u5efa\u6a21\u6280\u672f\u7684\u663e\u8457\u8fdb\u6b65 [33]\u3001[34]\u3001[35] \u4f7f\u5f97\u4ece\u89c6\u9891 [36]\u3001[37]\u3001[38] \u4e2d\u63d0\u53d6\u4eba\u4f53\u8fd0\u52a8\u6570\u636e\u548c\u6784\u5efa\u5927\u89c4\u6a21\u4eba\u4f53\u8fd0\u52a8\u6570\u636e\u96c6\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613 [39]\u3001[40]\u3001[41]\u3001[42]\u3002\u56e0\u6b64\uff0c\u5728\u8fc7\u53bb\u51e0\u5e74\u91cc\uff0c\u4eba\u4eec\u5bf9\u6570\u636e\u9a71\u52a8\u7684\u4eba\u4f53\u8fd0\u52a8\u751f\u6210\u8d8a\u6765\u8d8a\u611f\u5174\u8da3\u3002</p> <p>\u7136\u800c\uff0c\u4eba\u7c7b\u8fd0\u52a8\u751f\u6210\u662f\u4e00\u4e2a\u590d\u6742\u7684\u6311\u6218\uff0c\u5b83\u4e0d\u4ec5\u4ec5\u662f\u5c06\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u5e94\u7528\u4e8e\u4eba\u7c7b\u8fd0\u52a8\u6570\u636e\u96c6\u3002\u9996\u5148\uff0c\u4eba\u7c7b\u8fd0\u52a8\u5177\u6709\u9ad8\u5ea6\u7684\u975e\u7ebf\u6027\u548c\u8854\u63a5\u6027\uff0c\u53d7\u5230\u7269\u7406\u548c\u751f\u7269\u529b\u5b66\u7684\u9650\u5236\u3002\u6b64\u5916\uff0c\u4eba\u7c7b\u5927\u8111\u62e5\u6709\u611f\u77e5\u751f\u7269\u8fd0\u52a8\u7684\u4e13\u95e8\u795e\u7ecf\u673a\u5236[2], [43]\uff0c\u5bf9\u5373\u4f7f\u662f\u8f7b\u5fae\u4e0d\u81ea\u7136\u7684\u8fd0\u52a8\u5b66\u4e5f\u5f88\u654f\u611f[44], [45]\u3002\u56e0\u6b64\uff0c\u751f\u6210\u7684\u8fd0\u52a8\u5728\u81ea\u7136\u5ea6\u3001\u5e73\u6ed1\u5ea6\u548c\u53ef\u4fe1\u5ea6\u65b9\u9762\u90fd\u9700\u8981\u8f83\u9ad8\u7684\u89c6\u89c9\u8d28\u91cf\u3002\u5176\u6b21\uff0c\u5982\u56fe 1 \u6240\u793a\uff0c\u5bf9\u4eba\u4f53\u8fd0\u52a8\u751f\u6210\u7684\u8981\u6c42\u901a\u5e38\u5305\u62ec\u4f5c\u4e3a\u6761\u4ef6\u4fe1\u53f7\u7684\u4e0a\u4e0b\u6587\uff0c\u5982\u6587\u5b57\u63cf\u8ff0\u3001\u80cc\u666f\u97f3\u9891\u6216\u5468\u56f4\u73af\u5883\u3002\u751f\u6210\u7684\u52a8\u4f5c\u4e0d\u4ec5\u672c\u8eab\u8981\u53ef\u4fe1\uff0c\u8fd8\u8981\u4e0e\u6761\u4ef6\u4fe1\u53f7\u76f8\u534f\u8c03\u3002\u7b2c\u4e09\uff0c\u4eba\u7c7b\u52a8\u4f5c\u662f\u4e00\u79cd\u91cd\u8981\u7684\u975e\u8bed\u8a00\u4ea4\u6d41\u5a92\u4ecb\uff0c\u53cd\u6620\u4e86\u5404\u79cd\u6f5c\u5728\u56e0\u7d20\uff0c\u5982\u76ee\u6807\u3001\u4e2a\u4eba\u98ce\u683c\u3001\u793e\u4f1a\u89c4\u8303\u548c\u6587\u5316\u8868\u8fbe[46]\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u52a8\u4f5c\u751f\u6210\u6a21\u578b\u5e94\u8be5\u5b66\u4f1a\u6355\u6349\u5fae\u5999\u7684\u53d8\u5316\u4ee5\u53ca\u4e0e\u6761\u4ef6\u4fe1\u53f7\u4e4b\u95f4\u7684\u8bed\u4e49\u8054\u7cfb\u3002</p> <p>\u9274\u4e8e\u8be5\u9886\u57df\u7684\u5feb\u901f\u53d1\u5c55\u548c\u65b0\u51fa\u73b0\u7684\u6311\u6218\uff0c\u6211\u4eec\u5bf9\u8be5\u9886\u57df\u8fdb\u884c\u4e86\u4e00\u6b21\u5168\u9762\u8c03\u67e5\uff0c\u4ee5\u5e2e\u52a9\u4e1a\u754c\u8ddf\u8e2a\u5176\u8fdb\u5c55\u60c5\u51b5\u3002\u5728\u56fe 2 \u4e2d\uff0c\u6211\u4eec\u603b\u7ed3\u4e86\u8fd1\u5e74\u6765\u4eba\u7c7b\u8fd0\u52a8\u751f\u6210\u65b9\u6cd5\u7684\u53d1\u5c55\u3002\u8c03\u67e5\u62a5\u544a\u7684\u5176\u4f59\u90e8\u5206\u5b89\u6392\u5982\u4e0b\u3002\u5728\u7b2c 2 \u8282\u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u672c\u8c03\u67e5\u7684\u8303\u56f4\u3002\u7b2c 3 \u8282\u4ecb\u7ecd\u4efb\u52a1\u7684\u57fa\u672c\u539f\u7406\uff0c\u5305\u62ec\u4eba\u4f53\u8fd0\u52a8\u7684\u8868\u5f81\u3001\u8fd0\u52a8\u6570\u636e\u91c7\u96c6\u6280\u672f\u548c\u5404\u79cd\u751f\u6210\u65b9\u6cd5\u3002\u5728\u7b2c 4\u30015 \u548c 6 \u8282\u4e2d\uff0c\u6211\u4eec\u5206\u522b\u603b\u7ed3\u4e86\u57fa\u4e8e\u4e0d\u540c\u6761\u4ef6\u4fe1\u53f7\uff08\u5305\u62ec\u6587\u672c\u3001\u97f3\u9891\u548c\u573a\u666f\uff09\u7684\u73b0\u6709\u4eba\u4f53\u8fd0\u52a8\u751f\u6210\u65b9\u6cd5\u3002\u7b2c 7 \u8282\u4ecb\u7ecd\u4e86\u5e38\u7528\u7684\u6570\u636e\u96c6\u53ca\u5176\u5c5e\u6027\u3002\u7b2c 8 \u8282\u4ece\u4e0d\u540c\u89d2\u5ea6\u603b\u7ed3\u4e86\u8bc4\u4f30\u6307\u6807\u3002\u6700\u540e\uff0c\u6211\u4eec\u5728\u7b2c 9 \u8282\u4e2d\u5f97\u51fa\u7ed3\u8bba\uff0c\u5e76\u63d0\u4f9b\u4e86\u8be5\u9886\u57df\u7684\u4e00\u4e9b\u672a\u6765\u53d1\u5c55\u65b9\u5411\u3002</p> <p></p> <p>\u56fe 1\uff1a\u5178\u578b\u4eba\u4f53\u8fd0\u52a8\u751f\u6210\u65b9\u6cd5\u6982\u89c8\u3002\u793a\u4f8b\u56fe\u7247\u6539\u7f16\u81ea [13]\u3001[14]\u3001[15]\u3001[16]\u3002</p> <p></p> <p>\u56fe 2\uff1a\u4e0d\u540c\u6761\u4ef6\u4e0b\u4eba\u4f53\u8fd0\u52a8\u751f\u6210\u65b9\u6cd5\u7684\u6700\u65b0\u8fdb\u5c55\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#scope","title":"SCOPE","text":"<p>\u672c\u7814\u7a76\u4e3b\u8981\u5173\u6ce8\u6839\u636e\u7ed9\u5b9a\u6761\u4ef6\u4fe1\u53f7\u751f\u6210\u4eba\u4f53\u8fd0\u52a8\u3002\u6211\u4eec\u4e3b\u8981\u8ba8\u8bba\u6587\u672c\u3001\u97f3\u9891\u548c\u573a\u666f\u6761\u4ef6\u3002\u4e00\u4e9b\u7814\u7a76\u8fd8\u63d0\u51fa\u4e86\u57fa\u4e8e\u5176\u4ed6\u6761\u4ef6\u751f\u6210\u4eba\u4f53\u8fd0\u52a8\u7684\u65b9\u6cd5\uff08\u5982\u4ed6\u4eba\u7684\u8fd0\u52a8 [47]\uff09\u3002\u5173\u4e8e\u751f\u6210\u76ee\u6807\uff0c\u6211\u4eec\u7eb3\u5165\u4e86\u4e0d\u540c\u7c7b\u578b\u7684\u4eba\u4f53\u8fd0\u52a8\u8868\u793a\uff0c\u5982 2D/3D \u4eba\u4f53\u5173\u952e\u70b9\u5e8f\u5217\u3001\u5173\u8282\u65cb\u8f6c\u548c\u53c2\u6570\u5316\u4eba\u4f53\u6a21\u578b [33], [34]\u3002\u6211\u4eec\u4e0d\u6d89\u53ca\u4eba\u4f53\u8fd0\u52a8\u5b8c\u6210\uff08\u5982\u8fd0\u52a8\u9884\u6d4b\u3001\u8fd0\u52a8\u63d2\u503c\uff09\u6216\u4eba\u4f53\u8fd0\u52a8\u7f16\u8f91\uff08\u5982\u8fd0\u52a8\u91cd\u5b9a\u4f4d\u3001\u8fd0\u52a8\u98ce\u683c\u8f6c\u79fb\uff09\u7684\u65b9\u6cd5\u3002\u6709\u5173\u8fd9\u4e9b\u65b9\u6cd5\u7684\u8bc4\u8bba\uff0c\u6211\u4eec\u5efa\u8bae\u8bfb\u8005\u53c2\u9605 [48]\u3001[49]\u3001[50]\u3001[51]\u3002\u6b64\u5916\uff0c\u6211\u4eec\u4e0d\u8ba8\u8bba\u5229\u7528\u7269\u7406\u6a21\u62df\u73af\u5883\u751f\u6210\u4eba\u4f53\u8fd0\u52a8\u7684\u4f5c\u54c1\uff08\u5982\u89d2\u8272\u63a7\u5236\u3001\u8fd0\u52a8\uff09\uff1b\u6709\u5173\u6b64\u7c7b\u65b9\u6cd5\u7684\u6458\u8981\uff0c\u8bf7\u53c2\u9605 [52]\u3002\u672c\u8c03\u67e5\u62a5\u544a\u662f\u5bf9\u73b0\u6709\u8c03\u67e5\u62a5\u544a\u7684\u8865\u5145\uff0c\u73b0\u6709\u8c03\u67e5\u62a5\u544a\u4e3b\u8981\u5173\u6ce8\u4eba\u4f53\u59ff\u52bf\u4f30\u8ba1 [53]\u3001[54]\u3001\u8fd0\u52a8\u6355\u6349 [55]\u3001[56] \u548c\u6df1\u5ea6\u751f\u6210\u6a21\u578b [57]\u3001[58]\u3001[59]\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#preliminaries","title":"PRELIMINARIES","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#motion-data","title":"Motion Data","text":"<p>\u6211\u4eec\u9996\u5148\u4ecb\u7ecd\u4eba\u4f53\u8fd0\u52a8\u6570\u636e\u8868\u793a\uff0c\u7136\u540e\u8ba8\u8bba\u5404\u79cd\u4eba\u4f53\u8fd0\u52a8\u6570\u636e\u6536\u96c6\u6280\u672f\u53ca\u5176\u7279\u70b9\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#motion-data-representation","title":"Motion Data Representation","text":"<p>\u4eba\u4f53\u8fd0\u52a8\u6570\u636e\u53ef\u4ee5\u901a\u8fc7\u65f6\u95f4\u7ef4\u5ea6\u4e0a\u7684\u4eba\u4f53\u59ff\u52bf\u5e8f\u5217\u6765\u6709\u6548\u8868\u793a\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u5c06\u6570\u636e\u8868\u793a\u5206\u4e3a\u57fa\u4e8e\u5173\u952e\u70b9\u7684\u6570\u636e\u8868\u793a\u548c\u57fa\u4e8e\u65cb\u8f6c\u7684\u6570\u636e\u8868\u793a\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e24\u79cd\u8868\u793a\u6cd5\u4e4b\u95f4\u53ef\u4ee5\u8fdb\u884c\u8f6c\u6362\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6b63\u5411\u8fd0\u52a8\u5b66\uff08FK\uff09\u5c06\u5173\u8282\u65cb\u8f6c\u8f6c\u6362\u4e3a\u5173\u952e\u70b9\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u53cd\u5411\u8fd0\u52a8\u5b66\uff08IK\uff09\u5c06\u5173\u952e\u70b9\u8f6c\u6362\u4e3a\u5173\u8282\u65cb\u8f6c\u3002</p> <p>\u57fa\u4e8e\u5173\u952e\u70b9\u3002\u4eba\u4f53\u7531\u4e00\u7ec4\u5173\u952e\u70b9\u8868\u793a\uff0c\u8fd9\u4e9b\u5173\u952e\u70b9\u662f\u4eba\u4f53\u4e0a\u7684\u7279\u5b9a\u70b9\uff0c\u4e0e\u89e3\u5256\u5730\u6807\uff08\u5982\u5173\u8282\u6216\u5176\u4ed6\u91cd\u8981\u4f4d\u7f6e\uff09\u76f8\u5bf9\u5e94\u3002\u5982\u56fe 3 (a) (b) \u6240\u793a\uff0c\u6bcf\u4e2a\u5173\u952e\u70b9\u90fd\u7531\u5176\u5728\u50cf\u7d20\u6216\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u7684 2D/3D \u5750\u6807\u8868\u793a\u3002\u7136\u540e\uff0c\u8fd0\u52a8\u6570\u636e\u5c31\u88ab\u8868\u793a\u4e3a\u968f\u65f6\u95f4\u53d8\u5316\u7684\u5173\u952e\u70b9\u914d\u7f6e\u5e8f\u5217\u3002\u57fa\u4e8e\u5173\u952e\u70b9\u7684\u8868\u793a\u6cd5\u53ef\u76f4\u63a5\u4ece\u8fd0\u52a8\u6355\u6349\u7cfb\u7edf\u4e2d\u63d0\u53d6\uff0c\u5e76\u5177\u6709\u5f88\u597d\u7684\u53ef\u89e3\u91ca\u6027\u3002\u7136\u800c\uff0c\u4e3a\u4e86\u5c06\u57fa\u4e8e\u5173\u952e\u70b9\u7684\u6570\u636e\u7528\u4e8e\u52a8\u753b\u6216\u673a\u5668\u4eba\u6280\u672f\uff0c\u901a\u5e38\u9700\u8981\u89e3\u51b3\u9006\u8fd0\u52a8\u5b66\uff08IK\uff09\u95ee\u9898\uff0c\u5e76\u5c06\u5173\u952e\u70b9\u8f6c\u6362\u4e3a\u65cb\u8f6c\u3002\u6700\u8fd1\uff0c\u4e00\u4e9b\u7814\u7a76 [60]\u3001[61]\u3001[62] \u63d0\u51fa\u7528\u4eba\u4f53\u8868\u9762\u7684\u66f4\u591a\u5730\u6807\uff08\u5373\u4eba\u4f53\u6807\u8bb0\uff09\u6765\u8868\u793a\u4eba\u4f53\u59ff\u52bf\uff0c\u5982\u56fe 3 \u00a9 \u6240\u793a\u3002\u4e0e\u4f20\u7edf\u7684\u9aa8\u67b6\u5173\u952e\u70b9\u76f8\u6bd4\uff0c\u8eab\u4f53\u6807\u8bb0\u80fd\u63d0\u4f9b\u66f4\u5168\u9762\u7684\u8eab\u4f53\u5f62\u72b6\u548c\u80a2\u4f53\u626d\u66f2\u4fe1\u606f\u3002</p> <p>\u57fa\u4e8e\u65cb\u8f6c\u3002\u4eba\u4f53\u59ff\u6001\u4e5f\u53ef\u4ee5\u7528\u5173\u8282\u89d2\u5ea6\u6765\u8868\u793a\uff0c\u5373\u5728\u5206\u5c42\u7ed3\u6784\u4e2d\uff0c\u8eab\u4f53\u90e8\u4f4d\u6216\u8282\u6bb5\u76f8\u5bf9\u4e8e\u5176\u4e0a\u4e00\u7ea7\u7684\u65cb\u8f6c\u89d2\u5ea6\u3002\u5927\u591a\u6570\u7814\u7a76\u90fd\u8003\u8651\u4e86 SO(3) \u4e2d\u7684\u4e09\u7ef4\u5173\u8282\u65cb\u8f6c\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u683c\u5f0f\uff08\u5982\u6b27\u62c9\u89d2\u3001\u8f74\u89d2\u548c\u56db\u5143\u6570\uff09\u5bf9\u65cb\u8f6c\u8fdb\u884c\u53c2\u6570\u5316\u3002\u5728\u5173\u8282\u89d2\u5ea6\u7684\u57fa\u7840\u4e0a\uff0c\u4e00\u4e9b\u7814\u7a76[33]\u548c[34]\u4f7f\u7528\u7edf\u8ba1\u7f51\u683c\u6a21\u578b\u5bf9\u4eba\u4f53\u8fdb\u884c\u5efa\u6a21\uff0c\u8fdb\u4e00\u6b65\u6355\u6349\u8eab\u4f53\u7684\u5f62\u72b6\u548c\u8fd0\u52a8\u8fc7\u7a0b\u4e2d\u53d1\u751f\u7684\u53d8\u5f62\u3002\u5e7f\u6cdb\u4f7f\u7528\u7684\u7edf\u8ba1\u4eba\u4f53\u6a21\u578b\u662f\u5e26\u76ae\u80a4\u7684\u591a\u4eba\u7ebf\u6027\u6a21\u578b\uff08SMPL\uff09[33]\u3002</p> <p>\u5982\u56fe 3\uff08d\uff09\u6240\u793a\uff0cSMPL \u6a21\u578b\u7531\u4e00\u7ec4\u59ff\u52bf\u548c\u5f62\u72b6\u53c2\u6570\u6784\u6210\uff0c\u53ef\u7528\u4e8e\u751f\u6210\u7279\u5b9a\u59ff\u52bf\u548c\u5f62\u72b6\u7684\u4eba\u4f53\u4e09\u7ef4\u7f51\u683c\u3002\u6bcf\u4e2a\u5173\u8282\u7684\u59ff\u52bf\u53c2\u6570\u03b8\u2208RK\u00d73 \u662f\u7531 K = 24 \u4e2a\u5173\u8282\u7684\u6807\u51c6\u9aa8\u9abc\u8fd0\u52a8\u5b66\u6811\u4e2d\u76f8\u5bf9\u4e8e\u5176\u7236\u5173\u8282\u7684\u76f8\u5bf9\u65cb\u8f6c\u6765\u5b9a\u4e49\u7684\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u6839\u65b9\u5411\u4f5c\u4e3a\u6839\u5173\u8282\u59ff\u6001\u53c2\u6570\u7684\u4e00\u90e8\u5206\u3002\u5f62\u72b6\u53c2\u6570 \u03b2\u2208 R10 \u8868\u793a\u8eab\u4f53\u5f62\u72b6\u914d\u7f6e\uff0c\u5982\u9ad8\u5ea6\u3002\u7ed9\u5b9a\u59ff\u52bf\u548c\u5f62\u72b6\u53c2\u6570\u540e\uff0c\u6a21\u578b\u4f1a\u53d1\u751f\u76f8\u5e94\u7684\u53d8\u5f62\uff0c\u5e76\u751f\u6210\u7531 N = 6890 \u4e2a\u9876\u70b9\u7ec4\u6210\u7684\u4e09\u89d2\u7f51\u683c M(\u03b8, \u03b2) \u2208 RN\u00d73\u3002\u53d8\u5f62\u8fc7\u7a0b M(\u03b8\uff0c\u03b2) \u76f8\u5bf9\u4e8e\u59ff\u6001 \u03b8 \u548c\u5f62\u72b6 \u03b2 \u53c2\u6570\u662f\u53ef\u5fae\u7684\u3002\u83b7\u5f97\u6700\u7ec8\u7f51\u683c\u540e\uff0c\u53ef\u901a\u8fc7\u9884\u8bad\u7ec3\u7684\u7ebf\u6027\u56de\u5f52\u5668\u4ece\u9876\u70b9\u6620\u5c04\u7a00\u758f\u7684\u4e09\u7ef4\u5173\u952e\u70b9\u3002\u5176\u4ed6\u6a21\u578b\uff0c\u5982 SMPL-X [34] \u6269\u5c55\u4e86 SMPL [33] \u6a21\u578b\u5e76\u6784\u5efa\u4e86\u4e00\u4e2a\u7efc\u5408\u6a21\u578b\uff0c\u5176\u4e2d\u8eab\u4f53\u3001\u9762\u90e8\u548c\u624b\u90e8\u88ab\u8054\u5408\u5efa\u6a21\u3002\u9664\u4e86\u57fa\u4e8e SMPL \u7684\u7ebf\u6027\u6a21\u578b\u5916\uff0c\u4eba\u4eec\u8fd8\u63a2\u7d22\u4e86\u5176\u4ed6\u5efa\u6a21\u65b9\u6cd5\uff0c\u5982 GHUM [63] \u548c STAR [64]\u3002\u4e3a\u7b80\u660e\u8d77\u89c1\uff0c\u6211\u4eec\u5728\u4e0b\u6587\u8868\u683c\u4e2d\u4f7f\u7528 \"Rot. \"\u8fd9\u4e00\u901f\u8bb0\u672f\u8bed\u6765\u6db5\u76d6\u57fa\u4e8e\u5173\u8282\u7684\u4e09\u7ef4\u65cb\u8f6c\u53ca\u5176\u5728\u7edf\u8ba1\u4eba\u4f53\u6a21\u578b\uff08\u5982 SMPL\uff09\u4e2d\u7684\u5e94\u7528\uff0c\u800c\u4e0d\u5bf9\u4e24\u8005\u8fdb\u884c\u590d\u6742\u7684\u533a\u5206\u3002</p> <p></p> <p>\u56fe 3\uff1a\u5177\u6709\u76f8\u540c\u59ff\u52bf\u7684\u5178\u578b\u4eba\u4f53\u59ff\u6001\u548c\u5f62\u72b6\u8868\u793a\uff0c\u5206\u522b\u4e3a (a) \u4e8c\u7ef4\u5173\u952e\u70b9\u3001(b) \u4e09\u7ef4\u5173\u952e\u70b9\u3001\u00a9 \u4e09\u7ef4\u6807\u8bb0\u5173\u952e\u70b9\u548c (d) \u57fa\u4e8e\u65cb\u8f6c\u7684\u6a21\u578b\u3002</p> <p></p> <p>\u56fe 4\uff1a\u4eba\u4f53\u8fd0\u52a8\u6570\u636e\u91c7\u96c6\u65b9\u6cd5\u3002(a) \u57fa\u4e8e\u6807\u8bb0\u7684\u8fd0\u52a8\u6355\u6349\u8bbe\u7f6e\u793a\u4f8b\uff0c\u5176\u4e2d\uff08\u5de6\uff09\u5149\u5b66\u6807\u8bb0[65]\u6216\uff08\u53f3\uff09IMU[66]\u9644\u7740\u5728\u88ab\u6444\u4f53\u7684\u4f53\u8868\u3002(b) \u65e0\u6807\u8bb0\u591a\u89c6\u89d2\u8fd0\u52a8\u6355\u6349\u7cfb\u7edf\u793a\u4f8b[41]\u3002\u00a9 \u4f2a\u6807\u8bb0\u7ba1\u9053\u5305\u62ec\u4f7f\u7528\u59ff\u52bf\u6216\u7f51\u683c\u4f30\u8ba1\u5668\u751f\u6210\u4f2a\u6807\u8bb0[67]\u3002(d) \u4f7f\u7528 MikuMikuDance (MMD) \u8d44\u6e90\u8fdb\u884c\u624b\u52a8\u91c7\u96c6\u7684\u754c\u9762\u793a\u4f8b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#motion-data-collection","title":"Motion Data Collection","text":"<p>\u6536\u96c6\u4eba\u4f53\u8fd0\u52a8\u6570\u636e\u7684\u65b9\u6cd5\u4e3b\u8981\u6709\u56db\u79cd\uff1a(i) \u57fa\u4e8e\u6807\u8bb0\u7684\u8fd0\u52a8\u6355\u6349\uff1b(ii) \u65e0\u6807\u8bb0\u8fd0\u52a8\u6355\u6349\uff1b(iii) \u4f2a\u6807\u8bb0\uff1b(iv) \u4eba\u5de5\u6807\u6ce8\u3002</p> <p>\u57fa\u4e8e\u6807\u8bb0\u7684\u8fd0\u52a8\u6355\u6349\u662f\u6307\u5728\u4e3b\u4f53\u8eab\u4f53\u7684\u7279\u5b9a\u4f4d\u7f6e\u653e\u7f6e\u5c0f\u578b\u53cd\u5c04\u6807\u8bb0\u6216\u60ef\u6027\u6d4b\u91cf\u5355\u5143\uff08IMU\uff09\uff0c\u7136\u540e\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u8ddf\u8e2a\u8fd9\u4e9b\u6807\u8bb0\u7684\u79fb\u52a8\u3002\u793a\u610f\u56fe\u89c1\u56fe 4 (a)\u3002\u7136\u540e\uff0c\u5728 MoSh[68] \u7684\u5e2e\u52a9\u4e0b\uff0c\u901a\u8fc7\u5e94\u7528\u524d\u5411\u8fd0\u52a8\u5b66[39]\u6216\u53c2\u6570\u5316\u4eba\u4f53\u7f51\u683c\uff08\u5982 SMPL[33] \uff09\uff0c\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u6570\u636e\u83b7\u5f97\u4e09\u7ef4\u5173\u952e\u70b9\u3002\u5149\u5b66\u6807\u8bb0\u63d0\u4f9b\u7684\u6570\u636e\u6bd4 IMU \u66f4\u7cbe\u786e\uff0c\u4f46\u4fbf\u643a\u6027\u8f83\u5dee\uff0c\u901a\u5e38\u7528\u4e8e\u5ba4\u5185\u73af\u5883\uff0c\u800c IMU \u53ef\u7528\u4e8e\u5ba4\u5916\u73af\u5883\u3002</p> <p>\u5982\u56fe 4 (b) \u6240\u793a\uff0c\u65e0\u6807\u8bb0\u8fd0\u52a8\u6355\u6349\u89e3\u51b3\u65b9\u6848\u65e0\u9700\u4e00\u4e2a\u6216\u591a\u4e2a\u6444\u50cf\u5934\u7684\u6807\u8bb0\u5373\u53ef\u8ddf\u8e2a\u62cd\u6444\u5bf9\u8c61\u7684\u8eab\u4f53\u8fd0\u52a8\uff0c\u5e76\u4f7f\u7528\u8ba1\u7b97\u673a\u89c6\u89c9\u7b97\u6cd5\uff08\u5982[69]\u3001[70]\u3001[71]\uff09\u5229\u7528\u591a\u89c6\u89d2\u51e0\u4f55\u56fe\u5f62\u83b7\u53d6\u4e09\u7ef4\u8fd0\u52a8\u3002\u5728\u6355\u6349\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u8bbe\u7f6e\u591a\u4e2a RGB \u6216 RGB-D \u6444\u50cf\u673a\u5e76\u8fdb\u884c\u540c\u6b65\u3002\u4e0e\u57fa\u4e8e\u6807\u8bb0\u7684\u8fd0\u52a8\u6355\u6349\u76f8\u6bd4\uff0c\u8fd9\u79cd\u89e3\u51b3\u65b9\u6848\u7684\u7cbe\u786e\u5ea6\u8f83\u4f4e\uff0c\u4f46\u66f4\u52a0\u65b9\u4fbf\uff0c\u53ef\u7528\u4e8e\u66f4\u5e7f\u6cdb\u7684\u573a\u5408\u3002</p> <p>\u4f2a\u6807\u6ce8\u4eba\u4f53\u8fd0\u52a8\u4e3b\u8981\u7528\u4e8e\u91ce\u5916\u6355\u83b7\u7684\u5355\u76ee RGB \u56fe\u50cf\u6216\u89c6\u9891\u3002\u8fd9\u5305\u62ec\u4f7f\u7528\u73b0\u6709\u7684\u4eba\u4f53\u59ff\u6001\u4f30\u7b97\u5668\uff08\u5982 OpenPose [72] \u548c VideoPose3D [37]\uff09\u9884\u6d4b\u4e8c\u7ef4\u6216\u4e09\u7ef4\u4eba\u4f53\u5173\u952e\u70b9\uff0c\u6216\u5c06\u4eba\u4f53\u6a21\u578b\u4e0e\u56fe\u50cf\u8bc1\u636e\u8fdb\u884c\u62df\u5408\uff0c\u4ee5\u751f\u6210\u4f2a\u4e09\u7ef4\u7f51\u683c\u6807\u7b7e\uff0c\u5982\u4f7f\u7528 SMPLify-X [67]\u3002\u89c1\u56fe 4 \u00a9\u3002\u4e0d\u8fc7\uff0c\u4e0e\u52a8\u4f5c\u6355\u6349\u7cfb\u7edf\u76f8\u6bd4\uff0c\u4f2a\u6807\u7b7e\u5f80\u5f80\u8bef\u5dee\u66f4\u5927\u3002</p> <p>\u624b\u52a8\u6807\u6ce8\u662f\u6307\u4f7f\u7528\u52a8\u753b\u5f15\u64ce\u624b\u52a8\u8bbe\u8ba1\u4eba\u4f53\u52a8\u4f5c\uff0c\u901a\u5e38\u662f\u4f7f\u7528\u4e00\u4e2a\u719f\u7ec3\u7684\u7f8e\u5de5\u56e2\u961f\u3002\u56fe 4 (d) \u663e\u793a\u4e86 MikuMikuDance (MMD) \u7684\u5f15\u64ce\u754c\u9762\u793a\u4f8b\u3002\u867d\u7136\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5236\u4f5c\u9ad8\u8d28\u91cf\u7684\u52a8\u753b\uff0c\u4f46\u6210\u672c\u9ad8\u3001\u8017\u65f6\u957f\uff0c\u800c\u4e14\u65e0\u6cd5\u6269\u5c55\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#motion-generation-methods","title":"Motion Generation Methods","text":"<p>\u56fe 5\uff1a\u4e0d\u540c\u751f\u6210\u6a21\u578b\u6982\u89c8\u3002</p> <p></p> <p>\u6211\u4eec\u5c06\u4eba\u4f53\u8fd0\u52a8\u751f\u6210\u65b9\u6cd5\u5927\u81f4\u5206\u4e3a\u4e24\u7c7b\u3002\u7b2c\u4e00\u7c7b\u65b9\u6cd5\u57fa\u4e8e\u56de\u5f52\u6a21\u578b\uff0c\u5229\u7528\u8f93\u5165\u6761\u4ef6\u7f16\u7801\u7684\u7279\u5f81\u9884\u6d4b\u4eba\u4f53\u8fd0\u52a8\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5c5e\u4e8e\u76d1\u7763\u5b66\u4e60\u8303\u5f0f\uff0c\u65e8\u5728\u5efa\u7acb\u4ece\u8f93\u5165\u6761\u4ef6\u5230\u76ee\u6807\u8fd0\u52a8\u7684\u76f4\u63a5\u6620\u5c04\u3002\u53e6\u4e00\u7c7b\u65b9\u6cd5\u4ee5\u751f\u6210\u6a21\u578b\u4e3a\u57fa\u7840\u3002\u5b83\u4eec\u4fa7\u91cd\u4e8e\u4ee5\u65e0\u76d1\u7763\u7684\u65b9\u5f0f\u5bf9\u8fd0\u52a8\u7684\u57fa\u672c\u5206\u5e03\uff08\u6216\u4e0e\u6761\u4ef6\u7684\u8054\u5408\u5206\u5e03\uff09\u8fdb\u884c\u5efa\u6a21\u3002\u5178\u578b\u7684\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u5305\u62ec\u751f\u6210\u5bf9\u6297\u7f51\u7edc (GAN)\u3001Varia-tional Autoencoders (VAE)\u3001\u5f52\u4e00\u5316\u6d41 (Normalizing Flows) \u548c Denois-ing \u6269\u6563\u6982\u7387\u6a21\u578b (DDPM)\u3002\u9664\u4e86\u4e00\u822c\u7684\u751f\u6210\u6a21\u578b\u5916\uff0c\u4e00\u79cd\u9488\u5bf9\u7279\u5b9a\u4efb\u52a1\u7684\u6a21\u578b--\u8fd0\u52a8\u56fe\u4e5f\u5f97\u5230\u4e86\u5e7f\u6cdb\u5e94\u7528\uff0c\u5c24\u5176\u662f\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u548c\u52a8\u753b\u9886\u57df\u3002\u56fe 5 \u663e\u793a\u4e86\u4e0d\u540c\u751f\u6210\u6a21\u578b\u7684\u6982\u51b5\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u5c06\u7b80\u8981\u4ecb\u7ecd\u8fd0\u52a8\u751f\u6210\u4e2d\u5e38\u7528\u7684\u751f\u6210\u6a21\u578b\u3002</p> <p>\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u3002\u751f\u6210\u5bf9\u6297\u7f51\u7edc[21]\u662f\u4e00\u7c7b\u751f\u6210\u6a21\u578b\uff0c\u7531\u4e24\u4e2a\u795e\u7ecf\u7f51\u7edc\u7ec4\u6210\uff1a\u751f\u6210\u5668 G \u548c\u5224\u522b\u5668 D\u3002\u76f8\u53cd\uff0c\u5224\u522b\u5668\u5219\u8bd5\u56fe\u533a\u5206\u771f\u5b9e\u6570\u636e\u548c\u751f\u6210\u5668\u751f\u6210\u7684\u5408\u6210\u6570\u636e\u3002\u751f\u6210\u5668\u548c\u9274\u522b\u5668\u4e4b\u95f4\u7684\u8fd9\u79cd\u52a8\u6001\u5173\u7cfb\u53ef\u4ee5\u770b\u4f5c\u662f\u96f6\u548c\u535a\u5f08\u6216\u6700\u5c0f\u6700\u5927\u535a\u5f08\u3002\u4ee3\u8868\u5b83\u4eec\u4e4b\u95f4\u76f8\u4e92\u4f5c\u7528\u7684\u635f\u5931\u51fd\u6570\u53ef\u4ee5\u8868\u8ff0\u4e3a\uff1a $$ \\mathcal{L}{D}=-\\mathbb{E}}\\sim p_{\\mathbf{x}}}[\\log(D(\\mathbf{x}))]-\\mathbb{E{\\mathbf{z}\\sim p}}}[\\log(1-D(G(\\mathbf{z})))], (1)\\\\mathcal{L{G}=-\\mathbb{E} $$ \u968f\u7740\u6df1\u5ea6\u5b66\u4e60\u7684\u5174\u8d77\uff0c\u4eba\u4eec\u63d0\u51fa\u4e86\u5404\u79cd\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684 GAN\u3002DCGAN [73]\u3001PGGAN [74]\u3001StyleGAN [75]\u3001[76] \u7b49\u6a21\u578b\u90fd\u53d6\u5f97\u4e86\u663e\u8457\u7684\u6210\u5c31\uff0c\u5c55\u73b0\u4e86\u5de8\u5927\u7684\u6f5c\u529b\u3002GANs \u7684\u8fd9\u4e9b\u8fdb\u6b65\u6781\u5927\u5730\u4fc3\u8fdb\u4e86\u751f\u6210\u6a21\u578b\u9886\u57df\u7684\u53d1\u5c55\uff0c\u5c24\u5176\u662f\u5728\u751f\u6210\u5408\u6210\u6570\u636e\u65b9\u9762\u3002\u7136\u800c\uff0cGANs \u4e5f\u9762\u4e34\u7740\u4e00\u4e9b\u6311\u6218\uff0c\u5305\u62ec\u8bad\u7ec3\u4e0d\u7a33\u5b9a\u3001\u6536\u655b\u95ee\u9898\u548c\u6a21\u5f0f\u5d29\u6e83\u3002}\\sim p_{\\mathbf{z}}}[\\log(D(G(\\mathbf{z})))].\\text{(2)</p> <p>\u53d8\u5f02\u81ea\u7f16\u7801\u5668\u3002\u53d8\u5206\u81ea\u7f16\u7801\u5668 [19] \u662f\u4e00\u79cd\u663e\u8457\u7684\u751f\u6210\u6a21\u578b\uff0c\u53ef\u4e3a\u6570\u636e\u8868\u793a\u63d0\u4f9b\u7a33\u5065\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5b83\u4eec\u901a\u8fc7\u4f7f\u7528\u524d\u9988\u6a21\u578b\uff08\u8868\u793a\u4e3a qj(z|x)\uff09\u6765\u903c\u8fd1\u96be\u4ee5\u5904\u7406\u7684\u540e\u9a8c\uff0c\u4ece\u800c\u5e94\u5bf9\u53ef\u4ea4\u4e92\u4f3c\u7136\u7684\u6311\u6218\u3002\u4e3b\u8981\u4f18\u5316\u76ee\u6807\u662f\u6700\u5c0f\u5316\u8be5\u8fd1\u4f3c\u503c\u4e0e\u539f\u59cb\u540e\u9a8c\u4e4b\u95f4\u7684 KL \u5206\u6b67\u3002VAE \u91c7\u7528\u8bc1\u636e\u4e0b\u9650\uff08ELBO\uff09\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\uff1a $$ \\text{ELBO}=\\mathbb{E}{\\mathbf{z}\\sim q $$ \u7531\u4e8e qj(z|x)\u7684\u524d\u9988\u6a21\u5f0f\uff0cVAE \u53ef\u4ee5\u9ad8\u6548\u5730\u751f\u6210\u548c\u63a8\u65ad\u65b0\u6837\u672c\u3002\u6b64\u5916\uff0c\u91cd\u53c2\u6570\u5316\u6280\u5de7\u8fd8\u80fd\u751f\u6210\u53ef\u5fae\u5206\u6837\u672c\uff0c\u5e76\u5229\u7528\u57fa\u4e8e\u91cd\u5efa\u7684\u635f\u5931\u51fd\u6570\uff0c\u6700\u7ec8\u63d0\u9ad8\u8bad\u7ec3\u6548\u7387\u548c\u7a33\u5b9a\u6027\u3002\u8fd9\u4e9b\u4f18\u70b9\u4fc3\u4f7f VAEs \u53d8\u4f53\u5728\u5404\u4e2a\u9886\u57df\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\uff0c\u5982 CVAE [77]\u3001LVAE [78] \u548c VQ-VAE [79]\uff0c\u5e76\u63a8\u52a8\u4e86\u751f\u6210\u6a21\u578b\u7684\u53d1\u5c55\u3002\u7136\u800c\uff0c\u4e0e GANs \u76f8\u6bd4\uff0cVAEs \u6709\u540e\u9a8c\u5d29\u6e83\u7684\u98ce\u9669\uff0c\u4ea7\u751f\u7684\u6837\u672c\u4e5f\u53ef\u80fd\u4e0d\u591f\u6e05\u6670\u3002}|\\mathbf{x})}}\\log(p_\\theta(\\mathbf{x}|\\mathbf{z}))-D_{KL}(q_\\phi(\\mathbf{z}|\\mathbf{x})||p_\\theta(\\mathbf{z})) \\text{(3)</p> <p>\u6d41\u91cf\u5f52\u4e00\u5316\u3002GAN \u548c VAE \u9690\u5f0f\u5730\u5b66\u4e60\u6570\u636e\u7684\u6982\u7387\u5bc6\u5ea6\u3002\u5b83\u4eec\u5f88\u96be\u8ba1\u7b97\u524d\u884c\u4e3a\u4f3c\u7136\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5f52\u4e00\u5316\u6d41\u91cf\u6a21\u578b[20]\u662f\u4e00\u7c7b\u663e\u5f0f\u5b66\u4e60\u6570\u636e\u5206\u5e03 p (x)\u7684\u751f\u6210\u6a21\u578b\uff0c\u53ef\u4ee5\u8fdb\u884c\u53ef\u63a7\u7684\u6982\u7387\u5bc6\u5ea6\u4f30\u8ba1\u3002\u8fd9\u4e9b\u6a21\u578b\u91c7\u7528\u4e00\u7cfb\u5217\u53ef\u9006\u53d8\u6362 {fi}1:N \u5c06\u7b80\u5355\u7684\u5148\u9a8c\u5206\u5e03 p(z0)\uff08\u5982\u6807\u51c6\u9ad8\u65af\u5206\u5e03\uff09\u6620\u5c04\u5230\u590d\u6742\u7684\u6570\u636e\u5206\u5e03 p(x)\uff1a $$ \\mathbf{z}{i}=f_i\\left(\\mathbf{z}}\\right)\\text{(4)}\\\\mathbf{x}=\\mathbf{zN=f_N\\circ f}\\circ\\cdots\\circ f_1(\\mathbf{z0)\\text{(5)} $$ \u76ee\u6807\u5206\u5e03\u7684\u5bc6\u5ea6\u53ef\u4ee5\u901a\u8fc7\u5e94\u7528\u53d8\u91cf\u53d8\u5316\u5b9a\u7406\u5f97\u5230\uff1a $$ \\log p(\\mathbf{z}_i)=\\log p(\\mathbf{z}})-\\log\\left|\\det\\frac{df_i}{d\\mathbf{z{i-1}}\\right|\\text{(6)}\\\\log p(\\mathbf{x})=\\log p(\\mathbf{z}_0)-\\sum $$ \u5176\u4e2d\uff0cdet \u662f\u6b63\u65b9\u5f62\u77e9\u9635\u884c\u5217\u5f0f\u7684\u7b80\u79f0\u3002\u5f52\u4e00\u5316\u6d41\u7a0b\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u6700\u5927\u5316\u89c2\u6d4b\u6570\u636e\u7684\u5bf9\u6570\u4f3c\u7136\u6765\u8fdb\u884c\u8bad\u7ec3\u3002\u7531\u4e8e\u53ef\u53cd\u8f6c\u53d8\u6362\uff0c\u5f52\u4e00\u5316\u6d41\u5177\u6709\u7075\u6d3b\u6027\u3001\u7cbe\u786e\u7684\u4f3c\u7136\u8ba1\u7b97\u548c\u7b80\u4fbf\u7684\u6570\u636e\u91c7\u6837\u3002\u7136\u800c\uff0c\u5b83\u4eec\u9700\u8981\u5927\u91cf\u7684\u53d8\u6362\u624d\u80fd\u5bf9\u590d\u6742\u7684\u5206\u5e03\u5efa\u6a21\uff0c\u800c\u4e14\u8ba1\u7b97\u6210\u672c\u9ad8\u3001\u8bad\u7ec3\u56f0\u96be\u3002}^K\\log\\left|\\det\\frac{df_i}{d\\mathbf{z}_{i-1}}\\right|\\text{(7)</p> <p>\u6269\u6563\u6a21\u578b\u3002\u6269\u6563\u6a21\u578b [22]\u3001[80]\u3001[81] \u5b9a\u4e49\u4e86\u4e00\u4e2a\u524d\u5411\u6269\u6563\u8fc7\u7a0b\uff0c\u8be5\u8fc7\u7a0b\u4ee5 T \u6b65\u4e3a\u5355\u4f4d\u9010\u6e10\u5411\u8f93\u5165\u6570\u636e x0 \u4e2d\u6dfb\u52a0\u5c11\u91cf\u9ad8\u65af\u566a\u58f0\uff0c\u4ece\u800c\u4ea7\u751f\u4e00\u7cfb\u5217\u566a\u58f0\u6837\u672c {xt}1:T \u3002\u566a\u58f0\u7531 {\u03b2t}1:T \u8c03\u5ea6\u3002 $$ q(\\mathbf{x}t|\\mathbf{x}})=\\mathcal{N}(\\mathbf{xt;\\sqrt{1-\\beta_t}\\mathbf{x}},\\beta_t\\mathbf{I}),\\text{(8)}\\q(\\mathbf{x{1:T}|\\mathbf{x}_0)=\\prod}^Tq(\\mathbf{xt|\\mathbf{x} $$ \u7531\u4e8e T \u2192 \u221e\uff0cxT \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u9ad8\u65af\u5206\u5e03\u3002\u5982\u679c\u6211\u4eec\u77e5\u9053\u53cd\u5411\u8fc7\u6e21 q(xt-1|xt)\uff0c\u5c31\u53ef\u4ee5\u4ece\u9ad8\u65af\u5148\u9a8c xt\u223c N (0, I) \u4e2d\u91c7\u6837\uff0c\u7136\u540e\u53cd\u5411\u8fd0\u884c\u6269\u6563\u8fc7\u7a0b\uff0c\u4ece\u771f\u5b9e\u6570\u636e\u5206\u5e03 p(x0) \u4e2d\u91c7\u6837\u3002\u7136\u800c\uff0c\u7531\u4e8e q(xt-1|xt) \u53d6\u51b3\u4e8e\u6574\u4e2a\u6570\u636e\u96c6\u4e14\u96be\u4ee5\u4f30\u8ba1\uff0c\u56e0\u6b64\u6211\u4eec\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc p\u03b8 \u6765\u5339\u914d\u540e\u9a8c q(xt-1|xt\uff0cx0)\uff0c\u5373\u4e00\u4e2a\u53ef\u5904\u7406\u7684\u9ad8\u65af\u5206\u5e03\uff0c\u800c\u4e0d\u662f q(xt-1|xt)\uff1a $$ p_\\theta(\\mathbf{x}}).\\text{(9){t-1}|\\mathbf{x}_t)=\\mathcal{N}(\\mathbf{x}};\\boldsymbol{\\mu\\theta(\\mathbf{x}_t,t),\\boldsymbol{\\Sigma}\\theta(\\mathbf{x}_t,t))\\quad(10) $$ p\u03b8 \u662f\u901a\u8fc7\u4f18\u5316\u7c7b\u4f3c\u4e8e VAE \u7684 ELBO \u6765\u5b66\u4e60\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u6269\u6563\u6a21\u578b\u80fd\u591f\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u6837\u672c\uff0c\u5e76\u80fd\u4ece\u7a33\u5b9a\u7684\u8bad\u7ec3\u4e2d\u83b7\u76ca\u3002\u4e0d\u8fc7\uff0c\u5b83\u4f9d\u8d56\u4e8e\u53cd\u5411\u6269\u6563\u6b65\u9aa4\u7684\u957f\u9a6c\u5c14\u53ef\u592b\u94fe\u6765\u751f\u6210\u6837\u672c\uff0c\u56e0\u6b64\u8ba1\u7b97\u6210\u672c\u8f83\u9ad8\uff0c\u901f\u5ea6\u4e5f\u6bd4 GAN \u548c VAE \u6162\u3002</p> <p>\u8fd0\u52a8\u56fe \u8fd0\u52a8\u56fe [82]\u3001[83]\u3001[84] \u53ef\u4ee5\u7528\u6570\u5b66\u65b9\u6cd5\u8868\u793a\u4e3a\u6709\u5411\u56fe G = \u27e8V, E\u27e9\uff0c\u5176\u4e2d V \u8868\u793a\u8282\u70b9\u6216\u9876\u70b9\u96c6\uff0cE \u8868\u793a\u6709\u5411\u8fb9\u6216\u8f6c\u6362\u96c6\u3002\u6bcf\u4e2a\u8282\u70b9 v\u2208V \u4ee3\u8868\u4e00\u4e2a\u59ff\u52bf\u6216\u5173\u952e\u5e27\uff0c\u6bcf\u6761\u6709\u5411\u8fb9 e\u2208E \u8fde\u63a5\u4e24\u4e2a\u9876\u70b9\uff08v1\uff0cv2\uff09\uff0c\u4ee3\u8868\u76f8\u5e94\u59ff\u52bf\u4e4b\u95f4\u7684\u53ef\u884c\u8f6c\u6362\u3002\u8fd0\u52a8\u56fe\u9996\u5148\u6839\u636e\u8fd0\u52a8\u7247\u6bb5\u96c6\u5408\u6784\u5efa\u3002\u4e3a\u786e\u4fdd\u5e73\u7a33\u8fc7\u6e21\uff0c\u7b97\u6cd5\u4f1a\u8bc6\u522b\u8fd0\u52a8\u7247\u6bb5\u4e2d\u7684\u517c\u5bb9\u59ff\u52bf\uff0c\u5e76\u7528\u8fb9\u5c06\u5b83\u4eec\u8fde\u63a5\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u53ef\u904d\u5386\u7684\u56fe\uff0c\u4ee5\u751f\u6210\u65b0\u7684\u8fd0\u52a8\u5e8f\u5217\u3002\u5728\u6784\u5efa\u8fd0\u52a8\u56fe\u4e4b\u540e\uff0c\u53ef\u4ee5\u5728\u56fe\u4e0a\u6267\u884c\u968f\u673a\u884c\u8d70 W = (v1, v2, ... , vn)\uff0c\u4ece\u521d\u59cb\u8282\u70b9\u5f00\u59cb\uff0c\u6cbf\u7740\u6709\u5411\u8fb9\u7f18\u884c\u8d70\u3002\u8f93\u51fa\u7684\u8fd0\u52a8\u5e8f\u5217\u662f\u4e0e\u904d\u5386\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u59ff\u52bf\u7684\u4e32\u8054\uff0c\u786e\u4fdd\u8fde\u7eed\u59ff\u52bf\u4e4b\u95f4\u7684\u5e73\u6ed1\u8fc7\u6e21\u3002\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u5c06\u66f4\u591a\u7ea6\u675f\u6761\u4ef6\u4f5c\u4e3a\u4f18\u5316\u76ee\u6807\u7eb3\u5165\u5176\u4e2d [85]\uff0c[86]\u3002\u8fd9\u4e00\u8fc7\u7a0b\u53ef\u6709\u6548\u521b\u5efa\u65b0\u7684\u8fd0\u52a8\u5e8f\u5217\uff0c\u8fd9\u4e9b\u5e8f\u5217\u5728\u539f\u59cb\u6570\u636e\u96c6\u4e2d\u5e76\u4e0d\u660e\u786e\u5b58\u5728\uff0c\u4f46\u4e0e\u6570\u636e\u7684\u6574\u4f53\u7279\u5f81\u76f8\u4e00\u81f4\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#text-conditioned-motion-generation","title":"TEXT-CONDITIONED MOTION GENERATION","text":"<p>\u6587\u5b57\u5177\u6709\u4ee5\u660e\u793a\u6216\u6697\u793a\u7684\u65b9\u5f0f\u4f20\u8fbe\u5404\u79cd\u7c7b\u578b\u7684\u52a8\u4f5c\u3001\u901f\u5ea6\u3001\u65b9\u5411\u548c\u76ee\u7684\u5730\u7684\u975e\u51e1\u80fd\u529b\u3002\u8fd9\u4e00\u7279\u70b9\u4f7f\u5f97\u6587\u672c\u6210\u4e3a\u751f\u6210\u4eba\u7c7b\u52a8\u4f5c\u7684\u4e00\u4e2a\u6781\u5177\u5438\u5f15\u529b\u7684\u6761\u4ef6\u3002\u672c\u8282\u65e8\u5728\u9610\u91ca\u4ee5\u6587\u672c\u4e3a\u6761\u4ef6\u7684\u4eba\u4f53\u52a8\u4f5c\u751f\u6210\u4efb\u52a1\uff08\u89c1\u8868 1 \u9876\u90e8\u56fe\u5757\uff09\uff0c\u4e3b\u8981\u5206\u4e3a\u4e24\u7c7b\uff1a\u52a8\u4f5c\u5230\u52a8\u4f5c\u548c\u6587\u672c\u5230\u52a8\u4f5c\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#action-to-motion","title":"Action to Motion","text":"<p>\u4ece\u52a8\u4f5c\u5230\u52a8\u4f5c\u7684\u4efb\u52a1\u4e3b\u8981\u662f\u6839\u636e \"\u8d70\"\u3001\"\u8e22 \"\u6216 \"\u6295 \"\u7b49\u7279\u5b9a\u52a8\u4f5c\u7c7b\u522b\u751f\u6210\u4eba\u7c7b\u52a8\u4f5c\u5e8f\u5217\u3002\u8fd9\u4e9b\u52a8\u4f5c\u901a\u5e38\u4f7f\u7528\u5355\u6b21\u7f16\u7801\u7b49\u6280\u672f\u6765\u8868\u793a\uff0c\u4ece\u800c\u7b80\u5316\u4e86\u52a8\u4f5c\u751f\u6210\u8fc7\u7a0b\u3002\u4e0e\u5904\u7406\u590d\u6742\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7684\u6587\u672c\u5230\u52a8\u4f5c\u4efb\u52a1\u76f8\u6bd4\uff0c\u7531\u4e8e\u52a8\u4f5c\u7c7b\u522b\u6709\u9650\u4e14\u5b9a\u4e49\u660e\u786e\uff0c\u8fd9\u79cd\u8868\u793a\u65b9\u6cd5\u63d0\u4f9b\u4e86\u66f4\u76f4\u63a5\u7684\u4efb\u52a1\u3002</p> <p>Yu \u7b49\u4eba[88]\u4ecb\u7ecd\u4e86 SA-GAN\uff0c\u5b83\u5229\u7528\u4e86\u57fa\u4e8e\u81ea\u6211\u6ce8\u610f\u7684\u56fe\u5377\u79ef\u7f51\u7edc\uff08GCN\uff09\u548c GAN \u67b6\u6784\u3002\u4ed6\u4eec\u8fd8\u5efa\u8bae\u901a\u8fc7\u4f7f\u7528\u4e24\u4e2a\u5224\u522b\u5668\uff08\u4e00\u4e2a\u57fa\u4e8e\u5e27\uff0c\u53e6\u4e00\u4e2a\u57fa\u4e8e\u5e8f\u5217\uff09\u6765\u589e\u5f3a\u751f\u6210\u80fd\u529b\u3002\u4e0e\u6b64\u7c7b\u4f3c\uff0cKinetic-GAN [92] \u7ed3\u5408\u4e86 GAN \u548c GCN \u7684\u4f18\u52bf\uff0c\u5e76\u8fdb\u4e00\u6b65\u5229\u7528\u6f5c\u7a7a\u95f4\u89e3\u7f20\u548c\u968f\u673a\u53d8\u5316\u6765\u751f\u6210\u9ad8\u8d28\u91cf\u548c\u591a\u6837\u5316\u7684\u4eba\u4f53\u52a8\u4f5c\u3002Guo \u7b49\u4eba[7]\u5f15\u5165\u4e86 Action2Motion\uff0c\u8fd9\u662f\u4e00\u79cd\u57fa\u4e8e\u95e8\u63a7\u9012\u5f52\u5355\u5143\uff08GRU\uff09\u7684\u6bcf\u5e27 VAE \u67b6\u6784\uff0c\u7528\u4e8e\u751f\u6210\u8fd0\u52a8\u5e8f\u5217\u3002\u540c\u6837\uff0cACTOR [90] \u91c7\u7528\u4e86\u5e8f\u5217\u7ea7 CVAE \u6a21\u578b\uff0c\u8be5\u6a21\u578b\u4f7f\u7528\u53d8\u6362\u5668\u4f5c\u4e3a\u9aa8\u5e72\uff0c\u4ee5\u975e\u81ea\u56de\u5f52\u65b9\u5f0f\u751f\u6210\u8fd0\u52a8\u5e8f\u5217\u3002\u8fd9\u79cd\u975e\u81ea\u56de\u5f52\u65b9\u6cd5\u5141\u8bb8\u4e00\u6b21\u751f\u6210\u8fd0\u52a8\u5e8f\u5217\u3002ODMO [94] \u91c7\u7528\u4e00\u79cd\u65b0\u9896\u7684\u7b56\u7565\uff0c\u5728\u4f4e\u7ef4\u6f5c\u5728\u7a7a\u95f4\u5185\u5e94\u7528\u5bf9\u6bd4\u5b66\u4e60\uff0c\u4ece\u800c\u751f\u6210\u8fd0\u52a8\u5e8f\u5217\u7684\u5206\u5c42\u5d4c\u5165\u3002\u8be5\u6a21\u578b\u5728\u751f\u6210\u8fd0\u52a8\u5e8f\u5217\u4e4b\u524d\u9996\u5148\u521b\u5efa\u8fd0\u52a8\u8f68\u8ff9\uff0c\u4ece\u800c\u6709\u5229\u4e8e\u8f68\u8ff9\u63a7\u5236\u3002\u6b64\u5916\uff0cPoseGPT [95] \u5229\u7528\u81ea\u52a8\u56de\u5f52\u53d8\u6362\u5668\u5c06\u4eba\u4f53\u8fd0\u52a8\u7f16\u7801\u4e3a\u91cf\u5316\u7684\u6f5c\u5728\u8868\u793a\uff0c\u968f\u540e\u5728\u6b64\u79bb\u6563\u7a7a\u95f4\u5185\u91c7\u7528\u7c7b\u4f3c GPT \u7684\u6a21\u578b\u8fdb\u884c\u4e0b\u4e00\u6b65\u8fd0\u52a8\u6307\u6570\u9884\u6d4b\u3002\u585e\u4e07\u63d0\u65af\u7b49\u4eba[98]\u4ecb\u7ecd\u4e86\u4e00\u79cd\u4f7f\u7528\u9690\u5f0f\u795e\u7ecf\u518d\u73b0\uff08INR\uff09\u548c\u62df\u5408\u6761\u4ef6\u9ad8\u65af\u6df7\u5408\u6a21\u578b\uff08GMM\uff09\u7684\u65b9\u6cd5\u3002\u8fd9\u79cd\u65b9\u6cd5\u901a\u8fc7\u4ece\u6bcf\u4e2a\u8bad\u7ec3\u5e8f\u5217\u7684\u53d8\u5f02\u5206\u5e03\u4e2d\u63d0\u53d6\u8868\u5f81\u6765\u63a7\u5236\u5e8f\u5217\u7684\u957f\u5ea6\u548c\u52a8\u4f5c\u7c7b\u522b\u3002\u6b64\u5916\uff0cMDM [14] \u5229\u7528\u6269\u6563\u6a21\u578b\u6765\u9884\u6d4b\u6bcf\u4e2a\u6269\u6563\u6b65\u9aa4\u7684\u6837\u672c\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u566a\u58f0\u3002MLD [101] \u4ece\u6f5c\u5728\u6269\u6563\u6a21\u578b\uff08LDM\uff09[169] \u4e2d\u6c72\u53d6\u7075\u611f\uff0c\u5229\u7528\u6f5c\u5728\u7ea7\u6269\u6563\u548c VAE \u751f\u6210\u52a8\u4f5c\u3002</p> <p>\u867d\u7136\u8fd9\u4e9b\u65b9\u6cd5\u6781\u5927\u5730\u63a8\u52a8\u4e86 \"\u52a8\u4f5c\u5230\u52a8\u4f5c \"\u9886\u57df\u7684\u53d1\u5c55\uff0c\u4f46\u5b83\u4eec\u4e3b\u8981\u64c5\u957f\u751f\u6210\u5355\u4e00\u52a8\u4f5c\u3002\u8981\u8fc7\u6e21\u5230\u751f\u6210\u6d89\u53ca\u591a\u4e2a\u52a8\u4f5c\u7684\u590d\u6742\u5e8f\u5217\u4ecd\u7136\u662f\u4e00\u4e2a\u6311\u6218\uff0c\u800c\u4e14\u5f80\u5f80\u9700\u8981\u989d\u5916\u7684\u540e\u5904\u7406\u6765\u8fde\u63a5\u4e0d\u540c\u7684\u52a8\u4f5c\u3002\u4e3a\u6b64\uff0c\u6700\u8fd1\u7684\u4e00\u9879\u7814\u7a76\u6210\u679c MultiAct [99]\uff0c\u5229\u7528\u8fc7\u53bb\u7684\u52a8\u4f5c\u5faa\u73af\u751f\u6210\u957f\u671f\u7684\u591a\u52a8\u4f5c\u4e09\u7ef4\u4eba\u4f53\u8fd0\u52a8\uff0c\u5e76\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u9896\u7684\u9762\u524d\u89c4\u8303\u5316\u65b9\u6cd5\uff0c\u4ee5\u786e\u4fdd\u672c\u5730\u5750\u6807\u7cfb\u5728\u6bcf\u4e2a\u5faa\u73af\u6b65\u9aa4\u4e2d\u5171\u4eab\u5730\u9762\u51e0\u4f55\u56fe\u5f62\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#text-to-motion","title":"Text to Motion","text":"<p>\u6587\u672c\u5230\u52a8\u4f5c\u4efb\u52a1\u65e8\u5728\u5229\u7528\u8bed\u8a00\u7684\u5de8\u5927\u8868\u8fbe\u80fd\u529b\uff0c\u4ece\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u4e2d\u751f\u6210\u4eba\u7c7b\u52a8\u4f5c\u5e8f\u5217\u3002\u4e0e\u4f7f\u7528\u6709\u9650\u7684\u9884\u5b9a\u4e49\u6807\u7b7e\u7684 \"\u52a8\u4f5c\u5230\u52a8\u4f5c \"\u76f8\u6bd4\uff0c\"\u6587\u672c\u5230\u52a8\u4f5c \"\u6709\u53ef\u80fd\u6839\u636e\u4e0d\u540c\u7684\u6587\u672c\u63cf\u8ff0\u751f\u6210\u66f4\u591a\u79cd\u7c7b\u7684\u52a8\u4f5c\u3002\u7136\u800c\uff0c\u5982\u4f55\u51c6\u786e\u5730\u5c06\u590d\u6742\u7684\u6587\u672c\u8f6c\u6362\u6210\u76f8\u5e94\u7684\u52a8\u4f5c\u662f\u4e00\u4e2a\u6311\u6218\uff0c\u8fd9\u9700\u8981\u5bf9\u8bed\u8a00\u7684\u7ec6\u5fae\u5dee\u522b\u548c\u7269\u7406\u8fd0\u52a8\u52a8\u6001\u6709\u6df1\u523b\u7684\u7406\u89e3\u3002</p> <p>Text2Action [102] \u9996\u6b21\u5229\u7528 GAN \u4ece\u7ed9\u5b9a\u7684\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u4e2d\u751f\u6210\u5404\u79cd\u52a8\u4f5c\u3002\u8fd8\u6709\u4e00\u4e9b\u65b9\u6cd5\u63a2\u7d22\u4e86\u5b66\u4e60\u6587\u672c\u548c\u52a8\u4f5c\u8054\u5408\u5d4c\u5165\u7684\u6f5c\u529b\u3002\u4f8b\u5982\uff0cJL2P [104] \u4f7f\u7528\u57fa\u4e8e GRU \u7684\u6587\u672c\u7f16\u7801\u5668\u548c\u52a8\u4f5c\u7f16\u7801\u5668-\u89e3\u7801\u5668\u5c06\u6587\u672c\u6620\u5c04\u4e3a\u76f8\u5e94\u7684\u4eba\u4f53\u52a8\u4f5c\u3002Ghosh \u7b49\u4eba[105] \u8fdb\u4e00\u6b65\u5f00\u53d1\u4e86\u4e00\u79cd\u53cc\u6d41\u7f16\u7801\u5668-\u89e3\u7801\u5668\u6a21\u578b\uff0c\u7528\u4e8e\u5171\u540c\u5d4c\u5165\u6587\u672c\u548c\u80a2\u4f53\u52a8\u4f5c\uff0c\u540c\u65f6\u8fd8\u91c7\u7528\u4e86 GAN \u7ed3\u6784\u6765\u751f\u6210\u66f4\u81ea\u7136\u7684\u52a8\u4f5c\u3002Guo \u7b49\u4eba[3]\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e VAE \u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5728\u6bcf\u5e27\u4e2d\u5229\u7528\u957f\u5ea6\u4f30\u8ba1\u6a21\u5757\u548c\u5355\u8bcd\u7ea7\u5173\u6ce8\u6a21\u5757\u6765\u751f\u6210\u591a\u6837\u5316\u7684\u591a\u957f\u5ea6\u8fd0\u52a8\u3002\u6b64\u5916\uff0cTEMOS[108] \u901a\u8fc7\u5e26\u6709\u53d8\u6362\u5668\u5c42\u7684 VAE \u5b66\u4e60\u8fd0\u52a8\u548c\u6587\u672c\u7684\u8054\u5408\u5206\u5e03\uff0c\u4ece\u800c\u751f\u6210\u591a\u79cd\u8fd0\u52a8\u5e8f\u5217\u3002TEACH [110] \u8fdb\u4e00\u6b65\u5c06\u8fc7\u53bb\u7684\u8fd0\u52a8\u4f5c\u4e3a\u7f16\u7801\u5668\u6a21\u5757\u7684\u8865\u5145\u8f93\u5165\uff0c\u4ece\u800c\u751f\u6210\u66f4\u81ea\u7136\u3001\u66f4\u8fde\u8d2f\u7684\u8fd0\u52a8\u5e8f\u5217\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u591a\u4e2a\u6587\u672c\u8f93\u5165\u5e8f\u5217\u65f6\u3002</p> <p>\u867d\u7136\u4e0a\u8ff0\u65b9\u6cd5\u6ce8\u91cd\u6839\u636e\u7ed9\u5b9a\u6570\u636e\u96c6\u751f\u6210\u8fd0\u52a8\u6f5c\u7a7a\u95f4\uff0c\u4f46\u5728\u751f\u6210\u96f6\u955c\u5934\u65f6\u53ef\u80fd\u4f1a\u9047\u5230\u56fa\u6709\u7684\u6311\u6218\u3002\u4e3a\u89e3\u51b3\u8fd9\u4e00\u96be\u9898\uff0cMotionCLIP [107] \u5229\u7528\u57fa\u4e8e\u53d8\u6362\u5668\u7684\u81ea\u52a8\u7f16\u7801\u5668\uff0c\u5c06\u8fd0\u52a8\u6f5c\u7a7a\u95f4\u4e0e\u9884\u5148\u8bad\u7ec3\u7684\u89c6\u89c9\u8bed\u8a00\u6a21\u578b CLIP [170] \u7684\u6587\u672c\u548c\u56fe\u50cf\u7a7a\u95f4\u5bf9\u9f50\uff0c\u4ee5\u589e\u5f3a\u96f6\u955c\u5934\u751f\u6210\u80fd\u529b\u3002AvatarCLIP [106] \u4e5f\u91c7\u7528\u4e86 CLIP [170] \u548c\u57fa\u4e8e\u53c2\u8003\u7684\u8fd0\u52a8\u5408\u6210\u65b9\u6cd5\uff0c\u6839\u636e\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u751f\u6210\u5404\u79cd\u52a8\u753b\u3002\u6b64\u5916\uff0cOOHMG[113] \u4f7f\u7528\u6587\u672c\u59ff\u52bf\u751f\u6210\u5668\u83b7\u53d6\u4e0e\u6587\u672c\u4e00\u81f4\u7684\u59ff\u52bf\uff0c\u7136\u540e\u5c06\u5176\u4f5c\u4e3a\u5c4f\u853d\u63d0\u793a\u8f93\u5165\u9884\u8bad\u7ec3\u751f\u6210\u5668\u3002\u8fd9\u6837\u5c31\u80fd\u5b9e\u73b0\u9ad8\u6548\u7684\u5168\u52a8\u4f5c\u91cd\u5efa\uff0c\u65e0\u9700\u914d\u5bf9\u6570\u636e\u6216\u5728\u7ebf\u4f18\u5316\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u867d\u7136\u8fd9\u4e9b\u65b9\u6cd5\u4f7f\u7528\u6587\u672c\u4f5c\u4e3a\u8f93\u5165\uff0c\u4f46\u5b83\u4eec\u53ea\u4f7f\u7528\u4e86\u4e3b\u8981\u7531\u52a8\u4f5c\u7c7b\u522b\u540d\u79f0\u7ec4\u6210\u7684\u7b80\u77ed\u6587\u672c\u3002</p> <p>\u8fd1\u5e74\u6765\uff0c\u7531\u4e8e VQ-VAE \u548c Diffusion \u6a21\u578b\u5728\u6587\u672c\u5230\u56fe\u50cf\u751f\u6210\u9886\u57df\u53d6\u5f97\u4e86\u5de8\u5927\u6210\u529f\uff0c\u4eba\u4eec\u5bf9\u5b83\u4eec\u7684\u5174\u8da3\u4e0e\u65e5\u4ff1\u589e\u3002\u4f8b\u5982\uff0cTM2T [109] \u5229\u7528 VQ-VAE \u540c\u6b65\u8bad\u7ec3\u6587\u672c\u5230\u8fd0\u52a8\u548c\u8fd0\u52a8\u5230\u6587\u672c\u6a21\u5757\u3002\u540c\u6837\uff0cT2M-GPT [112] \u5c06 VQ-VAE \u4e0e\u6307\u6570\u79fb\u52a8\u5e73\u5747\uff08EMA\uff09\u548c\u4ee3\u7801\u91cd\u7f6e\u7b56\u7565\u76f8\u7ed3\u5408\uff0c\u4e3a\u8fd0\u52a8\u5e8f\u5217\u751f\u6210\u5e94\u7528\u4e86\u7c7b\u4f3c GPT \u7684\u8f6c\u6362\u5668\u67b6\u6784\u3002FLAME [111] \u5efa\u8bae\u5c06\u8fd0\u52a8\u957f\u5ea6\u6807\u8bb0\u3001\u8bed\u8a00\u6c60\u6807\u8bb0\u3001\u65f6\u95f4\u6b65\u957f\u6807\u8bb0\u548c\u8fd0\u52a8\u5d4c\u5165\u8fde\u63a5\u8d77\u6765\uff0c\u7136\u540e\u7531\u6269\u6563\u6a21\u578b\u5229\u7528\u8fd9\u4e9b\u6807\u8bb0\u751f\u6210\u53ef\u53d8\u957f\u5ea6\u548c\u591a\u6837\u5316\u7684\u8fd0\u52a8\u3002\u5728\u52a8\u4f5c\u5230\u52a8\u4f5c\u90e8\u5206\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u7684 MDM [14] \u548c MLD [101] \u4e5f\u5c06\u4e0a\u8ff0\u65b9\u6cd5\u7528\u4e8e\u6587\u672c\u5230\u52a8\u4f5c\u7684\u751f\u6210\u3002\u8fd8\u6709\u4e00\u4e9b\u4f5c\u54c1\u8fdb\u4e00\u6b65\u63a2\u7d22\u4e86\u4ece\u5404\u79cd\u6761\u4ef6\u751f\u6210\u52a8\u4f5c\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff0cMoFu-sion[116] \u5229\u7528\u5e26\u6709\u4e00\u7ef4 U-Net \u98ce\u683c\u53d8\u6362\u5668\u6a21\u5757\u7684\u6269\u6563\u6a21\u578b\uff0c\u4ece\u81ea\u7136\u8bed\u8a00\u6216\u97f3\u9891\u8f93\u5165\u4e2d\u751f\u6210\u4eba\u4f53\u52a8\u4f5c\u5e8f\u5217\u3002\u6b64\u5916\uff0cZhou \u7b49\u4eba[114] \u63d0\u51fa\u4e86 UDE \u6846\u67b6\uff0c\u8be5\u6846\u67b6\u5c06\u8fd0\u52a8\u5e8f\u5217\u79bb\u6563\u5316\u4e3a\u6f5c\u5728\u4ee3\u7801\uff0c\u5c06\u6761\u4ef6\u6620\u5c04\u5230\u7edf\u4e00\u7a7a\u95f4\uff0c\u4f7f\u7528 GPT \u5f0f\u53d8\u6362\u5668\u9884\u6d4b\u91cf\u5316\u4ee3\u7801\uff0c\u5e76\u901a\u8fc7\u6269\u6563\u6a21\u578b\u751f\u6210\u8fd0\u52a8\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#audio-conditioned-motion-generation","title":"AUDIO-CONDITIONED MOTION GENERATION","text":"<p>\u9664\u6587\u5b57\u63cf\u8ff0\u5916\uff0c\u4eba\u4eec\u8fd8\u63a2\u7d22\u4ece\u97f3\u9891\u4fe1\u53f7\u4e2d\u751f\u6210\u4eba\u4f53\u52a8\u4f5c\u3002\u4e0e\u6587\u672c\u4e0d\u540c\uff0c\u97f3\u9891\u4fe1\u53f7\u901a\u5e38\u4e0d\u63d0\u4f9b\u76f8\u5e94\u4eba\u4f53\u52a8\u4f5c\u7684\u660e\u786e\u63cf\u8ff0\uff0c\u56e0\u6b64\u751f\u6210\u4efb\u52a1\u7684\u81ea\u7531\u5ea6\u66f4\u9ad8\u3002\u540c\u65f6\uff0c\u751f\u6210\u7684\u4eba\u4f53\u52a8\u4f5c\u5e94\u5728\u9ad8\u7ea7\u8bed\u4e49\u548c\u4f4e\u7ea7\u8282\u594f\u65b9\u9762\u4e0e\u97f3\u9891\u76f8\u534f\u8c03\u3002\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4e3b\u8981\u8ba8\u8bba\u4e24\u4e2a\u65e5\u76ca\u53d7\u5230\u5173\u6ce8\u7684\u5b50\u4efb\u52a1\uff1a\u97f3\u4e50-\u821e\u8e48\u548c\u8bed\u97f3-\u624b\u52bf\u3002\u97f3\u9891\u6761\u4ef6\u53ef\u4ee5\u7528\u539f\u59cb\u97f3\u9891\u6ce2\u5f62\u3001\u9891\u8c31\u56fe\u548c\u65cb\u5f8b-\u9891\u7387\u5012\u8c31\u7cfb\u6570\uff08MFCC\uff09\u6765\u8868\u793a\u3002\u4e3a\u4e86\u589e\u5f3a\u53ef\u63a7\u6027\uff0c\u6709\u4e9b\u4f5c\u54c1\u8fd8\u52a0\u5165\u4e86\u989d\u5916\u7684\u6761\u4ef6\uff0c\u5982\u98ce\u683c\u4ee3\u7801\u6216\u6587\u5b57\u8a8a\u672c\u3002\u8bf7\u53c2\u9605\u8868 1 \u4e2d\u95f4\u90e8\u5206\uff0c\u4e86\u89e3\u5404\u79cd\u65b9\u6cd5\u7684\u6982\u8981\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#music-to-dance","title":"Music to Dance","text":"<p>\u97f3\u4e50-\u821e\u8e48\u751f\u6210\u4efb\u52a1\u65e8\u5728\u6839\u636e\u8f93\u5165\u7684\u97f3\u4e50\u5e8f\u5217\u751f\u6210\u76f8\u5e94\u7684\u821e\u8e48\u52a8\u4f5c\u3002\u4e00\u4e2a\u76f4\u63a5\u7684\u60f3\u6cd5\u662f\u4f7f\u7528\u5168\u76d1\u7763\u56de\u5f52\u6a21\u578b\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u7c7b\u4f3c\u4e8e\u5e8f\u5217\u5230\u5e8f\u5217\u7684\u8f6c\u6362\u3002\u4f8b\u5982\uff0cTang \u7b49\u4eba[117] \u91c7\u7528 LSTM \u81ea\u52a8\u7f16\u7801\u5668\u63d0\u53d6\u58f0\u97f3\u7279\u5f81\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u52a8\u4f5c\u7279\u5f81\u3002AI Choreographer [115] \u5229\u7528\u5168\u6ce8\u610f\u529b\u8de8\u6a21\u6001\u8f6c\u6362\u5668 (FACT)\uff0c\u4ee5\u81ea\u52a8\u56de\u5f52\u7684\u65b9\u5f0f\u9884\u6d4b\u672a\u6765\u7684 N \u4e2a\u8fd0\u52a8\u5e27\u3002GroupDancer [126] \u63d0\u51fa\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u821e\u8005\u534f\u4f5c\u9636\u6bb5\uff0c\u4ee5\u9009\u62e9\u6d3b\u8dc3\u7684\u821e\u8005\u751f\u6210\u591a\u4eba\u821e\u8e48\u3002GDancer [129] \u5f15\u5165\u4e86\u5168\u5c40-\u5c40\u90e8\u8fd0\u52a8\u8868\u793a\u6cd5\uff0c\u4ee5\u786e\u4fdd\u5c40\u90e8\u4e00\u81f4\u6027\u548c\u5168\u5c40\u4e00\u81f4\u6027\u3002\u4e0a\u8ff0\u65b9\u6cd5\u91c7\u7528\u5b8c\u5168\u76d1\u7763\u5b66\u4e60\u7684\u89c6\u89d2\uff0c\u4ee5\u6700\u5c0f\u5316\u9884\u6d4b\u8fd0\u52a8\u4e0e\u5730\u9762\u771f\u5b9e\u8fd0\u52a8\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u97f3\u4e50\u5e8f\u5217\uff0c\u5b58\u5728\u7740\u5404\u79cd\u5404\u6837\u53ef\u4fe1\u7684\u821e\u8e48\u52a8\u4f5c\u3002\u7b80\u5355\u7684\u91cd\u6784\u76d1\u7763\u65e0\u6cd5\u5145\u5206\u89e3\u51b3\u8fd9\u79cd\u4e00\u5bf9\u591a\u7684\u6620\u5c04\u5173\u7cfb\u3002</p> <p>\u4ece\u751f\u6210\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u57fa\u4e8e GAN \u7684\u65b9\u6cd5 [118]\u3001[123] \u91c7\u7528\u5bf9\u6297\u5b66\u4e60\u6765\u6b63\u5219\u5316\u751f\u6210\u7684\u8fd0\u52a8\u6570\u636e\u6d41\u5f62\u4e0e\u771f\u5b9e\u8fd0\u52a8\u6570\u636e\u6d41\u5f62\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002MNET [4] \u8fd8\u4e3a\u751f\u6210\u5668\u52a0\u5165\u4e86\u97f3\u4e50\u98ce\u683c\u4ee3\u7801\uff0c\u5e76\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u591a\u4efb\u52a1\u5224\u522b\u5668\u6765\u6267\u884c\u6bcf\u79cd\u98ce\u683c\u7684\u5206\u7c7b\u3002Transflower [120] \u5229\u7528\u5f52\u4e00\u5316\u6d41\u6765\u8868\u8fbe\u6709\u6548\u8fd0\u52a8\u7684\u590d\u6742\u6982\u7387\u5206\u5e03\u3002Bailando [124] \u9996\u5148\u4f7f\u7528 VQ-VAE \u7f16\u7801\u7c3f\u5bf9 3D \u8fd0\u52a8\u8fdb\u884c\u91cf\u5316\uff0c\u7136\u540e\u5229\u7528\u6f14\u5458\u8bc4\u5224\u751f\u6210\u9884\u8bad\u7ec3\u53d8\u6362\u5668 (GPT) \u4ece\u5b66\u4e60\u5230\u7684\u6f5c\u5728\u7f16\u7801\u4e2d\u7ec4\u6210\u5171\u76f8\u5e72\u5e8f\u5217\u3002EDGE [15] \u5efa\u7acb\u5728\u6269\u6563\u6a21\u578b\u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u4efb\u52a1\u8868\u8ff0\u4e3a\u4ee5\u97f3\u4e50\u4e3a\u6761\u4ef6\u7684\u8fd0\u52a8\u53bb\u566a\u95ee\u9898\u3002\u53e6\u4e00\u7c7b\u65b9\u6cd5\u4ee5\u7ecf\u5178\u7684\u8fd0\u52a8\u56fe\u6846\u67b6\u4e3a\u57fa\u7840\uff0c\u5c06\u8fd0\u52a8\u751f\u6210\u89c6\u4e3a\u5728\u9884\u5148\u6784\u5efa\u7684\u56fe\u4e2d\u6c42\u89e3\u6700\u4f18\u8def\u5f84\u3002ChoreoMaster [86] \u5efa\u8bae\u5b66\u4e60\u97f3\u4e50\u548c\u821e\u8e48\u7684\u5171\u4eab\u5d4c\u5165\u7a7a\u95f4\uff0c\u7136\u540e\u5c06\u5b66\u4e60\u5230\u7684\u5d4c\u5165\u548c\u4e13\u5bb6\u77e5\u8bc6\u6574\u5408\u5230\u57fa\u4e8e\u56fe\u7684\u8fd0\u52a8\u5408\u6210\u6846\u67b6\u4e2d\u3002PC-Dance [8] \u901a\u8fc7\u5c06\u951a\u59ff\u52bf\u4f5c\u4e3a\u989d\u5916\u8f93\u5165\uff0c\u8fdb\u4e00\u6b65\u5b9e\u73b0\u4e86\u53ef\u63a7\u7684\u52a8\u4f5c\u751f\u6210\u3002ChoreoGraph [125] \u5229\u7528\u8fd0\u52a8\u7247\u6bb5\u626d\u66f2\u6765\u89e3\u51b3\u8282\u594f\u5bf9\u9f50\u95ee\u9898\uff0c\u4ece\u800c\u51cf\u5c11\u56fe\u4e2d\u7684\u8fd0\u52a8\u8282\u70b9\u548c\u8ba1\u7b97\u6210\u672c\u3002</p> <p>\u867d\u7136\u5927\u591a\u6570\u65b9\u6cd5\u90fd\u5229\u7528\u7b80\u77ed\u7684\u97f3\u4e50\u821e\u8e48\u7247\u6bb5\u8fdb\u884c\u8bad\u7ec3\uff0c\u4f46\u7528\u6237\u7684\u4e00\u4e2a\u91cd\u8981\u9700\u6c42\u662f\u4e3a\u6574\u9996\u6b4c\u66f2\u751f\u6210\u6c38\u6052\u7684\u821e\u8e48\u3002\u7136\u800c\uff0c\u957f\u5e8f\u5217\u751f\u6210\u5f80\u5f80\u4f1a\u4ea7\u751f\u9519\u8bef\u79ef\u7d2f\u95ee\u9898\uff0c\u5bfc\u81f4\u52a8\u4f5c\u51bb\u7ed3\u3002\u4e3a\u4e86\u514b\u670d\u8fd9\u4e00\u96be\u9898\uff0cHuang \u7b49\u4eba[119] \u63d0\u51fa\u4e86\u4e00\u79cd\u8bfe\u7a0b\u5b66\u4e60\u65b9\u6cd5\uff0c\u968f\u7740\u8bad\u7ec3\u7684\u6df1\u5165\uff0c\u8be5\u65b9\u6cd5\u4f1a\u4ece\u6559\u5e08\u5f3a\u8feb\u65b9\u6848\u9010\u6b65\u8fc7\u6e21\u5230\u81ea\u56de\u5f52\u65b9\u6848\u3002Sun \u7b49\u4eba[127] \u91c7\u7528 VQ-VAE \u5b66\u4e60\u4f4e\u7ef4\u6d41\u5f62\uff0c\u4ece\u800c\u6709\u6548\u5730\u53bb\u566a\u8fd0\u52a8\u5e8f\u5217\u3002\u4ed6\u4eec\u8fd8\u5f00\u53d1\u4e86\u8fc7\u53bb-\u672a\u6765\u8fd0\u52a8\u52a8\u6001\u5e93\uff0c\u4e3a\u672a\u6765\u8fd0\u52a8\u63d0\u4f9b\u660e\u786e\u7684\u524d\u9a8c\u3002Aristidou \u7b49\u4eba[128]\u4ece\u59ff\u52bf\u3001\u4e3b\u9898\u548c\u821e\u8e48\u7f16\u6392\u7b49\u4e09\u4e2a\u5c42\u9762\u89e3\u51b3\u4e86\u8fd9\u4e00\u95ee\u9898\uff0c\u751f\u6210\u4e86\u4fdd\u6301\u7279\u5b9a\u6d41\u6d3e\u5168\u5c40\u7ed3\u6784\u7684\u957f\u821e\u8e48\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#speech-to-gesture","title":"Speech to Gesture","text":"<p>\u8bed\u97f3\u5230\u624b\u52bf\u751f\u6210\uff08\u6216\u534f\u540c\u8bed\u97f3\u624b\u52bf\u5408\u6210\uff09\u4efb\u52a1\u65e8\u5728\u6839\u636e\u8f93\u5165\u7684\u8bed\u97f3\u97f3\u9891\u548c\u67d0\u4e9b\u60c5\u51b5\u4e0b\u7684\u6587\u672c\u8bb0\u5f55\u751f\u6210\u4e00\u7cfb\u5217\u4eba\u7c7b\u624b\u52bf\u3002\u534f\u540c\u8bed\u97f3\u624b\u52bf\u5728\u975e\u8bed\u8a00\u4ea4\u6d41\u4e2d\u8d77\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\uff0c\u5b83\u80fd\u4f20\u8fbe\u8bf4\u8bdd\u8005\u7684\u4fe1\u606f\u548c\u60c5\u611f\uff0c\u589e\u8fdb\u4eb2\u5bc6\u611f\u548c\u4fe1\u4efb\u611f[171]\u3002\u9488\u5bf9\u8fd9\u9879\u4efb\u52a1\u7684\u73b0\u6709\u7814\u7a76\u4e00\u822c\u4fa7\u91cd\u4e8e\u4e0a\u534a\u8eab\u8fd0\u52a8\uff0c\u56e0\u4e3a\u4e0b\u534a\u8eab\u8fd0\u52a8\u5f80\u5f80\u662f\u9759\u6001\u7684\u3002</p> <p>\u4e00\u4e9b\u7814\u7a76\u6839\u636e\u6587\u672c\u8bb0\u5f55\u751f\u6210\u8bed\u97f3\u624b\u52bf [136]\u3001[172]\u3001[173]\u3002\u66f4\u591a\u7684\u7814\u7a76\u5de5\u4f5c\u4fa7\u91cd\u4e8e\u8bed\u97f3\u97f3\u9891\u6761\u4ef6\u3002\u4f8b\u5982\uff0cGinosar \u7b49\u4eba[130] \u6536\u96c6\u4e86\u4e00\u4e2a\u7279\u5b9a\u4eba\u7269\u624b\u52bf\u7684\u8bed\u97f3\u89c6\u9891\u6570\u636e\u96c6\uff0c\u5e76\u5229\u7528\u5bf9\u6297\u635f\u5931\u8bad\u7ec3\u4e86\u4e00\u4e2a\u751f\u6210\u6a21\u578b\u3002Aud2Repr2Pose [11] \u9996\u5148\u6784\u5efa\u8fd0\u52a8\u81ea\u52a8\u7f16\u7801\u5668\uff0c\u7136\u540e\u8bad\u7ec3\u8bed\u97f3\u7f16\u7801\u5668\uff0c\u5c06\u8bed\u97f3 au-dio \u6620\u5c04\u5230\u8fd0\u52a8\u8868\u793a\u3002StyleGestures [133] \u5bf9 MoGlow [174] \u8fdb\u884c\u4e86\u6539\u7f16\uff0c\u5e76\u8fdb\u4e00\u6b65\u5bf9\u751f\u6210\u7684\u52a8\u4f5c\u98ce\u683c\u8fdb\u884c\u4e86\u6307\u5bfc\u6027\u63a7\u5236\u3002\u94b1\u7b49\u4eba[140]\u8ba4\u8bc6\u5230\u8bed\u97f3\u4e0d\u80fd\u5b8c\u5168\u51b3\u5b9a\u624b\u52bf\uff0c\u56e0\u6b64\u5efa\u8bae\u5b66\u4e60\u4e00\u7ec4\u624b\u52bf\u6a21\u677f\u5411\u91cf\uff0c\u4e3a\u751f\u6210\u7684\u624b\u52bf\u7684\u4e00\u822c\u5916\u89c2\u5efa\u6a21\u3002Audio2Gestures [141]\u5c06\u52a8\u4f5c\u8868\u793a\u5206\u4e3a\u97f3\u9891-\u52a8\u4f5c\u5171\u4eab\u4fe1\u606f\u548c\u7279\u5b9a\u52a8\u4f5c\u4fe1\u606f\uff0c\u4ee5\u53cd\u6620\u97f3\u9891\u548c\u52a8\u4f5c\u4e4b\u95f4\u4e00\u5bf9\u591a\u7684\u6620\u5c04\u5173\u7cfb\u3002Habibie \u7b49\u4eba[137] \u5e94\u7528\u4e86\u4e00\u4e2a\u97f3\u9891\u7f16\u7801\u5668\u548c\u4e09\u4e2a\u72ec\u7acb\u7684\u89e3\u7801\u5668\uff0c\u5206\u522b\u7528\u4e8e\u9762\u90e8\u3001\u8eab\u4f53\u548c\u624b\u90e8\u3002DisCo [143] \u9996\u5148\u5c06\u8fd0\u52a8\u5e8f\u5217\u805a\u7c7b\u4e3a\u5185\u5bb9\u6bb5\u548c\u8282\u594f\u6bb5\uff0c\u7136\u540e\u5728\u5185\u5bb9\u5e73\u8861\u7684\u6570\u636e\u5206\u5e03\u4e0a\u8fdb\u884c\u8bad\u7ec3\u3002Habibie \u7b49\u4eba[145] \u5efa\u8bae\u9996\u5148\u4f7f\u7528 k-Nearest Neighbors\uff08k-NN\uff09\u7b97\u6cd5\u4ece\u6570\u636e\u5e93\u4e2d\u641c\u7d22\u6700\u5408\u7406\u7684\u52a8\u4f5c\uff0c\u7136\u540e\u5bf9\u52a8\u4f5c\u8fdb\u884c\u7ec6\u5316\u3002DiffGesture [147]\u5229\u7528\u5e26\u6709\u8de8\u6a21\u6001\u53d8\u6362\u5668\u7f51\u7edc\u7684\u6269\u6563\u6a21\u578b\uff0c\u63a2\u7d22\u65e0\u5206\u7c7b\u5668\u6307\u5bfc\uff0c\u4ee5\u5e73\u8861\u591a\u6837\u6027\u548c\u624b\u52bf\u8d28\u91cf\u3002</p> <p>\u7136\u800c\uff0c\u7531\u4e8e\u4e2a\u4eba\u6027\u683c\u7684\u4e0d\u540c\uff0c\u4eba\u4e0e\u4eba\u4e4b\u95f4\u7684\u5171\u540c\u8bed\u97f3\u624b\u52bf\u53ef\u80fd\u4f1a\u6709\u5f88\u5927\u7684\u5dee\u5f02\u3002\u4e0a\u8ff0\u65b9\u6cd5\u6ca1\u6709\u660e\u786e\u8003\u8651\u8bf4\u8bdd\u8005\u7684\u8eab\u4efd\uff0c\u56e0\u6b64\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u8bf4\u8bdd\u8005\u5efa\u7acb\u5355\u72ec\u7684\u6a21\u578b\uff0c\u8fd9\u5c31\u963b\u788d\u4e86\u5c06\u8fd9\u4e9b\u65b9\u6cd5\u5e94\u7528\u5230\u4e00\u822c\u573a\u666f\u4e2d\u3002\u6b64\u5916\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4ec5\u9650\u4e8e\u5bf9\u6587\u672c\u6216\u8bed\u97f3\u97f3\u9891\u5efa\u6a21\uff0c\u65e0\u6cd5\u5c06\u4e24\u79cd\u6a21\u5f0f\u7ed3\u5408\u8d77\u6765\u3002\u53d7\u8fd9\u4e9b\u7f3a\u9677\u7684\u542f\u53d1\uff0cYoon \u7b49\u4eba[135] \u63d0\u51fa\u4e86\u4e00\u4e2a\u8003\u8651\u6587\u672c\u3001\u97f3\u9891\u548c\u8bf4\u8bdd\u4eba\u8eab\u4efd\u4e09\u6a21\u6001\u4e0a\u4e0b\u6587\u7684\u751f\u6210\u6846\u67b6\u3002Bhattacharya \u7b49\u4eba[138] \u901a\u8fc7\u60c5\u611f\u7f16\u7801\u5668\u548c MFCC \u7f16\u7801\u5668\u8fdb\u4e00\u6b65\u63d0\u9ad8\u4e86\u60c5\u611f\u8868\u8fbe\u7684\u751f\u6210\u8d28\u91cf\u3002Mix-StAGE [132] \u4e3a\u6bcf\u4e2a\u8bf4\u8bdd\u8005\u5b66\u4e60\u72ec\u7279\u7684\u98ce\u683c\u5d4c\u5165\uff0c\u5e76\u540c\u65f6\u4e3a\u591a\u4e2a\u8bf4\u8bdd\u8005\u751f\u6210\u52a8\u4f5c\u3002HA2G [142] \u91c7\u7528\u5206\u5c42\u97f3\u9891\u5b66\u4e60\u5668\u63d0\u53d6\u97f3\u9891\u8868\u5f81\uff0c\u5e76\u91c7\u7528\u5206\u5c42\u59ff\u52bf\u63a8\u7406\u5668\u6df7\u5408\u97f3\u9891\u548c\u8eab\u4f53\u90e8\u4f4d\u4e4b\u95f4\u7684\u7279\u5f81\u3002Liu \u7b49\u4eba[144] \u57fa\u4e8e\u5927\u89c4\u6a21\u6570\u636e\u96c6\u5f00\u53d1\u4e86\u7ea7\u8054\u8fd0\u52a8\u7f51\u7edc (CaMN)\uff0c\u8fdb\u4e00\u6b65\u8003\u8651\u4e86\u9762\u90e8\u8868\u60c5\u3001\u60c5\u7eea\u548c\u8bed\u4e49\u3002Rhythmic Gesticulator [146] \u4ece\u8bed\u8a00\u7406\u8bba\u4e2d\u6c72\u53d6\u7075\u611f\uff0c\u660e\u786e\u6a21\u62df\u4e86\u8bed\u97f3\u548c\u624b\u52bf\u4e4b\u95f4\u7684\u8282\u594f\u548c\u8bed\u4e49\u5173\u7cfb\u3002TalkSHOW [148] \u91c7\u7528\u4e86\u4e00\u4e2a\u9762\u90e8\u52a8\u4f5c\u81ea\u52a8\u7f16\u7801\u5668\uff0c\u4ee5\u53ca\u4e00\u4e2a\u57fa\u4e8e\u8bed\u97f3\u97f3\u9891\u548c\u8bf4\u8bdd\u8005\u8eab\u4efd\u7684\u8eab\u4f53\u548c\u624b\u90e8\u52a8\u4f5c\u5408\u6210 VQ-VAE\u3002QPGesture [149] \u5229\u7528 VQ-VAE \u548c\u83b1\u6587\u65af\u5766\u8ddd\u79bb\u5f15\u5165\u4e86\u57fa\u4e8e\u91cf\u5316\u548c\u76f8\u4f4d\u5f15\u5bfc\u7684\u52a8\u4f5c\u5339\u914d\u6846\u67b6\u3002LDA[5]\u5c55\u793a\u4e86\u5728\u97f3\u4e50-\u821e\u8e48\u3001\u8bed\u97f3-\u624b\u52bf\u548c\u8def\u5f84\u9a71\u52a8\u8fd0\u52a8\u4e2d\u4f7f\u7528\u65e0\u5206\u7c7b\u5668\u5f15\u5bfc\u6269\u6563\u6a21\u578b\u7684\u98ce\u683c\u63a7\u5236\u3002GestureDiffuCLIP [6] \u4e3a\u8bed\u97f3\u624b\u52bf\u751f\u6210\u9002\u914d\u4e86\u4e00\u4e2a\u6f5c\u5728\u6269\u6563\u6a21\u578b\uff0c\u5e76\u53ef\u901a\u8fc7\u98ce\u683c\u63d0\u793a\uff08\u6587\u672c\u3001\u52a8\u4f5c\u6216\u89c6\u9891\uff09\u8fdb\u884c\u63a7\u5236\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#scene-conditioned-motion-generation","title":"SCENE-CONDITIONED MOTION GENERATION","text":"<p>\u4eba\u7c7b\u8fd0\u52a8\u662f\u4ee5\u76ee\u6807\u4e3a\u5bfc\u5411\u7684\uff0c\u5e76\u53d7\u5230\u5468\u56f4\u573a\u666f\u5e03\u5c40\u7684\u5f71\u54cd\uff0c\u4eba\u5728\u79fb\u52a8\u8eab\u4f53\u4e0e\u73af\u5883\u4e92\u52a8\u7684\u540c\u65f6\uff0c\u4e5f\u53d7\u5230\u73af\u5883\u7269\u7406\u7279\u6027\u7684\u5236\u7ea6\u3002\u573a\u666f\u5230\u8fd0\u52a8\u751f\u6210\u4efb\u52a1\u65e8\u5728\u751f\u6210\u7b26\u5408\u573a\u666f\u80cc\u666f\u7684\u5408\u7406\u4eba\u4f53\u8fd0\u52a8\uff0c\u662f\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u548c\u8ba1\u7b97\u673a\u89c6\u89c9\u9886\u57df\u957f\u671f\u5b58\u5728\u7684\u95ee\u9898\u3002\u672c\u7814\u7a76\u4e3b\u8981\u5173\u6ce8\u7b2c 2 \u8282\u4e2d\u8ba8\u8bba\u7684\u6570\u636e\u9a71\u52a8\u7684\u573a\u666f\u6761\u4ef6\u8fd0\u52a8\u751f\u6210\u65b9\u6cd5\uff0c\u4e0d\u5305\u62ec\u57fa\u4e8e\u7269\u7406\u6a21\u62df\u7684\u65b9\u6cd5 [175]\u3001[176]\u3001[177]\u3001[178]\u3001[179]\u3002\u5728\u4eba\u7c7b\u8fd0\u52a8\u751f\u6210\u4e4b\u524d\uff0c\u4e5f\u6709\u4e00\u4e9b\u7814\u7a76\u63d0\u51fa\u4e86\u5728\u573a\u666f\u6761\u4ef6\u4e0b\u5408\u6210\u9759\u6001\u4eba\u7c7b\u59ff\u52bf\u7684\u65b9\u6cd5 [180]\u3001[181]\u3001[182]\u3001[183]\u3001[184]\uff0c\u7531\u4e8e\u8fd9\u4e9b\u65b9\u6cd5\u4e5f\u4e0d\u5728\u672c\u7814\u7a76\u8303\u56f4\u5185\uff0c\u56e0\u6b64\u4e0d\u518d\u8fdb\u4e00\u6b65\u8ba8\u8bba\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u5c06\u4ece\u573a\u666f\u8868\u793a\u548c\u751f\u6210\u7ba1\u9053\u4e24\u4e2a\u89d2\u5ea6\u8ba8\u8bba\u73b0\u6709\u65b9\u6cd5\u3002\u8bf7\u53c2\u89c1\u8868 1 \u5e95\u90e8\u56fe\u5757\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#scene-representation","title":"Scene representation","text":"<p>\u76ee\u524d\u7684\u65b9\u6cd5\u5229\u7528\u4e86\u591a\u79cd\u573a\u666f\u8868\u793a\u65b9\u6cd5\uff0c\u5305\u62ec\u4e8c\u7ef4\u56fe\u50cf[154]\u3001[157]\u3001\u70b9\u4e91[16]\u3001[165]\u3001[167]\u3001[168]\u3001\u7f51\u683c[156]\u3001[161]\u3001\u4e09\u7ef4\u7269\u4f53[66]\u3001[152]\u3001[160]\u3001[163]\u3001[164]\u3001[166]\u548c\u7279\u5b9a\u76ee\u6807\u4f4d\u7f6e[156]\u3001[162]\u3001[167]\u3001[168]\u3002Cao \u7b49\u4eba[154]\u548c Wang \u7b49\u4eba[157]\u4f7f\u7528 RGB \u56fe\u50cf\u4f5c\u4e3a\u573a\u666f\u7ea6\u675f\u6761\u4ef6\uff0c\u5e76\u901a\u8fc7\u63d0\u53d6\u56fe\u50cf\u4e2d\u7684\u7279\u5f81\u8fdb\u884c\u9690\u5f0f\u878d\u5408\u3002\u8bb8\u591a\u7814\u7a76 [16]\u3001[156]\u3001[161]\u3001[165]\u3001[167]\u3001[168] \u4f7f\u7528\u70b9\u4e91\u6216\u7f51\u683c\u6765\u8868\u793a\u573a\u666f\uff0c\u4f8b\u5982\u6709\u5bb6\u5177\u7684\u623f\u95f4\uff0c\u5e76\u901a\u5e38\u4f7f\u7528 PointNet [185] \u63d0\u53d6\u573a\u666f\u7279\u5f81\u4f5c\u4e3a\u6761\u4ef6\u4fe1\u53f7\u3002\u5bf9\u4e8e\u4e09\u7ef4\u7269\u4f53\uff0c\u914d\u7f6e\u5305\u62ec\u7269\u4f53\u7684\u4e09\u7ef4\u4f4d\u7f6e[152]\u3001[163]\u3001\u7269\u4f53\u7c7b\u578b[152]\u3001[166]\u548c\u7269\u4f53\u7684\u4f53\u7d20\u8868\u793a[66]\u3001[160]\u3002\u4f8b\u5982\uff0cCorona \u7b49\u4eba[152] \u4f7f\u7528\u7269\u4f53\u7684\u4e09\u7ef4\u8fb9\u754c\u6846\u8868\u793a\u7269\u4f53\uff0c\u5e76\u5c06\u7269\u4f53\u7c7b\u578b\uff08\u5982\u676f\u5b50\uff09\u4f5c\u4e3a\u5355\u51fb\u5411\u91cf\uff0c\u7136\u540e\u5f15\u5165\u6709\u5411\u8bed\u4e49\u56fe\uff0c\u5171\u540c\u5bf9\u4eba\u4f53\u8fd0\u52a8\u548c\u7269\u4f53\u8fdb\u884c\u53c2\u6570\u5316\u3002\u4ed6\u4eec\u4f7f\u7528\u9012\u5f52\u795e\u7ecf\u7f51\u7edc\uff08RNN\uff09\u751f\u6210\u4eba\u7684\u52a8\u4f5c\uff0c\u4ee5\u4fbf\u4e0e\u7269\u4f53\u4e92\u52a8\u3002COUCH [66] \u7684\u76ee\u6807\u662f\u751f\u6210\u53ef\u63a7\u7684\u3001\u63a5\u89e6\u9a71\u52a8\u7684\u4eba\u6905\u4e92\u52a8\uff0c\u5e76\u4f7f\u7528\u5360\u4f4d\u4f53\u7d20\u7f51\u683c\u6765\u8868\u793a\u6905\u5b50\uff0c\u4ece\u800c\u51c6\u786e\u6355\u6349\u4eba\u4e0e\u6905\u5b50\u4e4b\u95f4\u7684\u7a7a\u95f4\u5173\u7cfb\u3002\u53e6\u4e00\u4e2a\u4f7f\u7528\u4e09\u7ef4\u7269\u4f53\u4f5c\u4e3a\u573a\u666f\u6761\u4ef6\u7684\u5178\u578b\u4f8b\u5b50\u662f\u751f\u6210\u5168\u8eab\u6293\u53d6\u8fd0\u52a8\u7684\u4f5c\u54c1[163]\u3001[164]\u3001[166]\uff0c\u5176\u4e2d\u63d0\u4f9b\u4e86\u4e09\u7ef4\u7269\u4f53\u4f4d\u7f6e[163]\u3001[166]\u6216\u70b9\u4e91[164]\u3002\u4e00\u4e9b\u7814\u7a76\u7ed9\u51fa\u4e86\u76ee\u6807\u4f4d\u7f6e [156]\u3001[162]\u3001[167]\u3001[168] \u4ee5\u6307\u5bfc\u8fd0\u52a8\u751f\u6210\u3002\u4f8b\u5982\uff0cGAMMA[162] \u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u6765\u5b66\u4e60\u7b56\u7565\u7f51\u7edc\uff0c\u4ee5\u5408\u6210\u7ed9\u51fa\u5730\u9762\u76ee\u6807\u4f4d\u7f6e\u7684\u5408\u7406\u8fd0\u52a8\u3002SceneDiffuser [167] \u4e3a\u5404\u79cd\u4e09\u7ef4\u573a\u666f\u7406\u89e3\u4efb\u52a1\u63d0\u51fa\u4e86\u4e00\u4e2a\u901a\u7528\u6846\u67b6\uff0c\u5e76\u4f7f\u7528\u6269\u6563\u6a21\u578b [22] \u6839\u636e\u70b9\u4e91\u573a\u666f\u548c\u76ee\u6807\u751f\u6210\u53ef\u4fe1\u7684\u4eba\u4f53\u8fd0\u52a8\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5927\u591a\u6570\u65b9\u6cd5\u90fd\u91c7\u7528\u4e00\u79cd\u4ee5\u4e0a\u7684\u573a\u666f\u8868\u793a\u4f5c\u4e3a\u8f93\u5165\uff0c\u5176\u4e2d\u8bb8\u591a\u65b9\u6cd5\u5c06\u8fc7\u53bb\u7684\u8fd0\u52a8\u6216\u8d77\u59cb\u59ff\u52bf[66]\u3001[152]\u3001[154]\u3001[156]\u3001[157]\u3001[158]\u3001[165]\u3001[168]\u4e00\u8d77\u4f5c\u4e3a\u8f93\u5165\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u65b9\u6cd5\u5229\u7528\u989d\u5916\u7684\u8bed\u8a00\u6307\u4ee4[16]\u6216\u52a8\u4f5c\u6807\u7b7e[160]\u3001[161]\u751f\u6210\u52a8\u4f5c\u3002\u4f8b\u5982\uff0cHUMANISE[16] \u7ed3\u5408\u4e86\u8bed\u8a00\u63cf\u8ff0\uff08\u5982\u8d70\u5230\u684c\u8fb9\uff09\u6765\u751f\u6210\u573a\u666f\u4e2d\u7684\u4eba\u4f53\u52a8\u4f5c\u3002IMoS [166] \u7ed3\u5408\u4e86\u9884\u671f\u52a8\u4f5c\u6307\u4ee4\uff08\u5982\u559d\u6c34\uff09\uff0c\u6839\u636e\u7269\u4f53\u7684\u4f4d\u7f6e\u548c\u7c7b\u578b\u751f\u6210\u53ef\u63a7\u7684\u5168\u8eab\u6293\u53d6\u52a8\u4f5c\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#generation-pipeline","title":"Generation pipeline","text":"<p>\u5927\u591a\u6570\u73b0\u6709\u65b9\u6cd5\u90fd\u63d0\u51fa\u4e86\u4e00\u4e2a\u591a\u9636\u6bb5\u6d41\u6c34\u7ebf\u3002\u4e00\u79cd\u5e38\u89c1\u7684\u6d41\u6c34\u7ebf\u662f\u9996\u5148\u9884\u6d4b\u76ee\u6807\u4f4d\u7f6e [154],[157] \u6216\u76ee\u6807\u4ea4\u4e92\u951a\u70b9 [66], [160], [161]\uff0c\u7136\u540e\u89c4\u5212\u8def\u5f84\u6216\u8f68\u8ff9\uff0c\u6700\u540e\u6cbf\u8f68\u8ff9\u586b\u5145\u8fd0\u52a8 [66], [154], [157], [160], [161], [165], [167]\u3002\u4f8b\u5982\uff0cCao \u7b49\u4eba[154] \u63d0\u51fa\u4e86\u4e00\u79cd\u4e09\u9636\u6bb5\u8fd0\u52a8\u751f\u6210\u65b9\u6cd5\uff0c\u5373\u5728\u573a\u666f\u4e3a\u4e8c\u7ef4\u56fe\u50cf\u7684\u60c5\u51b5\u4e0b\uff0c\u9996\u5148\u9884\u6d4b\u4e8c\u7ef4\u76ee\u6807\uff0c\u7136\u540e\u89c4\u5212\u4e8c\u7ef4\u548c\u4e09\u7ef4\u8def\u5f84\uff0c\u6700\u540e\u901a\u8fc7 VAE \u6a21\u578b\u6cbf\u8def\u5f84\u751f\u6210\u4e09\u7ef4\u8fd0\u52a8\u3002\u4e0e Cao \u7b49\u4eba[154]\u7c7b\u4f3c\uff0cWang \u7b49\u4eba[157]\u4f7f\u7528 RGB \u56fe\u50cf\u4f5c\u4e3a\u573a\u666f\u4e0a\u4e0b\u6587\uff0c\u901a\u8fc7\u9996\u5148\u751f\u6210\u8f68\u8ff9\u7136\u540e\u5f15\u5bfc\u8fd0\u52a8\u751f\u6210\u6765\u5408\u6210\u4eba\u7c7b\u672a\u6765\u7684\u8fd0\u52a8\u3002\u4ed6\u4eec\u8fd8\u8fdb\u4e00\u6b65\u589e\u52a0\u4e86\u4e00\u4e2a\u5224\u522b\u5206\u652f\uff0c\u4ee5\u5f3a\u8c03\u5bf9\u573a\u666f\u80cc\u666f\u7684\u8003\u8651\u3002SAMP [160] \u4e5f\u91c7\u7528\u4e86\u591a\u9636\u6bb5\u6d41\u6c34\u7ebf\uff0c\u9996\u5148\u4f30\u8ba1\u76ee\u6807\u4f4d\u7f6e\u548c\u7269\u4f53\u7684\u4ea4\u4e92\u65b9\u5411\uff0c\u7136\u540e\u6839\u636e\u8d77\u59cb\u8eab\u4f53\u59ff\u52bf\u89c4\u5212\u4e09\u7ef4\u8def\u5f84\uff0c\u6700\u540e\u5229\u7528\u81ea\u56de\u5f52 VAE \u751f\u6210\u5408\u7406\u7684\u4eba\u4f53\u8fd0\u52a8\u3002SAMP [160] \u53ea\u5728\u6700\u540e\u4e00\u5e27\u5efa\u7acb\u7c97\u7565\u7684\u4eba-\u7269\u4ea4\u4e92\u6a21\u578b\uff0c\u76f8\u6bd4\u4e4b\u4e0b\uff0cMao \u7b49\u4eba[165]\u63d0\u51fa\u4f7f\u7528\u6bcf\u5173\u8282\u63a5\u89e6\u56fe\u4e3a\u672a\u6765\u6bcf\u4e00\u5e27\u7684\u6bcf\u4e2a\u4eba\u4f53\u5173\u8282\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u63a5\u89e6\u4fe1\u606f\uff0c\u4ee5\u63d0\u9ad8\u751f\u6210\u8d28\u91cf\u3002Wang \u7b49\u4eba[161]\u9996\u5148\u9884\u6d4b\u4e86\u591a\u6837\u5316\u7684\u4eba\u4e0e\u573a\u666f\u4ea4\u4e92\u951a\u70b9\uff0c\u7136\u540e\u5c06\u6807\u51c6 A\u2217 \u7b97\u6cd5\u4e0e\u573a\u666f\u611f\u77e5\u968f\u673a\u63a2\u7d22\u76f8\u7ed3\u5408\uff0c\u5b9e\u73b0\u4e86\u591a\u6837\u5316\u7684\u8def\u5f84\u89c4\u5212\u3002\u6700\u540e\uff0c\u4f7f\u7528\u57fa\u4e8e VAE \u7684\u6846\u67b6\u5408\u6210\u951a\u70b9\u59ff\u52bf\u5e76\u5b8c\u6210\u8fd0\u52a8\u3002GOAL [163] \u548c SAGA [164] \u4ee5\u751f\u6210\u5168\u8eab\u6293\u53d6\u8fd0\u52a8\u4e3a\u76ee\u6807\uff0c\u63d0\u51fa\u4e86\u4e24\u6b65\u6cd5\uff0c\u5373\u9996\u5148\u751f\u6210\u7ed3\u675f\u6293\u53d6\u59ff\u52bf\uff0c\u7136\u540e\u751f\u6210\u5168\u8eab\u8fd0\u52a8\u3002\u4e0e GOAL[163]\u4e0d\u540c\uff0cSAGA[164]\u901a\u8fc7\u4f7f\u7528 VAE \u6a21\u578b\uff0c\u8fdb\u4e00\u6b65\u6355\u6349\u5230\u4e86\u6293\u53d6\u7ed3\u675f\u59ff\u52bf\u548c\u4e2d\u95f4\u8fd0\u52a8\u7684\u591a\u6837\u6027\u3002</p> <p>\u8fd8\u6709\u4e00\u4e9b\u7814\u7a76\u5229\u7528\u7ed9\u5b9a\u7684\u76ee\u6807\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u9884\u6d4b\u76ee\u6807\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0cWang \u7b49\u4eba[156] \u63d0\u51fa\u4e86\u4e00\u79cd\u5206\u5c42\u7ba1\u9053\uff0c\u5229\u7528 VAE \u6a21\u578b[19] \u5728\u6bcf\u4e2a\u7ed9\u5b9a\u7684\u5b50\u76ee\u6807\u4e0a\u751f\u6210\u9759\u6001\u4eba\u4f53\uff0c\u5e76\u5229\u7528\u53cc\u5411 LSTM[186] \u4e3a\u573a\u666f\u4e2d\u7684\u6bcf\u5bf9\u5b50\u76ee\u6807\u751f\u6210\u4e2d\u95f4\u7684\u4eba\u4f53\u8fd0\u52a8\u3002\u901a\u8fc7\u62fc\u63a5\u8fd9\u4e9b\u8fd0\u52a8\u7247\u6bb5\uff0c\u53ef\u4ee5\u5408\u6210\u957f\u671f\u7684\u4eba\u4f53\u8fd0\u52a8\u3002CIRCLE [168] \u6700\u8fd1\u63d0\u51fa\u7684\u4e00\u79cd\u6a21\u5f0f\u662f\uff0c\u9996\u5148\u4f7f\u7528\u7ebf\u6027\u63d2\u503c\u5bf9\u7ed9\u5b9a\u7684\u8d77\u59cb\u59ff\u52bf\u548c\u76ee\u6807\u4f4d\u7f6e\u8fdb\u884c\u8fd0\u52a8\u521d\u59cb\u5316\uff0c\u7136\u540e\u63d0\u51fa\u4e00\u4e2a\u573a\u666f\u611f\u77e5\u8fd0\u52a8\u7ec6\u5316\u6a21\u5757\u6765\u751f\u6210\u6700\u7ec8\u8fd0\u52a8\u3002\u573a\u666f\u7279\u5f81\u4ece\u4e09\u7ef4\u70b9\u4e91\u4e2d\u63d0\u53d6\u5e76\u878d\u5408\u5230\u7ec6\u5316\u6a21\u5757\u4e2d\u3002</p> <p>\u8868 1\uff1a \u4eba\u4f53\u8fd0\u52a8\u751f\u6210\u7684\u4ee3\u8868\u4f5c\u54c1\u3002\"Kpts. \"\u548c \"Rot. \"\u5206\u522b\u8868\u793a\u5173\u952e\u70b9\u548c\u4e09\u7ef4\u65cb\u8f6c\u3002\u2020 \u8868\u793a\u53ef\u9009\u6761\u4ef6\u3002</p> <p></p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#datasets","title":"DATASETS","text":"<p>\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u7528\u4e8e\u751f\u6210\u4eba\u4f53\u8fd0\u52a8\u7684\u6570\u636e\u96c6\u3002\u5e38\u7528\u7684\u6570\u636e\u96c6\u53ef\u4ee5\u6839\u636e\u5176\u4f34\u968f\u7684\u6761\u4ef6\u4fe1\u53f7\u8fdb\u884c\u5206\u7c7b\u3002\u6211\u4eec\u5c06\u5206\u522b\u4ecb\u7ecd\u6587\u672c\u3001\u97f3\u9891\u548c\u573a\u666f\u7684\u914d\u5bf9\u4eba\u4f53\u8fd0\u52a8\u548c\u6761\u4ef6\u4fe1\u53f7\u6570\u636e\u96c6\u3002\u5728\u8868 2 \u4e2d\uff0c\u6211\u4eec\u603b\u7ed3\u4e86\u8fd9\u4e9b\u6570\u636e\u96c6\u7684\u4e3b\u8981\u7279\u6027\uff0c\u540c\u65f6\u8fd8\u5217\u51fa\u4e86\u6ca1\u6709\u989d\u5916\u6761\u4ef6\u4fe1\u53f7\u7684\u5927\u89c4\u6a21\u4eba\u4f53\u8fd0\u52a8\u6570\u636e\u96c6\u4f5c\u4e3a\u53c2\u8003\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#text-motion-datasets","title":"Text-Motion Datasets","text":"<p>KIT \u8fd0\u52a8\u8bed\u8a00[100]\u662f\u4e00\u4e2a\u7531\u8fd0\u52a8\u6570\u636e\u548c\u8bed\u8a00\u6570\u636e\u7ec4\u6210\u7684\u914d\u5bf9\u6570\u636e\u96c6\u3002\u8fd0\u52a8\u6570\u636e\u901a\u8fc7\u57fa\u4e8e\u5149\u5b66\u6807\u8bb0\u7684\u7cfb\u7edf\u6536\u96c6\uff0c\u800c\u8bed\u8a00\u6570\u636e\u5219\u7531\u63cf\u8ff0\u6bcf\u4e2a\u8fd0\u52a8\u6570\u636e\u7684\u6ce8\u91ca\u7ec4\u6210\u3002</p> <p>UESTC [91] \u5305\u542b\u4f7f\u7528\u5fae\u8f6f Kinect V2 \u4f20\u611f\u5668\u4ee5\u4e09\u79cd\u6a21\u5f0f\uff08RGB \u89c6\u9891\u3001\u6df1\u5ea6\u548c\u9aa8\u9abc\u5e8f\u5217\uff09\u6355\u83b7\u7684\u8fd0\u52a8\u6570\u636e\u3002\u8be5\u6570\u636e\u96c6\u5305\u62ec 15 \u4e2a\u7ad9\u59ff\u548c\u5750\u59ff\u52a8\u4f5c\u7c7b\u522b\uff0c\u4ee5\u53ca 25 \u4e2a\u4ec5\u7ad9\u59ff\u52a8\u4f5c\u7c7b\u522b\uff0c\u5171\u8ba1 40 \u4e2a\u4e0d\u540c\u7c7b\u522b\u3002</p> <p>NTU-RGB+D 120 [87] \u662f NTU-RGB+D [93] \u6570\u636e\u96c6\u7684\u6269\u5c55\uff0c\u589e\u52a0\u4e86 60 \u4e2a\u7c7b\u522b\u548c 57600 \u4e2a RGB+D \u89c6\u9891\u6837\u672c\u3002\u8be5\u6570\u636e\u96c6\u5305\u542b 120 \u4e2a\u4e0d\u540c\u7684\u52a8\u4f5c\u7c7b\u522b\uff0c\u4ee3\u8868\u4e86\u65e5\u5e38\u6d3b\u52a8\u548c\u5065\u5eb7\u76f8\u5173\u6d3b\u52a8\u7684\u6df7\u5408\u3002</p> <p>HumanAct12 [7]\u6e90\u81ea PHSPD [188]\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e13\u95e8\u7684\u4e09\u7ef4\u8fd0\u52a8\u7247\u6bb5\u96c6\uff0c\u5206\u4e3a\u4e00\u7cfb\u5217\u5178\u578b\u7684\u4eba\u7c7b\u884c\u4e3a\u52a8\u4f5c\u3002\u8be5\u6570\u636e\u96c6\u5305\u62ec\u8d70\u3001\u8dd1\u3001\u5750\u548c\u70ed\u8eab\u7b49\u65e5\u5e38\u52a8\u4f5c\uff0c\u5206\u4e3a 12 \u4e2a\u52a8\u4f5c\u7c7b\u522b\u548c 34 \u4e2a\u5b50\u7c7b\u522b\u3002</p> <p>BABEL. Bodies, Action and Behavior with English Labels [96]\uff0c\u4e3a\u7efc\u5408\u52a8\u4f5c\u6570\u636e\u96c6 AMASS [40]\u4e2d\u7684\u52a8\u4f5c\u5e8f\u5217\u63d0\u4f9b\u6587\u672c\u6807\u7b7e\u3002\u8be5\u6570\u636e\u96c6\u63d0\u4f9b\u4e24\u4e2a\u72ec\u7279\u7ea7\u522b\u7684\u6807\u7b7e\uff1a\u6574\u4e2a\u5e8f\u5217\u7684\u5e8f\u5217\u7ea7\u6807\u7b7e\u548c\u5355\u4e2a\u5e27\u7684\u5e27\u7ea7\u6807\u7b7e\u3002\u8be5\u6570\u636e\u96c6\u6db5\u76d6 250 \u4e2a\u8fd0\u52a8\u7c7b\u522b\u7684 28k \u591a\u4e2a\u5e8f\u5217\u548c 63k \u4e2a\u5e27\u3002</p> <p>HumanML3D [3] \u662f\u7531 HumanAct12 [7] \u548c AMASS [40] \u6570\u636e\u96c6\u7ec4\u5408\u800c\u6210\u7684\u6570\u636e\u96c6\uff0c\u5b83\u5305\u62ec\u4e0e\u6bcf\u4e2a\u8fd0\u52a8\u5e8f\u5217\u76f8\u5bf9\u5e94\u7684\u4e09\u4e2a\u4e0d\u540c\u7684\u6587\u672c\u63cf\u8ff0\u3002\u8be5\u6570\u636e\u96c6\u6db5\u76d6\u4e86\u65e5\u5e38\u751f\u6d3b\u3001\u4f53\u80b2\u3001\u6742\u6280\u548c\u827a\u672f\u4e2d\u7684\u5404\u79cd\u6d3b\u52a8\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#audio-motion-datasets","title":"Audio-Motion Datasets","text":"<p>\u6839\u636e\u7b2c 3.1.2 \u8282\u4e2d\u8ba8\u8bba\u7684\u6570\u636e\u6536\u96c6\u6280\u672f\uff0c\u97f3\u9891\u8fd0\u52a8\u6570\u636e\u96c6\u53ef\u5206\u4e3a\u53d7\u63a7\u6570\u636e\u96c6\u548c\u91ce\u751f\u6570\u636e\u96c6\u3002\u53d7\u63a7\u97f3\u9891-\u52a8\u4f5c\u5bf9\u662f\u901a\u8fc7\u52a8\u4f5c\u6355\u6349\u7cfb\u7edf\uff08\u57fa\u4e8e\u6807\u8bb0\u6216\u65e0\u6807\u8bb0\uff09\u6216\u4eba\u5de5\u6807\u6ce8\u83b7\u5f97\u7684\u3002\u76f8\u53cd\uff0c\u91ce\u5916\u97f3\u9891\u8fd0\u52a8\u5bf9\u901a\u5e38\u662f\u901a\u8fc7\u641c\u7d22\u548c\u4e0b\u8f7d\u5e26\u6709\u7279\u5b9a\u5173\u952e\u5b57\u7684\u5728\u7ebf\u89c6\u9891\uff0c\u5e76\u5229\u7528\u73b0\u6210\u7684\u59ff\u52bf\u4f30\u8ba1\u5668\u63d0\u53d6\u4eba\u4f53\u8fd0\u52a8\u6765\u83b7\u5f97\u7684\u3002\u867d\u7136\u91ce\u5916\u6570\u636e\u5177\u6709\u66f4\u9ad8\u7684\u52a8\u4f5c\u591a\u6837\u6027\u548c\u66f4\u5f3a\u7684\u53ef\u6269\u5c55\u6027\uff0c\u4f46\u63d0\u53d6\u7684\u52a8\u4f5c\u5f80\u5f80\u4e0d\u591f\u51c6\u786e\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#controlled-datasets","title":"Controlled Datasets","text":"<p>Tang \u7b49\u4eba[117]\u7387\u5148\u6355\u6349\u4e86 4 \u79cd\u7c7b\u578b\uff08\u534e\u5c14\u5179\u3001\u63a2\u6208\u3001\u6070\u6070\u548c\u4f26\u5df4\uff09\u7684 3D \u821e\u8e48\u548c\u76f8\u5e94\u97f3\u4e50\u3002</p> <p>AIST++ [115] \u7531 AIST \u821e\u8e48\u89c6\u9891\u6570\u636e\u5e93 [189] \u6784\u5efa\u3002\u4ed6\u4eec\u5229\u7528\u591a\u89c6\u89d2\u89c6\u9891\u6765\u4f30\u8ba1\u6444\u50cf\u673a\u53c2\u6570\u3001\u4e09\u7ef4\u5173\u952e\u70b9\u548c SMPL \u53c2\u6570\u3002PATS. Pose-Audio-Transcript-Style [120] \u6570\u636e\u96c6\u7531\u5404\u79cd\u821e\u8005\u548c\u821e\u8e48\u98ce\u683c\u7684\u540c\u6b65\u97f3\u9891\u548c\u5f55\u97f3\u7ec4\u6210\u3002</p> <p>ShaderMotion[120]\u4ece\u793e\u4ea4\u865a\u62df\u73b0\u5b9e\u5e73\u53f0\u4e2d\u63d0\u53d6\u821e\u8e48\uff0c\u5176\u4e2d\u5934\u50cf\u7684\u8fd0\u52a8\u662f\u901a\u8fc7 6 \u70b9\u8ddf\u8e2a\u7cfb\u7edf\u4ece\u53c2\u4e0e\u8005\u7684\u88e4\u5b50\u4e2d\u91cd\u65b0\u5b9a\u4f4d\u7684\u3002</p> <p>Aristidou \u7b49\u4eba[128]\u9080\u8bf7\u4e86\u4e00\u7ec4\u4e13\u4e1a\u821e\u8005\u8fdb\u884c\u52a8\u4f5c\u6355\u6349\uff0c\u5e76\u4ee5\u957f\u5e8f\u5217\u7684\u97f3\u4e50-\u821e\u8e48\u914d\u5bf9\u4e3a\u7279\u8272\u3002</p> <p>Trinity [134] \u662f\u4e00\u4e2a\u4f1a\u8bdd\u8bed\u97f3\u7684\u591a\u6a21\u6001\u6570\u636e\u96c6\uff0c\u5305\u542b\u4e00\u540d\u6f14\u5458 4 \u5c0f\u65f6\u7684\u97f3\u9891\u3001\u52a8\u4f5c\u548c\u89c6\u9891\u6570\u636e\u3002\u901a\u8fc7\u57fa\u4e8e\u6807\u8bb0\u7684\u52a8\u4f5c\u6355\u6349\uff08MoCap\uff09\u7cfb\u7edf\u53ef\u83b7\u5f97\u7cbe\u786e\u7684\u4e09\u7ef4\u52a8\u4f5c\u3002</p> <p>BEAT. \u8eab\u4f53-\u8868\u60c5-\u97f3\u9891-\u6587\u672c\u6570\u636e\u96c6[144]\u662f\u4e00\u4e2a\u7528\u4e8e\u5bf9\u8bdd\u624b\u52bf\u5408\u6210\u7684\u5927\u89c4\u6a21\u8bed\u4e49\u548c\u60c5\u611f\u6570\u636e\u96c6\uff0c\u5177\u6709\u4e30\u5bcc\u7684\u5e27\u7ea7\u60c5\u611f\u548c\u8bed\u4e49\u76f8\u5173\u6027\u6ce8\u91ca\u3002\u5b83\u8fd8\u5305\u62ec\u9762\u90e8\u8868\u60c5\u548c\u591a\u8bed\u8a00\u6f14\u8bb2\u3002</p> <p>\u4e2d\u6587\u624b\u52bf [146] \u662f\u4e00\u4e2a\u4e2d\u6587\u8bed\u97f3\u624b\u52bf\u6570\u636e\u96c6\uff0c\u53ef\u7528\u4e8e\u63a2\u7d22\u8de8\u8bed\u8a00\u624b\u52bf\u751f\u6210\u3002</p> <p>\u9664\u4e86\u57fa\u4e8e MoCap \u7684\u89e3\u51b3\u65b9\u6848\u5916\uff0c\u4e00\u4e9b\u7814\u7a76\u8fd8\u5efa\u8bae\u4ece\u52a8\u753b\u5e08\u5236\u4f5c\u7684\u89d2\u8272\u52a8\u753b\u8d44\u6e90\u4e2d\u63d0\u53d6\u97f3\u9891-\u52a8\u4f5c\u5bf9\u3002\u4f8b\u5982\uff0cChen \u7b49\u4eba[86] \u548c MMD-ARC [8] \u5229\u7528\u52a8\u6f2b\u793e\u533a\u7684 MikuMikuDance (MMD) \u8d44\u6e90\u3002Phantom-Dance [123] \u7531\u4e13\u4e1a\u821e\u8005\u7ec4\u6210\u7684\u7ecf\u9a8c\u4e30\u5bcc\u7684\u52a8\u753b\u5e08\u56e2\u961f\u521b\u4f5c\u821e\u8e48\u52a8\u4f5c\u3002</p> <p>MDC\u3002\u591a\u821e\u8005\u7f16\u821e[126]\u6570\u636e\u96c6\u4fa7\u91cd\u4e8e\u7fa4\u821e\uff0c\u4ed6\u4eec\u9080\u8bf7\u821e\u8005\u7f16\u6392\u52a8\u4f5c\u77ed\u8bed\uff0c\u5e76\u6ce8\u91ca\u821e\u8005\u7684\u65f6\u95f4\u6fc0\u6d3b\u5e8f\u5217\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#in-the-wild-datasets","title":"In-the-wild Datasets","text":"<p>Lee \u7b49\u4eba[118]\u4ece\u4e92\u8054\u7f51\u4e0a\u6536\u96c6\u5e26\u6709\u5173\u952e\u5b57\uff08\u82ad\u857e\u3001\u5c0a\u5df4\u548c\u563b\u54c8\uff09\u7684\u821e\u8e48\u89c6\u9891\uff0c\u5e76\u5229\u7528 OpenPose[72] \u63d0\u53d6\u4e8c\u7ef4\u8eab\u4f53\u5173\u952e\u70b9\u3002</p> <p>Huang \u7b49\u4eba[119] \u89e3\u51b3\u4e86\u7f3a\u4e4f\u957f\u671f\u821e\u8e48\u751f\u6210\u6570\u636e\u96c6\u7684\u95ee\u9898\u3002\u8be5\u6570\u636e\u96c6\u4ee5\u4e92\u8054\u7f51\u4e0a\u7684\u4e00\u5206\u949f\u97f3\u4e50-\u821e\u8e48\u5bf9\u4e3a\u7279\u5f81\u3002</p> <p>AIOZ-GDANCE [129] \u6536\u96c6\u4e86\u91ce\u5916\u7fa4\u821e\u89c6\u9891\u548c\u97f3\u4e50\uff0c\u5e76\u4f7f\u7528 SMPLify-X [67] \u7684\u65f6\u95f4\u6269\u5c55\u5c06 SMPL \u5e8f\u5217\u62df\u5408\u5230\u8ddf\u8e2a\u7684\u4e8c\u7ef4\u5173\u952e\u70b9\u4e0a\u3002\u4ed6\u4eec\u624b\u52a8\u4fee\u6b63\u4e86\u4e8c\u7ef4\u5173\u952e\u70b9\u548c\u4e09\u7ef4\u8fd0\u52a8\u7684\u9519\u8bef\u60c5\u51b5\uff0c\u5e76\u4f7f\u7528\u4eba\u7c7b\u6ce8\u91ca\u6765\u786e\u5b9a\u591a\u4eba\u7684\u76f8\u5bf9\u6df1\u5ea6\u3002</p> <p>TED-Gesture[136]\u662f TED \u6f14\u8bb2\u7684\u534f\u540c\u8bed\u97f3\u624b\u52bf\uff0c\u5176\u4e2d\u5305\u542b\u89c6\u9891\u548c\u82f1\u6587\u6587\u672c\uff08\u4ee5\u53ca\u77ed\u8bed\u7684\u65f6\u95f4\u6233\uff09\u3002\u4f5c\u8005\u4f7f\u7528 OpenPose [72] \u63d0\u53d6\u4e8c\u7ef4\u59ff\u52bf\uff0c\u7136\u540e\u8bbe\u8ba1\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u5c06\u4e8c\u7ef4\u59ff\u52bf\u8f6c\u6362\u4e3a\u4e09\u7ef4\u59ff\u52bf\u3002</p> <p>Speech2Gesture [130] \u662f\u4e00\u4e2a\u9488\u5bf9\u7279\u5b9a\u8bf4\u8bdd\u4eba\u7684\u624b\u52bf\u6570\u636e\u96c6\u3002\u8be5\u6570\u636e\u96c6\u57fa\u4e8e\u7535\u89c6\u8282\u76ee\u548c\u5927\u5b66\u8bb2\u5ea7\u7684\u65e0\u6807\u8bb0\u91ce\u5916\u89c6\u9891\u3002\u4f2a\u5730\u9762\u5b9e\u51b5\u662f\u901a\u8fc7\u73b0\u6210\u7684 2D \u59ff\u6001\u4f30\u8ba1\u7b97\u6cd5 [72] \u83b7\u5f97\u7684\u3002\u8be5\u6570\u636e\u96c6\u5305\u542b 10 \u4f4d\u5177\u6709\u4e0d\u540c\u8fd0\u52a8\u98ce\u683c\u7684\u6f14\u8bb2\u8005\uff0c\u5305\u62ec\u7535\u89c6\u8282\u76ee\u4e3b\u6301\u4eba\u3001\u5927\u5b66\u8bb2\u5e08\u548c\u7535\u89c6\u5e03\u9053\u5bb6\uff0c\u56e0\u6b64\u53ef\u4ee5\u7814\u7a76\u7279\u5b9a\u4eba\u7684\u8fd0\u52a8\u751f\u6210\u3002</p> <p>TED-Gesture++[135]\u6269\u5c55\u4e86TED-Gesture[136]\uff0c\u589e\u52a0\u4e86\u540c\u6b65\u89c6\u9891\u3001\u8bed\u97f3\u97f3\u9891\u548c\u8f6c\u5f55\u82f1\u6587\u8bed\u97f3\u6587\u672c\u3002\u4e09\u7ef4\u8eab\u4f53\u5173\u952e\u70b9\u662f\u901a\u8fc7\u4e00\u79cd\u65f6\u95f4\u4e09\u7ef4\u59ff\u6001\u4f30\u8ba1\u65b9\u6cd5 [37] \u83b7\u5f97\u7684\u3002</p> <p>PATS. Pose-Audio-Transcript-Style [132] \u5c06 [130] \u6269\u5c55\u5230\u66f4\u591a\u7684\u6f14\u8bb2\u8005\uff0c\u5305\u62ec 15 \u4f4d\u8131\u53e3\u79c0\u4e3b\u6301\u4eba\u30015 \u4f4d\u8bb2\u5e08\u30013 \u4f4d\u4f18\u9177\u4e3b\u64ad\u548c 2 \u4f4d\u7535\u89c6\u5e03\u9053\u5bb6\u3002\u540c\u6837\uff0c\u4ed6\u4eec\u7528 OpenPose [72] \u63d0\u53d6\u4e86\u9aa8\u67b6\u5173\u952e\u70b9\u3002\u6b64\u5916\uff0cPATS \u8fd8\u63d0\u4f9b\u4e86\u4e0e\u8fd0\u52a8\u548c\u97f3\u9891\u4fe1\u53f7\u76f8\u5bf9\u5e94\u7684\u6587\u672c\u3002</p> <p>Speech2Gesture-3D [137] \u4f7f\u7528\u6700\u5148\u8fdb\u7684 3D \u4eba\u8138[190]\u3001[191]\u3001\u8eab\u4f53[192]\u548c\u624b[193]\u59ff\u6001\u4f30\u8ba1\u7b97\u6cd5\u5bf9 Speech2Gesture \u6570\u636e\u96c6[130]\u8fdb\u884c\u6ce8\u91ca\u3002\u7531\u4e8e\u5206\u8fa8\u7387\u4f4e\u3001\u4e09\u7ef4\u91cd\u5efa\u6548\u679c\u5dee\uff0c[130] \u4e2d\u7684\u4e00\u4e9b\u89c6\u9891\u548c\u4e3b\u9898\u88ab\u6392\u9664\u5728\u5916\u3002</p> <p>SHOW\u3002\u91ce\u5916\u540c\u6b65\u6574\u4f53\u4f18\u5316[148] \u5728 Speech2Gesture \u6570\u636e\u96c6[130]\u4e0a\u7528\u624b\u52bf\u548c\u9762\u90e8\u8868\u60c5\u62df\u5408 SMPL-X[67] \u53c2\u6570\u6a21\u578b\u3002\u5b83\u91c7\u7528\u57fa\u4e8e\u56de\u5f52\u7684\u5148\u8fdb\u65b9\u6cd5 [194]\u3001[195]\u3001[196] \u6539\u8fdb\u4e86 SMPLify-X [67]\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#scene-motion-datasets","title":"Scene-Motion Datasets","text":"<p>WBHM\u3002\u5168\u8eab\u4eba\u4f53\u8fd0\u52a8[153] \u5305\u542b\u7531 Vicon \u8fd0\u52a8\u6355\u6349\u7cfb\u7edf\u91c7\u96c6\u7684\u591a\u4eba\u548c\u591a\u7269\u4f53\u7684\u4e09\u7ef4\u5168\u8eab\u8fd0\u52a8\u6570\u636e\u3002\u8fd0\u52a8\u6570\u636e\u4e0d\u4ec5\u8003\u8651\u4e86\u4eba\u4f53\u7684\u8fd0\u52a8\uff0c\u8fd8\u8003\u8651\u4e86\u4e0e\u4eba\u4f53\u4e92\u52a8\u7684\u7269\u4f53\u7684\u4f4d\u7f6e\u548c\u8fd0\u52a8\u3002\u5176\u4e2d\u5305\u62ec 41 \u79cd\u4e0d\u540c\u7269\u4f53\u7684\u4e09\u7ef4\u6a21\u578b\uff0c\u5982\u697c\u68af\u3001\u676f\u5b50\u3001\u98df\u7269\u7b49\u3002</p> <p>PiGraph\u3002\u539f\u578b\u4ea4\u4e92\u56fe[182]\u626b\u63cf\u771f\u5b9e\u4e16\u754c\u7684\u4e09\u7ef4\u573a\u666f[197]\uff0c\u5e76\u4f7f\u7528 Kinect.v2 \u6355\u6349\u4eba\u4e0e\u73af\u5883\u4ea4\u4e92\u65f6\u7684\u9aa8\u9abc\u3002\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u6240\u6709\u7269\u4f53\u90fd\u4eba\u5de5\u6807\u6ce8\u4e86\u8bed\u4e49\u6807\u7b7e\u3002\u591a\u91cd\u4ea4\u4e92\u4e5f\u6709\u6ce8\u91ca\u3002</p> <p>PROX. Proximal Relationships with Object eXclusion [155] \u5305\u542b\u4eba\u4eec\u4e0e\u771f\u5b9e\u5ba4\u5185\u73af\u5883\u4e92\u52a8\u7684 RGB-D \u89c6\u9891\uff0c\u7531 Kinect-One \u4f20\u611f\u5668\u6355\u6349\u3002\u7269\u4f53\u7684\u59ff\u52bf\u4e5f\u662f\u901a\u8fc7\u9644\u52a0\u6807\u8bb0\u6355\u6349\u5230\u7684\uff0c\u6bcf\u4e2a\u7269\u4f53\u90fd\u6709 CAD \u6a21\u578b\u3002</p> <p>i3DB [159] \u5305\u542b\u591a\u4e2a\u4eba\u4e0e\u573a\u666f\u7684\u4ea4\u4e92\uff0c\u6bcf\u4e2a\u6355\u83b7\u7684 RGB \u89c6\u9891\u90fd\u6807\u6ce8\u4e86\u7269\u4f53\u4f4d\u7f6e\u548c\u4e09\u7ef4\u4eba\u4f53\u8fd0\u52a8\u3002\u6bcf\u4e2a\u7269\u4f53\u90fd\u6709\u4e00\u4e2a\u7c7b\u522b\u6807\u7b7e\uff0c\u5982\u6905\u5b50\u6216\u684c\u5b50\u3002\u4e09\u7ef4\u4eba\u4f53\u8fd0\u52a8\u662f\u901a\u8fc7\u4f30\u8ba1\u4e8c\u7ef4\u8fd0\u52a8[198]\u5e76\u8fdb\u884c\u4eba\u5de5\u6821\u6b63\u83b7\u5f97\u7684\u3002</p> <p>GTA-IM GTA Indoor Motion[154]\u662f\u4e00\u4e2a\u5927\u578b\u5408\u6210\u6570\u636e\u96c6\uff0c\u57fa\u4e8e\u300a\u4fa0\u76d7\u730e\u8f66\u624b\u300b\uff08GTA\uff09\u6e38\u620f\u5f15\u64ce\u6355\u6349\u4eba\u4e0e\u573a\u666f\u7684\u4e92\u52a8\u3002\u8be5\u6570\u636e\u96c6\u5305\u542b RGB-D \u89c6\u9891\u3001\u4e09\u7ef4\u4eba\u4f53\u59ff\u52bf\u3001\u573a\u666f\u5b9e\u4f8b\u6807\u7b7e\u7b49\u3002\u8bf7\u6ce8\u610f\uff0cGTA \u6e38\u620f\u5f15\u64ce\u4e2d\u7684\u52a8\u4f5c\u6765\u81ea\u57fa\u4e8e\u6807\u8bb0\u7684\u52a8\u4f5c\u6355\u6349\u7cfb\u7edf\u3002</p> <p>GRAB\u3002GRasping Actions with Bodies[97]\u662f\u4e00\u4e2a\u5927\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u901a\u8fc7 Vicon \u52a8\u4f5c\u6355\u6349\u7cfb\u7edf\u6355\u6349\u771f\u5b9e\u4e16\u754c\u4e2d\u5bf9\u4e09\u7ef4\u7269\u4f53\u7684\u5168\u8eab\u6293\u53d6\u3002\u6ce8\u91ca\u4e2d\u5305\u62ec\u4eba\u4f53\u8fd0\u52a8\u3001\u7269\u4f53\u8fd0\u52a8\u3001\u624b\u90e8\u64cd\u4f5c\u548c\u63a5\u89e6\u533a\u57df\u3002</p> <p>HPS\u3002Human POSEitioning System\uff08\u4eba\u4f53\u59ff\u52bf\u5b9a\u4f4d\u7cfb\u7edf\uff09[187] \u5229\u7528\u5934\u6234\u5f0f\u6444\u50cf\u673a\u6355\u6349\u7684\u56fe\u50cf\u4ee5\u53ca\u88ab\u6444\u4f53\u5728\u9884\u5148\u626b\u63cf\u7684\u4e09\u7ef4\u573a\u666f\u4e2d\u7684\u4e09\u7ef4\u59ff\u52bf\u548c\u4f4d\u7f6e\uff0c\u6355\u6349\u4e09\u7ef4\u4eba\u4f53\u4e0e\u5927\u578b\u4e09\u7ef4\u573a\u666f\uff08300-1000 \u5e73\u65b9\u7c73\uff0c\u6700\u5927\u53ef\u8fbe 2500 \u5e73\u65b9\u7c73\uff09\u7684\u4e92\u52a8\u3002</p> <p>SAMP. \u573a\u666f\u611f\u77e5\u8fd0\u52a8\u9884\u6d4b[160]\u662f\u4e00\u4e2a\u4e30\u5bcc\u591a\u6837\u7684\u4eba\u4e0e\u573a\u666f\u4ea4\u4e92\u6570\u636e\u96c6\uff0c\u7531\u914d\u5907 54 \u53f0 Vicon \u6444\u50cf\u673a\u7684\u9ad8\u5206\u8fa8\u7387\u5149\u5b66\u6807\u8bb0 MoCap \u7cfb\u7edf\u6536\u96c6\u3002\u5728\u52a8\u4f5c\u6355\u6349\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u4e86\u591a\u79cd\u7c7b\u578b\u7684\u7269\u4f53\uff0c\u5982\u6c99\u53d1\u548c\u6276\u624b\u6905\u3002</p> <p>COUCH [66] \u5219\u6355\u6349\u4e86\u4eba\u7c7b\u4e0e\u6905\u5b50\u5728\u4e0d\u540c\u5750\u59ff\u548c\u81ea\u7531\u79fb\u52a8\u65b9\u5f0f\u4e0b\u7684\u4e92\u52a8\u3002\u8be5\u6570\u636e\u96c6\u4f7f\u7528 IMU \u548c Kinects \u91c7\u96c6\uff0c\u5177\u6709\u591a\u4e2a\u4e3b\u4f53\u3001\u771f\u5b9e\u7684\u6905\u5b50\u51e0\u4f55\u5f62\u72b6\u3001\u7cbe\u786e\u6ce8\u91ca\u7684\u624b\u90e8\u63a5\u89e6\u4ee5\u53ca RGB-D \u56fe\u50cf\u3002</p> <p>HUMANISE [16] \u662f\u4e00\u4e2a\u5927\u89c4\u6a21\u3001\u8bed\u4e49\u4e30\u5bcc\u7684\u5408\u6210\u6570\u636e\u96c6\uff0c\u5b83\u5c06 AMASS \u6570\u636e\u96c6 [199] \u4e2d\u6355\u83b7\u7684\u4eba\u4f53\u8fd0\u52a8\u5e8f\u5217\u4e0e ScanNet \u6570\u636e\u96c6 [200] \u4e2d\u626b\u63cf\u7684\u5ba4\u5185\u573a\u666f\u8fdb\u884c\u5bf9\u9f50\u3002\u6bcf\u4e2a\u8fd0\u52a8\u7247\u6bb5\u90fd\u6709\u5173\u4e8e\u52a8\u4f5c\u7c7b\u578b\u548c\u76f8\u5e94\u4ea4\u4e92\u5bf9\u8c61\u7684\u4e30\u5bcc\u8bed\u4e49\uff0c\u8fd9\u4e9b\u8bed\u4e49\u7531\u8bed\u8a00\u63cf\u8ff0\u6307\u5b9a\u3002CIRCLE [168] \u6536\u96c6\u4e86 9 \u4e2a\u573a\u666f\u4e2d\u957f\u8fbe 10 \u5c0f\u65f6\u7684\u5de6\u53f3\u624b\u4f38\u5c55\u52a8\u4f5c\uff0c\u8fd9\u4e9b\u52a8\u4f5c\u662f\u5728\u73b0\u5b9e\u4e16\u754c\uff08\u4f7f\u7528 Vicon \u7cfb\u7edf\uff09\u548c VR \u5e94\u7528\u7a0b\u5e8f\u4e2d\u6355\u83b7\u7684\u3002\u5176\u4e2d\u5305\u62ec\u722c\u884c\u3001\u5f2f\u66f2\u7b49\u591a\u79cd\u8fd0\u52a8\u3002</p> <p>\u4e0a\u8ff0\u6570\u636e\u96c6\u4e0d\u4ec5\u5305\u542b\u573a\u666f\uff0c\u8fd8\u5305\u542b\u4eba\u4f53\u8fd0\u52a8\u3002\u540c\u65f6\uff0c\u8fd8\u6709\u4e00\u4e9b\u53ea\u5305\u542b\u573a\u666f\u7684\u6570\u636e\u96c6\u7ecf\u5e38\u88ab\u7528\u4f5c\u6d4b\u8bd5\u96c6\uff0c\u5982 Matterport3D [13]\u3001Replica [201] \u548c ScanNet [200]\u3002</p> <p>\u8868 2\uff1a\u7528\u4e8e\u751f\u6210\u4eba\u4f53\u8fd0\u52a8\u7684\u6570\u636e\u96c6\u3002\"Kpts. \"\u548c \"Rot. \"\u5206\u522b\u8868\u793a\u5173\u952e\u70b9\u548c\u4e09\u7ef4\u65cb\u8f6c\u3002</p> <p></p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#evaluation-metrics","title":"EVALUATION METRICS","text":"<p>\u9002\u5f53\u7684\u8bc4\u4f30\u6307\u6807\u5bf9\u4e8e\u6bd4\u8f83\u4e0d\u540c\u7684\u65b9\u6cd5\u548c\u63a8\u52a8\u8be5\u9886\u57df\u7684\u8fdb\u6b65\u81f3\u5173\u91cd\u8981\u3002\u7136\u800c\uff0c\u7531\u4e8e \"\u4e00\u5bf9\u591a \"\u7684\u6620\u5c04\u6027\u8d28\u3001\u4eba\u7c7b\u8bc4\u4ef7\u7684\u4e3b\u89c2\u6027\u4ee5\u53ca\u6761\u4ef6\u4fe1\u53f7\u7684\u9ad8\u7ea7\u7ebf\u7d22\uff0c\u5bf9\u5408\u6210\u4eba\u4f53\u8fd0\u52a8\u7684\u8bc4\u4ef7\u662f\u4e00\u4e2a\u975e\u96be\u4e8b\u3002\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ece\u4e0d\u540c\u65b9\u9762\u603b\u7ed3\u5e38\u7528\u7684\u8bc4\u4f30\u6307\u6807\uff0c\u5e76\u8ba8\u8bba\u5b83\u4eec\u7684\u4f18\u52bf\u548c\u5c40\u9650\u6027\u3002\u603b\u7ed3\u89c1\u8868 3\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#fidelity","title":"Fidelity","text":"<p>\u4fdd\u771f\u5ea6\u6307\u6807\u65e8\u5728\u4ece\u81ea\u7136\u5ea6\u3001\u5e73\u6ed1\u5ea6\u3001\u53ef\u4fe1\u5ea6\u7b49\u65b9\u9762\u8bc4\u4f30\u751f\u6210\u8fd0\u52a8\u7684\u603b\u4f53\u8d28\u91cf\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#comparison-with-ground-truth","title":"Comparison with Ground-truth","text":"<p>\u5728\u8bc4\u4f30\u751f\u6210\u7684\u8fd0\u52a8\u8d28\u91cf\u65f6\uff0c\u5c06\u5176\u4e0e\u5730\u9762\u5b9e\u51b5\u8fdb\u884c\u6bd4\u8f83\u662f\u6700\u76f4\u63a5\u7684\u65b9\u6cd5\u3002</p> <p>\u8ddd\u79bb\u3002\u5927\u591a\u6570\u7814\u7a76[11]\u3001[16]\u3001[104]\u3001[105]\u3001[108]\u3001[110]\u3001[111]\u3001[114]\u3001[117]\u3001[130]\u3001[135]\u3001[137]\u3001[138]\u3001[140]\u3001[141]\u3001[146]\u3001[152]\u3001[154]\u3001[156]\u3001[158]\u3001[160]\u3001[163]\u3001[164]\u3001[165]\u3001[166]\u3001[167]\u3001[168]\u91c7\u7528\u8ddd\u79bb\u6307\u6807\u6765\u6d4b\u91cf\u5408\u6210\u8fd0\u52a8\u4e0e\u5730\u9762\u771f\u5b9e\u8fd0\u52a8\u4e4b\u95f4\u7684\u5dee\u5f02\u3002Li \u7b49\u4eba[123]\u5229\u7528\u5f52\u4e00\u5316\u529f\u7387\u8c31\u76f8\u4f3c\u5ea6\uff08NPSS\uff09[202]\u8bc4\u4f30\u957f\u671f\u8fd0\u52a8\u5408\u6210\u80fd\u529b\u3002NPSS \u5728\u9891\u57df\u8fd0\u884c\uff0c\u4e0e MSE \u76f8\u6bd4\uff0c\u5bf9\u5e27\u9519\u4f4d\u7684\u654f\u611f\u6027\u8f83\u4f4e\u3002\u540c\u65f6\uff0c\u5f52\u4e00\u5316\u65b9\u5411\u8fd0\u52a8\u76f8\u4f3c\u6027\uff08NDMS\uff09[203] \u88ab\u63d0\u51fa\u6765\u6d4b\u91cf\u8fd0\u52a8\u9884\u6d4b\u573a\u4e2d\u8fd0\u52a8\u65b9\u5411\u7684\u76f8\u4f3c\u6027\u548c\u8fd0\u52a8\u5e45\u5ea6\u7684\u6bd4\u7387\u3002</p> <p>\u51c6\u786e\u6027\u3002\u7531\u4e8e\u4ec5\u76f4\u63a5\u8ba1\u7b97\u8ddd\u79bb\u53ef\u80fd\u65e0\u6cd5\u63d0\u4f9b\u5168\u9762\u7684\u8bc4\u4f30\uff0c\u4e00\u4e9b\u7814\u7a76[130]\u3001[141]\u8fdb\u4e00\u6b65\u8ba1\u7b97\u4e86\u4e09\u7ef4\u5173\u952e\u70b9\u6b63\u786e\u7387\uff08PCK\uff09[204]\uff0c\u8be5\u6307\u6807\u4e00\u76f4\u662f\u59ff\u52bf\u4f30\u8ba1\u7684\u5e38\u7528\u8bc4\u4f30\u6307\u6807\u3002\u4e3a\u4e86\u8ba1\u7b97 PCK\uff0c\u9700\u8981\u786e\u5b9a\u51c6\u786e\u751f\u6210\u7684\u5173\u8282\u6bd4\u4f8b\uff0c\u5982\u679c\u4e00\u4e2a\u5173\u8282\u4e0e\u76ee\u6807\u7684\u8ddd\u79bb\u4fdd\u6301\u5728\u9884\u5b9a\u4e49\u7684\u9608\u503c\u5185\uff0c\u5219\u8ba4\u4e3a\u8be5\u5173\u8282\u662f\u51c6\u786e\u7684\u3002</p> <p>\u7136\u800c\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6761\u4ef6\u8f93\u5165\uff0c\u5730\u9762\u5b9e\u51b5\u53ea\u4ee3\u8868\u4e00\u79cd\u53ef\u884c\u7684\u7ed3\u679c\uff0c\u65e0\u6570\u79cd\u5907\u9009\u65b9\u6848\u90fd\u6709\u53ef\u80fd\u6ee1\u8db3\u8981\u6c42\u3002\u56e0\u6b64\uff0c\u4ec5\u4ec5\u4f9d\u9760\u5730\u9762\u5b9e\u51b5\u6bd4\u8f83\u6765\u8fdb\u884c\u8fd0\u52a8\u751f\u6210\u8bc4\u4f30\u53ef\u80fd\u7f3a\u4e4f\u5168\u9762\u6027\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#naturalness","title":"Naturalness","text":"<p>\u8fd0\u52a8\u8d28\u91cf\u8bc4\u4f30\u751f\u6210\u8fd0\u52a8\u7684\u81ea\u7136\u5ea6\uff0c\u901a\u5e38\u901a\u8fc7\u6bd4\u8f83\u751f\u6210\u7684\u8fd0\u52a8\u6d41\u5f62\u4e0e\u771f\u5b9e\u8fd0\u52a8\u6d41\u5f62\u6765\u8861\u91cf\u3002\u6839\u636e\u7528\u4e8e\u8bc4\u4f30\u7684\u7a7a\u95f4\uff0c\u73b0\u6709\u6307\u6807\u53ef\u5206\u4e3a\u8fd0\u52a8\u7a7a\u95f4\u548c\u7279\u5f81\u7a7a\u95f4\u3002</p> <p>\u8fd0\u52a8\u7a7a\u95f4\u3002\u6709\u4e9b\u65b9\u6cd5\u6839\u636e\u8fd0\u52a8\u7a7a\u95f4\u7684\u51e0\u4f55\u7edf\u8ba1\u6765\u6d4b\u91cf\u5206\u5e03\u8ddd\u79bb\u3002\u4f8b\u5982\uff0c\u4e00\u4e9b\u7814\u7a76 [105]\u3001[108]\u3001[110]\u3001[111]\u3001[114] \u62a5\u544a\u4e86\u5e73\u5747\u65b9\u5dee\u8bef\u5dee (AVE)\uff0c\u8ba1\u7b97\u771f\u5b9e\u8fd0\u52a8\u4e0e\u5408\u6210\u8fd0\u52a8\u4e4b\u95f4\u7684\u65b9\u5dee\u3002QPGesture [149] \u6d4b\u91cf\u901f\u5ea6\u5206\u5e03\u76f4\u65b9\u56fe\u4e4b\u95f4\u7684\u6d77\u7075\u683c\u8ddd\u79bb [205]\u3002\u4e00\u4e9b\u7814\u7a76 [149]\u3001[158] \u8fd8\u6bd4\u8f83\u4e86\u5173\u8282\u4f4d\u7f6e\u7684\u9ad8\u9636\u5bfc\u6570\uff08\u52a0\u901f\u5ea6\u3001\u633a\u4e3e\uff09\u3002SAMP [160] \u548c Wang \u7b49\u4eba [161] \u6839\u636e\u59ff\u52bf\u65cb\u8f6c\u8ba1\u7b97\u4e24\u4e2a\u5206\u5e03\u7684\u5f17\u96f7\u8c22\u7279\u8ddd\u79bb (FD)\u3002\u5728\u8fd0\u52a8\u9884\u6d4b\u6587\u732e\u4e2d\uff0c\u529f\u7387\u8c31\u71b5 (PSEnt) \u548c KL \u5206\u6b67 (PSKL) [206] \u88ab\u7528\u4e8e\u8ba1\u7b97\u5206\u5e03\u8ddd\u79bb\u3002SAGA [164] \u5229\u7528 PSKL-J [206]\u3001[207] \u6765\u6d4b\u91cf\u751f\u6210\u8fd0\u52a8\u548c\u771f\u5b9e\u8fd0\u52a8\u7684\u52a0\u901f\u5ea6\u5206\u5e03\uff0c\u4ee5\u8bc4\u4f30\u8fd0\u52a8\u5e73\u6ed1\u5ea6\u3002</p> <p>\u7279\u5f81\u7a7a\u95f4\u3002\u7b2c\u4e8c\u7c7b\u662f\u4f7f\u7528\u72ec\u7acb\u7684\u795e\u7ecf\u7f51\u7edc\u4f5c\u4e3a\u8fd0\u52a8\u7279\u5f81\u63d0\u53d6\u5668\uff0c\u8ba1\u7b97\u7279\u5f81\u7a7a\u95f4\u4e2d\u7684\u5206\u5e03\u8ddd\u79bb\u3002\u4e3a\u6b64\uff0c\u4e00\u4e9b\u7814\u7a76\u5229\u7528\u8f85\u52a9\u52a8\u4f5c\u5206\u7c7b\u5668\u8ba1\u7b97\u5f17\u96f7\u8c22\u7279\u8d77\u59cb\u8ddd\u79bb\uff08FID\uff09[3]\u3001[14]\u3001[90]\u3001[94]\u3001[99]\u3001[101]\u3001[109]\u3001 [111], [112], [116], [118], [119], [166] \u6216\u81ea\u52a8\u7f16\u7801\u5668 [5],[6], [8], [86], [135], [138], [140], [142], [143], [144], [146], [147], [149], [157]. \u901a\u8fc7\u5c06\u8fd0\u52a8\u7279\u5f81\u5206\u89e3\u4e3a\u51e0\u4f55\uff08\u59ff\u52bf\uff09\u548c\u52a8\u529b\u5b66\uff08\u8fd0\u52a8\uff09\u4e24\u4e2a\u65b9\u9762\uff0c\u53ef\u4ee5\u6269\u5c55\u8be5\u6307\u6807[5]\u3001[15]\u3001[115]\u3001[120]\u3001[123]\u3001[124]\u3001[125]\u3001[127]\u3002\u8fd9\u4e9b\u7814\u7a76\u5229\u7528\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u8fd0\u52a8\u7279\u5f81\u63d0\u53d6\u5668 [3]\u3001[7]\u3001[208]\u3001[209]\u3001[210] \u6765\u8ba1\u7b97\u7279\u5f81\u8ddd\u79bb\u3002Kim \u7b49\u4eba[4]\u8fdb\u4e00\u6b65\u8bad\u7ec3\u4e86\u4e00\u4e2a\u821e\u8e48\u6d41\u6d3e\u5206\u7c7b\u5668\uff0c\u4ee5\u63d0\u53d6\u98ce\u683c\u7279\u5f81\u5e76\u8ba1\u7b97\u76f8\u5e94\u7684 FID\u3002\u9664 FID \u5916\uff0c\u8fd8\u6709\u5176\u4ed6\u4e00\u4e9b\u6307\u6807\u53ef\u7528\u4e8e\u8ba1\u7b97\u751f\u6210\u4e0e\u771f\u5b9e\u4e4b\u95f4\u7684\u5206\u5e03\u8ddd\u79bb\uff0c\u5305\u62ec\u521d\u59cb\u5f97\u5206\uff08IS\uff09[132]\u3001[211]\u3001\u5361\u65b9\u8ddd\u79bb\uff08chi-square distance\uff09[128]\u3001\u6700\u5927\u5e73\u5747\u5dee\u5f02\uff08MMD\uff09[88]\u3001[92]\u3001\u5e73\u5747\u6700\u5927\u76f8\u4f3c\u5ea6\uff08MMS\uff09[98]\u3001\u5178\u578b\u76f8\u5173\u5206\u6790\uff08CCA\uff09[149]\u3001[212]\u548c\u73b0\u5b9e\u5f97\u5206[148]\u3002</p> <p>\u867d\u7136\u8fd9\u4e9b\u6307\u6807\u90fd\u5f88\u76f4\u89c2\uff0c\u4f46\u4e5f\u5b58\u5728\u4e00\u4e9b\u5173\u952e\u6311\u6218\u3002\u5b83\u4eec\u5bf9\u81ea\u7136\u5ea6\u7684\u8bc4\u4f30\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u6570\u636e\u96c6\u7684\u5206\u5e03\u548c\u9884\u8bad\u7ec3\u8fd0\u52a8\u7279\u5f81\u63d0\u53d6\u5668\u7684\u6709\u6548\u6027\uff0c\u800c\u9884\u8bad\u7ec3\u8fd0\u52a8\u7279\u5f81\u63d0\u53d6\u5668\u53ef\u80fd\u65e0\u6cd5\u5168\u9762\u53cd\u6620\u6574\u4f53\u8fd0\u52a8\u8d28\u91cf\u3002\u4f8b\u5982\uff0cEDGE[15] \u7684\u7814\u7a76\u8868\u660e\uff0c\u76ee\u524d\u6d41\u884c\u7684 FID \u5206\u6570\u4e0e\u4eba\u7c7b\u7684\u8bc4\u4f30\u7ed3\u679c\u4e0d\u4e00\u81f4\uff0c\u8fd9\u5c31\u5bf9\u5e38\u89c1\u505a\u6cd5\u7684\u6709\u6548\u6027\u63d0\u51fa\u4e86\u8d28\u7591\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#physical-plausibility","title":"Physical Plausibility","text":"<p>\u7269\u7406\u5408\u7406\u6027\u662f\u6307\u751f\u6210\u7684\u8fd0\u52a8\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u7b26\u5408\u7269\u7406\u89c4\u5219\uff0c\u5c24\u5176\u662f\u4e0e\u811a\u4e0e\u5730\u9762\u7684\u76f8\u4e92\u4f5c\u7528\u76f8\u5173\u7684\u7269\u7406\u89c4\u5219\uff1a\uff081\uff09\u811a\u7684\u6ed1\u52a8\uff0c\u4ee5\u53ca\uff082\uff09\u811a\u4e0e\u5730\u9762\u7684\u63a5\u89e6\u3002</p> <p>\u811a\u90e8\u6ed1\u52a8\u3002\u4e00\u4e9b\u7814\u7a76 [163]\u3001[164]\u3001[168] \u6d4b\u91cf\u4e86\u751f\u6210\u8fd0\u52a8\u7684\u811a\u90e8\u6ed1\u52a8\u5047\u8c61\u3002\u4f8b\u5982\uff0cSAGA [164] \u5c06\u6ed1\u884c\u5b9a\u4e49\u4e3a\u811a\u8ddf\u4e0e\u5730\u9762\u7684\u8ddd\u79bb\u5728\u9608\u503c\u5185\uff0c\u4e14\u53cc\u811a\u7684\u811a\u8ddf\u901f\u5ea6\u8d85\u8fc7\u9608\u503c\u3002CIRCLE [168] \u62a5\u544a\u4e86\u5e8f\u5217\u4e2d\u811a\u6ed1\u52a8\u5e27\u7684\u767e\u5206\u6bd4\u3002</p> <p>\u811a\u4e0e\u5730\u9762\u63a5\u89e6 \u4e4b\u524d\u7684\u7814\u7a76\u63d0\u51fa\u4e86\u51e0\u79cd\u4e0d\u540c\u7684\u6307\u6807\u3002\u4f8b\u5982\uff0cEDGE [15] \u62a5\u544a\u4e86\u7269\u7406\u811a\u63a5\u89e6\u5f97\u5206 (PFC)\u3002SAGA [164] \u62a5\u544a\u7684\u975e\u78b0\u649e\u5f97\u5206\u5b9a\u4e49\u4e3a\u5730\u9762\u4ee5\u4e0a\u7684\u8f66\u8eab\u7f51\u683c\u9876\u70b9\u6570\u9664\u4ee5\u9876\u70b9\u603b\u6570\u3002HuMoR [158] \u62a5\u544a\u4e86\u4eba\u5730\u63a5\u89e6\u7684\u4e8c\u5143\u5206\u7c7b\u51c6\u786e\u7387\u548c\u751f\u6210\u8fd0\u52a8\u7684\u811a\u5e95\u7a7f\u900f\u9891\u7387\u3002GAMMA [162] \u901a\u8fc7\u8bbe\u7f6e\u8ddd\u79bb\u5730\u5e73\u9762\u7684\u9608\u503c\u9ad8\u5ea6\u548c\u6ed1\u884c\u901f\u5ea6\u9608\u503c\u6765\u8ba1\u7b97\u63a5\u89e6\u5f97\u5206\u3002\u4e0d\u8fc7\uff0c\u76ee\u524d\u8fd8\u7f3a\u4e4f\u91cf\u5316\u7269\u7406\u53ef\u4fe1\u5ea6\u7684\u6807\u51c6\u5316\u6307\u6807\u3002\u5404\u79cd\u65b9\u6cd5\u53ef\u80fd\u4f1a\u91c7\u7528\u4e0d\u540c\u7684\u53c2\u6570\u9009\u62e9\uff0c\u751a\u81f3\u8bbe\u8ba1\u4e0d\u540c\u7684\u8bc4\u4f30\u65b9\u6cd5\u3002\u56e0\u6b64\uff0c\u6709\u53ef\u80fd\u9700\u8981\u5f00\u53d1\u4e00\u79cd\u66f4\u7a33\u5065\u3001\u66f4\u666e\u904d\u9002\u7528\u7684\u6307\u6807\uff0c\u4ee5\u6709\u6548\u8861\u91cf\u7269\u7406\u53ef\u4fe1\u5ea6\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#diversity","title":"Diversity","text":"<p>\u53e6\u4e00\u4e2a\u91cd\u8981\u76ee\u6807\u662f\u751f\u6210\u5404\u79cd\u4eba\u4f53\u52a8\u4f5c\uff0c\u907f\u514d\u91cd\u590d\u5185\u5bb9\u3002\u4e3a\u6b64\uff0c\u7814\u7a76\u4eba\u5458\u4ece\u4e0d\u540c\u5c42\u9762\u8861\u91cf\u751f\u6210\u7ed3\u679c\uff1a\u5355\u4e2a\u8fd0\u52a8\u5e8f\u5217\u5185\u7684\u591a\u6837\u6027\uff08\u8fd0\u52a8\u5185\u591a\u6837\u6027\uff09\u548c\u4e0d\u540c\u8fd0\u52a8\u5e8f\u5217\u95f4\u7684\u591a\u6837\u6027\uff08\u8fd0\u52a8\u95f4\u591a\u6837\u6027\uff09\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#intra-motion-diversity","title":"Intra-motion Diversity","text":"<p>\u957f\u5e8f\u5217\u8fd0\u52a8\u751f\u6210\u5f80\u5f80\u4f1a\u4ea7\u751f \"\u51bb\u7ed3 \"\u95ee\u9898 [119], [127]\u3002\u4e3a\u4e86\u8bc4\u4f30 \"\u975e\u51bb\u7ed3\u6027 \"\u548c\u533a\u5206\u9759\u6001\u8fd0\u52a8\uff0c\u4e00\u4e9b\u7814\u7a76\u91c7\u7528\u4e86\u8fd0\u52a8\u5185\u90e8\u591a\u6837\u6027\u6307\u6807\u3002</p> <p>\u5dee\u5f02\u3002\u4f8b\u5982\uff0c\u4e00\u4e9b\u7814\u7a76[141]\u3001[143] \u5c06\u751f\u6210\u7684\u8fd0\u52a8\u5206\u5272\u4e3a\u7b49\u957f\u7684\u975e\u91cd\u53e0\u8fd0\u52a8\u7247\u6bb5\uff0c\u5e76\u8ba1\u7b97\u5b83\u4eec\u7684\u5e73\u5747\u6210\u5bf9\u8ddd\u79bb\u3002Habibie \u7b49\u4eba[145] \u6d4b\u91cf\u4e86\u65f6\u95f4\u4f4d\u7f6e\u548c\u901f\u5ea6\u53d8\u5316\u3002</p> <p>\u51bb\u7ed3\u7387\u3002Sun \u7b49\u4eba[127]\u5efa\u8bae\u8ba1\u7b97\u59ff\u52bf\u548c\u5e73\u79fb\u53c2\u6570\u7684\u65f6\u95f4\u5dee\u5f02\uff0c\u5e76\u62a5\u544a\u51bb\u7ed3\u7387\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#inter-motion-diversity","title":"Inter-motion Diversity","text":"<p>\u4e3a\u4e86\u8bc4\u4f30\u751f\u6210\u7684\u8fd0\u52a8\u6d41\u5f62\u7684\u8fd0\u52a8\u95f4\u591a\u6837\u6027\uff0c\u73b0\u6709\u7684\u6307\u6807\u53ef\u5206\u4e3a\u8986\u76d6\u7387\u548c\u591a\u6a21\u6001\u3002</p> <p>\u8986\u76d6\u7387\u3002\u751f\u6210\u7684\u8fd0\u52a8\u6d41\u5f62\u7684\u8986\u76d6\u7387\u901a\u5e38\u662f\u901a\u8fc7\u9996\u5148\u5728\u9a8c\u8bc1\u96c6\u4e0a\u91c7\u6837 N \u4e2a\u4e0d\u540c\u7684\u6761\u4ef6\u4fe1\u53f7\uff0c\u7136\u540e\u8ba1\u7b97\u751f\u6210\u8fd0\u52a8\u7684\u591a\u6837\u6027\u6765\u8bc4\u4f30\u7684\u3002\u4f8b\u5982\uff0c[3], [7], [8], [14], [86], [90], [94], [98], [99], [101], [109], [112], [114], [118], [119], [129], [142], [147], [149] \u62a5\u544a\u4e86\u6a21\u578b\u7ed3\u679c\u7684\u5e73\u5747\u7279\u5f81\u8ddd\u79bb\u3002\u4e0e FID \u7c7b\u4f3c\uff0c\u7279\u5f81\u8ddd\u79bb\u53ef\u5206\u4e3a\u51e0\u4f55\u8ddd\u79bb\u3001\u52a8\u529b\u5b66\u8ddd\u79bb [15]\u3001[115]\u3001[124]\u3001[127] \u548c\u98ce\u683c\u8ddd\u79bb [4]\u3002\u4e00\u4e9b\u7814\u7a76 [66], [123], [149] \u8fd8\u8ba1\u7b97\u4e86\u8fd0\u52a8\u7a7a\u95f4\u7684\u591a\u6837\u6027\u3002</p> <p>\u591a\u6a21\u6001\u3002\u5728\u7ed9\u5b9a\u76f8\u540c\u6761\u4ef6\u4fe1\u53f7\u7684\u60c5\u51b5\u4e0b\uff0c\u6982\u7387\u751f\u6210\u65b9\u6cd5\u53ef\u751f\u6210\u53ef\u4fe1\u7684\u76f8\u5e94\u8fd0\u52a8\u7684\u5206\u5e03\u3002\u591a\u6a21\u6001\u5ea6\u91cf\u65e8\u5728\u8bc4\u4f30\u5206\u5e03\u7684\u53d8\u5316\u3002\u901a\u5e38\u7684\u505a\u6cd5\u662f\u9996\u5148\u5728\u9a8c\u8bc1\u96c6\u4e0a\u91c7\u6837 N \u4e2a\u4e0d\u540c\u7684\u6761\u4ef6\u4fe1\u53f7\uff0c\u7136\u540e\u4e3a\u6bcf\u4e2a\u6761\u4ef6\u751f\u6210 M \u4e2a\u8fd0\u52a8\uff0c\u5e76\u8ba1\u7b97\u6bcf\u4e2a\u6761\u4ef6\u7684\u5e73\u5747\u6210\u5bf9\u8ddd\u79bb\u3002\u73b0\u6709\u65b9\u6cd5\u62a5\u544a\u7684\u662f\u5e73\u5747\u7279\u5f81\u8ddd\u79bb[3], [7], [14], [90], [94], [98], [99], [101], [109], [112], [114], [118], [119], [148], [160], [164], [166] \u6216\u5e73\u5747\u59ff\u52bf\u8ddd\u79bb[16], [141], [160], [161], [167]\u3002ODMO [94]\u4e5f\u4f7f\u7528\u5f52\u4e00\u5316 APD\uff08n-APD\uff09[213]\uff0c\u8be5\u503c\u7531\u751f\u6210\u7684\u8fd0\u52a8\u4e0e\u5730\u9762\u5b9e\u51b5\u4e4b\u95f4\u7684 APD \u503c\u4e4b\u6bd4\u51b3\u5b9a\u3002\u57fa\u4e8e\u8fd0\u52a8\u9884\u6d4b\u95ee\u9898\u7684\u591a\u6a21\u6001\u6027\u8d28\uff0cYuan \u7b49\u4eba[213] \u8fd8\u4f7f\u7528\u4e86\u5e73\u5747\u4f4d\u79fb\u8bef\u5dee (ADE)\u3001\u6700\u7ec8\u4f4d\u79fb\u8bef\u5dee (FDE)\u3001\u591a\u6a21\u6001 ADE (MMADE) \u548c\u591a\u6a21\u6001 FDE (MMFDE)\u3002\u4e00\u4e9b\u7814\u7a76\u8fd8\u8fdb\u4e00\u6b65\u8bc4\u4f30\u4e86\u4ea4\u4e92\u951a\u70b9\u6216\u89c4\u5212\u8def\u5f84\u5c42\u9762\u7684\u751f\u6210\u591a\u6837\u6027[161]\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#condition-consistency","title":"Condition Consistency","text":"<p>\u4e0a\u8ff0\u6307\u6807\u90fd\u4fa7\u91cd\u4e8e\u751f\u6210\u8fd0\u52a8\u672c\u8eab\u7684\u5c5e\u6027\uff0c\u800c\u8bc4\u4f30\u751f\u6210\u8fd0\u52a8\u4e0e\u76f8\u5e94\u6761\u4ef6\u4fe1\u53f7\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u4e5f\u81f3\u5173\u91cd\u8981\u3002\u7531\u4e8e\u8fd9\u4e9b\u8bc4\u4f30\u6307\u6807\u4e0e\u6761\u4ef6\u7c7b\u578b\u9ad8\u5ea6\u76f8\u5173\uff0c\u6211\u4eec\u5c06\u6839\u636e\u4e0d\u540c\u7684\u4efb\u52a1\u5bf9\u5b83\u4eec\u8fdb\u884c\u8ba8\u8bba\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#text-motion-consistency","title":"Text-Motion Consistency","text":"<p>\u51c6\u786e\u6027 \u5728\u8bc4\u4f30 \"\u52a8\u4f5c\u5230\u52a8\u4f5c \"\u4efb\u52a1\u4e2d\u751f\u6210\u7684\u52a8\u4f5c\u4e0e\u76f8\u5e94\u6587\u672c\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u65f6\uff0c\u73b0\u6709\u7684\u5404\u79cd\u65b9\u6cd5\u90fd\u4f1a\u5229\u7528\u8bc6\u522b\u51c6\u786e\u7387 [7]\u3001[90]\u3001[94]\u3001[98]\u3001[99]\u3001[107] \u6765\u8bc4\u4f30\u751f\u6210\u7ed3\u679c\u3002\u8be5\u6307\u6807\u57fa\u4e8e\u9884\u5148\u8bad\u7ec3\u7684\u52a8\u4f5c\u8bc6\u522b\u6a21\u578b\uff0c\u786e\u5b9a\u751f\u6210\u7684\u52a8\u4f5c\u662f\u5426\u80fd\u88ab\u6b63\u786e\u8bc6\u522b\u4e3a\u76f8\u5e94\u7684\u52a8\u4f5c\u7c7b\u522b\u3002\u8bc6\u522b\u51c6\u786e\u7387\u7684\u4f7f\u7528\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ad8\u5c42\u6b21\u7684\u89c6\u89d2\uff0c\u5373\u6839\u636e\u6587\u672c\u63cf\u8ff0\uff0c\u751f\u6210\u7684\u6837\u672c\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u7b26\u5408\u9884\u671f\u7684\u52a8\u4f5c\u7c7b\u522b\u3002\u6b64\u5916\uff0c\u4e00\u4e9b\u65b9\u6cd5 [3]\u3001[14]\u3001[101]\u3001[109]\u3001[112]\u3001[113]\u3001[114]\u3001[116] \u4f7f\u7528 R \u7cbe\u786e\u5ea6\u6765\u8bc4\u4f30\u751f\u6210\u7684\u52a8\u4f5c\u4e0e\u5176\u76f8\u5173\u63cf\u8ff0\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u8be5\u6307\u6807\u8ba1\u7b97\u7279\u5f81\u4e4b\u95f4\u7684\u6b27\u6c0f\u8ddd\u79bb\u5e76\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u6c42\u51fa\u524d k \u4e2a\u7ed3\u679c\u7684\u5e73\u5747\u7cbe\u786e\u5ea6\uff0c\u4ece\u800c\u63d0\u4f9b\u4e86\u6587\u672c-\u52a8\u4f5c\u4e00\u81f4\u6027\u7684\u7cbe\u7ec6\u5ea6\u91cf\u3002</p> <p>\u8ddd\u79bb\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6709\u4e9b\u65b9\u6cd5\u4f1a\u6df1\u5165\u7814\u7a76\u7279\u5f81\u7ea7\u8ddd\u79bb\u6765\u8861\u91cf\u6587\u672c\u8fd0\u52a8\u7684\u4e00\u81f4\u6027\u3002\u4f8b\u5982\uff0cMultimodal Distance [3], [14], [101], [109], [112] \u91cf\u5316\u4e86\u7ed9\u5b9a\u63cf\u8ff0\u4e2d\u7684\u7279\u5f81\u4e0e\u751f\u6210\u7ed3\u679c\u4e2d\u7684\u8fd0\u52a8\u7279\u5f81\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u63d0\u4f9b\u4e86\u6587\u672c\u4e0e\u8fd0\u52a8\u4e4b\u95f4\u7279\u5f81\u7ea7\u4e00\u81f4\u6027\u7684\u76f4\u63a5\u8861\u91cf\u6807\u51c6\u3002\u540c\u6837\uff0c\u8fd0\u52a8 CLIP Score\uff08mCLIP\uff09[111]\u3001[113] \u5229\u7528\u4f59\u5f26\u76f8\u4f3c\u5ea6\u6765\u6355\u6349 CLIP \u7a7a\u95f4\u4e2d\u6587\u672c\u7279\u5f81\u4e0e\u8fd0\u52a8\u7279\u5f81\u4e4b\u95f4\u7684\u63a5\u8fd1\u5ea6\uff0c\u4ece\u800c\u63d0\u4f9b\u4e86\u4e00\u79cd\u53ef\u91cf\u5316\u7684\u65b9\u6cd5\u6765\u8861\u91cf\u6a21\u6001\u4e4b\u95f4\u7684\u5339\u914d\u7a0b\u5ea6\u3002Flame [111] \u5219\u8fdb\u4e00\u6b65\u5229\u7528\u4e92\u4fe1\u606f\u53d1\u6563\uff08MID\uff09[214] \u6765\u8861\u91cf\u4e0d\u540c\u6a21\u6001\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u3002</p> <p>\u4e0d\u8fc7\uff0c\u8fd9\u4e9b\u6307\u6807\u53d7\u9884\u8bad\u7ec3\u6a21\u578b\u7684\u6027\u80fd\u4ee5\u53ca\u8bad\u7ec3\u6240\u7528\u6570\u636e\u7684\u8d28\u91cf\u548c\u5206\u5e03\u7684\u5f71\u54cd\u5f88\u5927\u3002\u56e0\u6b64\uff0c\u8fd9\u4e9b\u6307\u6807\u5728\u63d0\u4f9b\u5ba2\u89c2\u8bc4\u4ef7\u65b9\u9762\u53ef\u80fd\u5b58\u5728\u5c40\u9650\u6027\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#audio-motion-consistency","title":"Audio-Motion Consistency","text":"<p>\u8282\u62cd \u73b0\u6709\u65b9\u6cd5\u901a\u5e38\u8bc4\u4f30\u751f\u6210\u52a8\u4f5c\u7684\u8fd0\u52a8\u8282\u62cd\u4e0e\u8f93\u5165\u97f3\u9891\u8282\u62cd\u7684\u4e00\u81f4\u7a0b\u5ea6\u3002\u4e3a\u6b64\uff0c\u8282\u62cd\u8986\u76d6\u7387\u548c\u547d\u4e2d\u7387 [118],[119], [146] \u4ee3\u8868\u5bf9\u9f50\u8282\u62cd\u4e0e\u6240\u6709\u8282\u62cd\u7684\u6bd4\u7387\u3002Li \u7b49\u4eba[115]\u63d0\u51fa\u4e86\u7528\u8282\u62cd\u8ddd\u79bb\u8ba1\u7b97\u7684\u8282\u62cd\u5bf9\u9f50\u5f97\u5206\uff0c\u968f\u540e\u53c8\u6709[4]\u3001[127]\u3001[129]\u3001[143]\u3001[144]\u7b49\u4eba\u63d0\u51fa\u4e86\u8fd9\u4e00\u65b9\u6cd5\u3002\u540e\u6765\u7684\u4e00\u4e9b\u4f5c\u54c1[5]\u3001[15]\u3001[123]\u3001[124]\u3001[125]\u3001[149]\u8fdb\u4e00\u6b65\u5b8c\u5584\u4e86\u4e50\u8c31\u5b9a\u4e49\uff0c\u5f3a\u8c03\u97f3\u4e50\u8282\u62cd\u5339\u914d\u3002\u6b64\u5916\uff0c[142]\u3001[147] \u7b49\u7814\u7a76\u5efa\u8bae\u4f7f\u7528\u5e73\u5747\u89d2\u901f\u5ea6\u4ee3\u66ff\u4f4d\u7f6e\u901f\u5ea6\u3002\u8bed\u4e49\u3002\u4e3a\u4e86\u8fdb\u4e00\u6b65\u8bc4\u4f30\u8bed\u4e49\u4e00\u81f4\u6027\uff0cLiu \u7b49\u4eba[144] \u63d0\u51fa\u4e86\u8bed\u4e49\u76f8\u5173\u624b\u52bf\u53ec\u56de (SRGR)\uff0c\u6839\u636e\u5730\u9762\u5b9e\u51b5\u6570\u636e\u7684\u8bed\u4e49\u5206\u6570\u6765\u6743\u8861 PCK\u3002\u4ed6\u4eec\u8ba4\u4e3a\uff0c\u4e0e L1 \u5dee\u5f02\u76f8\u6bd4\uff0cSRGR \u66f4\u7b26\u5408\u4eba\u7c7b\u7684\u4e3b\u89c2\u611f\u77e5\u3002GestureDiffuCLIP [6] \u63d0\u51fa\u4e86\u8bed\u4e49\u5206\u6570 (SC)\uff0c\u4ee5\u786e\u4fdd\u751f\u6210\u7684\u52a8\u4f5c\u548c\u6587\u672c\u5728\u5176\u8054\u5408\u5d4c\u5165\u7a7a\u95f4\u4e2d\u7684\u8bed\u4e49\u76f8\u4f3c\u6027\u3002</p> <p>\u76ee\u524d\uff0c\u5927\u591a\u6570\u8bc4\u4f30\u6307\u6807\u4e3b\u8981\u5173\u6ce8\u97f3\u9891\u548c\u52a8\u4f5c\u4e4b\u95f4\u7684\u57fa\u672c\u8054\u7cfb\uff0c\u5f80\u5f80\u5ffd\u7565\u4e86\u98ce\u683c\u548c\u60c5\u611f\u7b49\u66f4\u5fae\u5999\u7684\u6587\u5316\u8054\u7cfb\u3002\u4f8b\u5982\uff0c\u6309\u7167\u4eba\u7c7b\u7684\u6807\u51c6\uff0c\u563b\u54c8\u97f3\u4e50\u548c\u82ad\u857e\u821e\u8e48\u5373\u4f7f\u8282\u62cd\u5b8c\u5168\u4e00\u81f4\uff0c\u4e5f\u53ef\u80fd\u4e0d\u88ab\u8ba4\u4e3a\u662f\u548c\u8c10\u7684\u3002\u540c\u6837\u7684\u9053\u7406\u4e5f\u9002\u7528\u4e8e\u7528\u60b2\u4f24\u7684\u8bed\u8c03\u548c\u6b22\u5feb\u7684\u624b\u52bf\u8bb2\u8bdd\u3002\u9057\u61be\u7684\u662f\uff0c\u8fd9\u4e9b\u7ec6\u5fae\u5dee\u522b\u5e76\u6ca1\u6709\u88ab\u73b0\u6709\u7684\u97f3\u9891-\u52a8\u4f5c\u4e00\u81f4\u6027\u6307\u6807\u5b8c\u5168\u89e3\u51b3\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#scene-motion-consistency","title":"Scene-Motion Consistency","text":"<p>\u6211\u4eec\u5c06\u573a\u666f\u5206\u4e3a\u5730\u9762\u548c\u5176\u4ed6\u7269\u4f53\uff0c\u4ee5\u6b64\u533a\u5206\u7269\u7406\u5408\u7406\u6027\uff08\u7b2c 8.1.3 \u8282\uff09\u548c\u573a\u666f\u8fd0\u52a8\u4e00\u81f4\u6027\u3002\u573a\u666f\u8fd0\u52a8\u4e00\u81f4\u6027\u662f\u6307\u751f\u6210\u7684\u8fd0\u52a8\u4e0e\u7ed9\u5b9a\u573a\u666f\u6761\u4ef6\uff08\u5730\u9762\u9664\u5916\uff09\u7684\u4e00\u81f4\u6027\u3002\u8bc4\u4ef7\u4e00\u81f4\u6027\u4e3b\u8981\u6709\u4e24\u4e2a\u89d2\u5ea6\uff1a(1) \u975e\u78b0\u649e\u5f97\u5206\uff1b(2) \u4eba\u4e0e\u573a\u666f\u7684\u63a5\u89e6\u3002</p> <p>\u975e\u78b0\u649e\u5f97\u5206\u662f\u7528\u6765\u8bc4\u4ef7\u751f\u6210\u7684\u8fd0\u52a8\u4e0e\u73af\u5883\u4e2d\u5176\u4ed6\u7269\u4f53\u6216\u969c\u788d\u7269\u53d1\u751f\u78b0\u649e\u7684\u5b89\u5168\u6027\u548c\u7269\u7406\u5408\u7406\u6027\u7684\u6307\u6807[156], [157], [160], [161], [163], [164], [167], [168]\u3002\u4f8b\u5982\uff0cWang \u7b49\u4eba[157] \u4ee5\u5706\u67f1\u4f53\u6a21\u578b\u8868\u793a\u7684\u4eba\u4f53\u8fd0\u52a8\u4e0e\u7ed9\u5b9a\u573a\u666f\u70b9\u4e91\u4e4b\u95f4\u7684\u4ea4\u70b9\u6765\u8ba1\u7b97\u4eba\u4e0e\u573a\u666f\u7684\u78b0\u649e\u3002\u975e\u78b0\u649e\u7387\u7684\u5b9a\u4e49\u662f\u6ca1\u6709\u53d1\u751f\u4eba\u4f53-\u573a\u666f\u78b0\u649e\u7684\u4eba\u4f53\u8fd0\u52a8\u6570\u91cf\u4e0e\u6240\u6709\u91c7\u6837\u8fd0\u52a8\u6570\u91cf\u4e4b\u6bd4\u3002\u4e00\u4e9b\u7814\u7a76 [163]\u3001[164] \u4f7f\u7528\u4eba\u4f53-\u573a\u666f\u7a7f\u900f\u7387\u6765\u8861\u91cf\u8fd9\u4e00\u6307\u6807\u3002\u4f8b\u5982\uff0cSAGA [164] \u6d4b\u91cf\u4e86\u4eba\u4f53\u4e0e\u7269\u4f53\u7f51\u683c\u4e4b\u95f4\u7684\u7a7f\u900f\u4f53\u79ef\uff0c\u800c GOAL [163] \u5219\u62a5\u544a\u4e86\u7a7f\u900f\u4f53\u79ef\uff08\u7acb\u65b9\u5398\u7c73\uff09\u3002</p> <p>\u4eba\u4f53\u4e0e\u573a\u666f\u7684\u63a5\u89e6\u4e3b\u8981\u662f\u901a\u8fc7\u63a5\u89e6\u9762\u79ef\u6765\u8bc4\u4f30\u573a\u666f\u4e0e\u8fd0\u52a8\u7684\u4e00\u81f4\u6027[66]\u3001[156]\u3001[161]\u3001[163]\u3001[164]\u3001[167]\uff0c\u4e0d\u540c\u7684\u573a\u666f\u6761\u4ef6\u6709\u4e0d\u540c\u7684\u5b9a\u4e49\u3002SAGA [164] \u6d4b\u91cf\u8eab\u4f53\u7f51\u683c\u4e0e\u7269\u4f53\u7f51\u683c\u6700\u5c0f\u63a5\u89e6\u7684\u6bd4\u7387\uff0c\u4ee5\u8bc4\u4f30\u6293\u53d6\u7a33\u5b9a\u6027\u3002COUCH [66] \u4f7f\u7528\u5e73\u5747\u63a5\u89e6\u8bef\u5dee (ACE) \u548c\u5e73\u5747\u63a5\u89e6\u7cbe\u5ea6 (AP@k)\uff0c\u524d\u8005\u662f\u6307\u9884\u6d4b\u7684\u624b\u90e8\u63a5\u89e6\u4e0e\u76f8\u5e94\u7ed9\u5b9a\u63a5\u89e6\u4e4b\u95f4\u7684\u5747\u65b9\u8bef\u5dee\uff0c\u540e\u8005\u662f\u6307\u5982\u679c\u63a5\u89e6\u8ddd\u79bb\u5c0f\u4e8e k \u5398\u7c73\uff0c\u5219\u89c6\u4e3a\u9884\u6d4b\u6b63\u786e\u3002</p> <p>\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u6307\u6807\u65e8\u5728\u8bc4\u4f30\u751f\u6210\u7684\u8fd0\u52a8\u8fbe\u5230\u6700\u7ec8\u76ee\u6807\u72b6\u6001\u7684\u7a0b\u5ea6\uff0c\u5982\u6267\u884c\u65f6\u95f4 [160]\u3001\u89d2\u8272\u5728\u591a\u6b21\u5c1d\u8bd5\u540e\u8fbe\u5230\u76ee\u6807\u7684\u6210\u529f\u7387 [162]\u3001\u8eab\u4f53\u5230\u76ee\u6807\u7684\u8ddd\u79bb [16]\u3001[162]\u3001[168]\u3002\u6267\u884c\u65f6\u95f4 [160] \u662f\u6307\u4ece\u7a7a\u95f2\u72b6\u6001\u8fc7\u6e21\u5230\u76ee\u6807\u52a8\u4f5c\u6807\u7b7e\u6240\u9700\u7684\u65f6\u95f4\u3002HUMANISE [16] \u548c CIRCLE [168] \u5bf9\u8eab\u4f53\u5230\u76ee\u6807\u7684\u8ddd\u79bb\u8fdb\u884c\u8bc4\u4f30\uff0c\u4ee5\u8bc4\u4ef7\u751f\u6210\u7684\u52a8\u4f5c\u4e0e\u6b63\u786e\u5bf9\u8c61\u7684\u4e92\u52a8\u6216\u5230\u8fbe\u6b63\u786e\u5bf9\u8c61\u7684\u7a0b\u5ea6\u3002\u603b\u4e4b\uff0c\u4eba\u4eec\u63d0\u51fa\u4e86\u5404\u79cd\u65b0\u9896\u7684\u6307\u6807\u6765\u8861\u91cf\u573a\u666f\u8fd0\u52a8\u7684\u4e00\u81f4\u6027\uff0c\u8fd9\u53cd\u6620\u4e86\u573a\u666f\u8868\u5f81\u7684\u591a\u6837\u6027\u548c\u590d\u6742\u6027\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u5ea6\u91cf\u6807\u51c6\u5f80\u5f80\u662f\u9488\u5bf9\u5404\u81ea\u7814\u7a76\u9886\u57df\u7684\u72ec\u7279\u65b9\u9762\u800c\u4e13\u95e8\u8bbe\u8ba1\u7684\uff0c\u53ef\u80fd\u4f1a\u9650\u5236\u5176\u5e7f\u6cdb\u7684\u901a\u7528\u6027\u548c\u666e\u904d\u7684\u9002\u7528\u6027\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#user-study","title":"User Study","text":"<p>\u7528\u6237\u7814\u7a76\u6216\u4e3b\u89c2\u8bc4\u4ef7\u662f\u8bc4\u4f30\u751f\u6210\u8fd0\u52a8\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u63ed\u793a\u8fd0\u52a8\u8d28\u91cf\u7684\u4e00\u4e9b\u65b9\u9762\uff0c\u800c\u8fd9\u4e9b\u65b9\u9762\u53ef\u80fd\u65e0\u6cd5\u4ec5\u901a\u8fc7\u5ba2\u89c2\u6307\u6807\u6765\u6355\u6349\u3002\u9996\u5148\uff0c\u4eba\u7c7b\u5bf9\u751f\u7269\u8fd0\u52a8\u4e2d\u7684\u5fae\u5c0f\u5047\u8c61\u975e\u5e38\u654f\u611f\uff0c\u4f8b\u5982\u6296\u52a8\u548c\u811a\u6ed1[44]\u3001[45]\u3002\u5176\u6b21\uff0c\u76ee\u524d\u7684\u5ba2\u89c2\u6307\u6807\u65e0\u6cd5\u6db5\u76d6\u751f\u6210\u8fd0\u52a8\u7684\u7ec6\u5fae\u6587\u5316\u65b9\u9762\uff0c\u5982\u7f8e\u5b66\u548c\u60c5\u611f\u5f71\u54cd\u3002\u73b0\u6709\u65b9\u6cd5\u8bbe\u8ba1\u7684\u7528\u6237\u7814\u7a76\u4fa7\u91cd\u4e8e\u4e0a\u8ff0\u4e00\u4e2a\u6216\u51e0\u4e2a\u65b9\u9762\uff08\u8d28\u91cf\u3001\u591a\u6837\u6027\u3001\u4e00\u81f4\u6027\uff09\uff0c\u4f7f\u7528\u504f\u597d\u6216\u8bc4\u7ea7\u3002</p> <p>\u504f\u597d\u3002\u8bb8\u591a\u7814\u7a76\u91c7\u7528\u7528\u6237\u7814\u7a76\u7684\u65b9\u6cd5\uff0c\u5728\u751f\u6210\u7ed3\u679c\u4e0e\u57fa\u7ebf\u6216 GT \u4e4b\u95f4\u8fdb\u884c\u6210\u5bf9\u504f\u597d\u6bd4\u8f83\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u53c2\u4e0e\u8005\u89c2\u5bdf\u4e00\u5bf9\u4eba\u7c7b\u52a8\u4f5c\uff0c\u5e76\u56de\u7b54\u95ee\u9898\uff0c\u5982 \"\u54ea\u4e2a\u52a8\u4f5c\u66f4\u7b26\u5408\u6587\u5b57\u63cf\u8ff0\uff1f\"\u3001\"\u65e0\u8bba\u97f3\u4e50\u5982\u4f55\uff0c\u54ea\u4e2a\u821e\u8e48\u66f4\u903c\u771f\uff1f\"\u3001\"\u54ea\u4e2a\u821e\u8e48\u5728\u98ce\u683c\u4e0a\u66f4\u7b26\u5408\u97f3\u4e50\uff1f\"\u6216 \"\u54ea\u4e2a\u52a8\u4f5c\u6700\u7b26\u5408\u573a\u666f\u9650\u5236\uff1f\"\u7b49\u3002\u968f\u540e\uff0c\u7814\u7a76\u4eba\u5458\u8ba1\u7b97\u51fa\u4ed6\u4eec\u7684\u65b9\u6cd5\u76f8\u5bf9\u4e8e\u57fa\u7ebf\u7684\u80dc\u7387\u3002\u57fa\u4e8e\u504f\u597d\u7684\u7528\u6237\u7814\u7a76\u63d0\u4f9b\u4e86\u6bd4\u8f83\u65b9\u6cd5\u4e4b\u95f4\u7684\u76f4\u63a5\u8bc4\u4f30\uff0c\u4f46\u53ef\u80fd\u4e0d\u8db3\u4ee5\u6bd4\u8f83\u591a\u79cd\u65b9\u6cd5\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cEDGE [15] \u5728\u6240\u6709\u751f\u6210\u65b9\u6cd5\u4e4b\u95f4\u8fdb\u884c\u6210\u5bf9\u6bd4\u8f83\uff0c\u5e76\u540c\u65f6\u4f7f\u7528 Elo Rating [215] \u6765\u8868\u793a\u5b83\u4eec\u7684\u751f\u6210\u8d28\u91cf\u3002</p> <p>\u8bc4\u7ea7\u3002\u53e6\u4e00\u79cd\u6d41\u884c\u7684\u7528\u6237\u7814\u7a76\u65b9\u6cd5\u662f\u6307\u5bfc\u5fd7\u613f\u8005\u4e3a\u751f\u6210\u7ed3\u679c\u6253\u5206\u3002\u53c2\u4e0e\u8005\u901a\u5e38\u4f1a\u770b\u5230\u591a\u4e2a\u8fd0\u52a8\u751f\u6210\u7ed3\u679c\uff0c\u5e76\u88ab\u8981\u6c42\u7ed9\u6bcf\u4e2a\u8fd0\u52a8\u6253\u5206\uff08\u4f8b\u5982\uff0c\u4ece 1 \u5230 5 \u5206\uff09\u3002\u6709\u4e9b\u7814\u7a76\u8fd8\u8981\u6c42\u5bf9\u6bcf\u4e2a\u65b9\u9762\uff08\u8d28\u91cf\u3001\u591a\u6837\u6027\u3001\u4e00\u81f4\u6027\uff09\u8fdb\u884c\u5355\u72ec\u8bc4\u5206\u3002</p> <p>\u8868 3\uff1a\u4eba\u4f53\u52a8\u4f5c\u751f\u6210\u7684\u8bc4\u4f30\u6307\u6807\u3002\u7eff\u8272\u3001\u84dd\u8272\u548c\u6a59\u8272\u5206\u522b\u8868\u793a\u4ee5\u6587\u672c\u3001\u97f3\u9891\u548c\u573a\u666f\u4e3a\u6761\u4ef6\u7684\u52a8\u4f5c\u751f\u6210\u4f5c\u54c1\u3002</p> <p></p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/motion/Human%20Motion%20Generation%20A%20Survey/#conclusion-and-future-work","title":"CONCLUSION AND FUTURE WORK","text":"<p>\u5728\u672c\u8c03\u67e5\u62a5\u544a\u4e2d\uff0c\u6211\u4eec\u5c06\u5168\u9762\u6982\u8ff0\u4eba\u7c7b\u8fd0\u52a8\u751f\u6210\u65b9\u9762\u7684\u6700\u65b0\u8fdb\u5c55\u3002\u6211\u4eec\u9996\u5148\u7814\u7a76\u4e86\u8fd9\u4e00\u95ee\u9898\u7684\u57fa\u672c\u65b9\u9762\uff0c\u7279\u522b\u662f\u4eba\u4f53\u8fd0\u52a8\u548c\u751f\u6210\u65b9\u6cd5\u3002\u968f\u540e\uff0c\u6211\u4eec\u6839\u636e\u6761\u4ef6\u4fe1\u53f7\u5bf9\u7814\u7a76\u8fdb\u884c\u5206\u7c7b\uff0c\u5e76\u8be6\u7ec6\u8ba8\u8bba\u6bcf\u4e00\u7c7b\u7814\u7a76\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u603b\u7ed3\u4e86\u53ef\u7528\u7684\u6570\u636e\u96c6\u8d44\u6e90\u548c\u5e38\u7528\u7684\u8bc4\u4f30\u6307\u6807\u3002\u5c3d\u7ba1\u8be5\u9886\u57df\u8fdb\u5c55\u8fc5\u901f\uff0c\u4f46\u4ecd\u5b58\u5728\u91cd\u5927\u6311\u6218\uff0c\u9700\u8981\u5728\u672a\u6765\u8fdb\u884c\u63a2\u7d22\u3002\u6709\u9274\u4e8e\u6b64\uff0c\u6211\u4eec\u4ece\u4e0d\u540c\u89d2\u5ea6\u6982\u8ff0\u4e86\u51e0\u4e2a\u524d\u666f\u5e7f\u9614\u7684\u672a\u6765\u65b9\u5411\uff0c\u5e0c\u671b\u80fd\u4e3a\u4eba\u7c7b\u8fd0\u52a8\u751f\u6210\u7814\u7a76\u5e26\u6765\u65b0\u7684\u7a81\u7834\u3002</p> <p>\u6570\u636e\u3002\u4e0e\u56fe\u50cf\u6216\u89c6\u9891\u4e0d\u540c\uff0c\u6536\u96c6\u9ad8\u8d28\u91cf\u7684\u4eba\u4f53\u8fd0\u52a8\u6570\u636e\u8981\u56f0\u96be\u5f97\u591a\uff0c\u6210\u672c\u4e5f\u9ad8\u5f97\u591a\uff0c\u8fd9\u5c31\u9700\u8981\u5728\u6570\u636e\u6570\u91cf\u548c\u6570\u636e\u8d28\u91cf\u4e4b\u95f4\u505a\u51fa\u6743\u8861\u3002\u6b64\u5916\uff0c\u8fd0\u52a8\u8868\u5f81\u548c\u6761\u4ef6\u4fe1\u53f7\u7684\u5dee\u5f02\u6027\u4e5f\u963b\u788d\u4e86\u73b0\u6709\u6570\u636e\u96c6\u7684\u5e7f\u6cdb\u9002\u7528\u6027\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u672a\u6765\u7684\u7814\u7a76\u53ef\u4ee5\u63a2\u7d22\u4f7f\u7528\u5f02\u6784\u6570\u636e\u6e90\uff0c\u901a\u8fc7\u5f31\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5 [216], [217] \u6216\u591a\u6a21\u6001\u57fa\u7840\u6a21\u578b [107], [218]\uff0c\u6574\u5408\u8fd9\u4e9b\u6570\u636e\u6e90\u7684\u4f18\u52bf\u3002</p> <p>\u8bed\u4e49\u5b66\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4eba\u7c7b\u8fd0\u52a8\u4e0d\u4ec5\u4ec5\u662f\u8eab\u4f53\u90e8\u4f4d\u7684\u8fd0\u52a8\uff0c\u5b83\u8fd8\u662f\u4e00\u79cd\u91cd\u8981\u7684\u975e\u8bed\u8a00\u4ea4\u6d41\u5de5\u5177\uff0c\u5728\u6587\u5316\u548c\u793e\u4f1a\u73af\u5883\u4e2d\u4f20\u9012\u8bed\u4e49\u4fe1\u606f\u3002\u6355\u6349\u4eba\u4f53\u8fd0\u52a8\u4e0e\u73af\u5883\u4fe1\u53f7\uff08\u5982\u9ad8\u7ea7\u6587\u5b57\u63cf\u8ff0\u3001\u97f3\u4e50/\u8bed\u97f3\u98ce\u683c\u548c\u73af\u5883\u627f\u53d7\u80fd\u529b\uff09\u4e4b\u95f4\u7684\u8bed\u4e49\u5173\u7cfb\uff0c\u5bf9\u4e8e\u83b7\u5f97\u7b26\u5408\u4eba\u7684\u611f\u77e5\u7684\u89c6\u89c9\u6548\u679c\u548c\u7f8e\u611f\u81f3\u5173\u91cd\u8981\u3002\u8be5\u9886\u57df\u7684\u4e00\u4e2a\u5177\u4f53\u6311\u6218\u662f\u5982\u4f55\u4e3a\u751f\u6210\u6a21\u578b\u914d\u5907\u4eba\u7c7b\u8fd0\u52a8\u8bed\u4e49\u7684\u5148\u9a8c\u77e5\u8bc6\u3002\u4e00\u4e9b\u7814\u7a76[6]\u3001[107]\u91c7\u7528\u4e86\u5e26\u6709\u8bed\u8a00\u5148\u9a8c\u7684\u9884\u8bad\u7ec3\u57fa\u7840\u6a21\u578b\u3002\u6211\u4eec\u8ba4\u4e3a\uff0c\u672a\u6765\u7684\u7814\u7a76\u53ef\u4ee5\u4ece\u6570\u636e\u3001\u65b9\u6cd5\u8bba\u548c\u8bc4\u4f30\u7b49\u591a\u4e2a\u89d2\u5ea6\u6df1\u5165\u63a2\u7d22\u8bed\u4e49\u8054\u7cfb\u3002</p> <p>\u8bc4\u4f30\u3002\u5982\u7b2c 8 \u8282\u6240\u8ff0\uff0c\u9002\u5f53\u7684\u4eba\u4f53\u8fd0\u52a8\u8bc4\u4f30\u6307\u6807\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u4e5f\u6781\u5177\u6311\u6218\u6027\u3002\u867d\u7136\u5df2\u7ecf\u63a2\u7d22\u51fa\u4e86\u5404\u79cd\u5ba2\u89c2\u7684\u8bc4\u4f30\u6307\u6807\uff0c\u4f46\u5b83\u4eec\u90fd\u5b58\u5728\u56fa\u6709\u7684\u5c40\u9650\u6027\uff0c\u65e0\u6cd5\u53d6\u4ee3\u4e3b\u89c2\u7684\u7528\u6237\u7814\u7a76[15]\u3002\u672a\u6765\u7684\u5de5\u4f5c\u91cd\u70b9\u662f\u8bbe\u8ba1\u66f4\u6709\u539f\u5219\u6027\u7684\u5ba2\u89c2\u8bc4\u4ef7\u6307\u6807\uff0c\u8fd9\u4e9b\u6307\u6807\u4e0d\u4ec5\u8981\u4e0e\u4eba\u7c7b\u611f\u77e5\u7d27\u5bc6\u7ed3\u5408\uff0c\u8fd8\u8981\u4fdd\u6301\u53ef\u89e3\u91ca\u6027\u3002</p> <p>\u53ef\u63a7\u6027\u3002\u63a7\u5236\u751f\u6210\u5185\u5bb9\u7684\u80fd\u529b\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u8fd9\u4e5f\u662f\u56fe\u50cf\u751f\u6210\u6a21\u578b\u7684\u4e00\u4e2a\u70ed\u95e8\u8bdd\u9898[219], [220], [221]\u3002\u6700\u8fd1\u7684\u4e00\u4e9b\u4f5c\u54c1\u63a2\u7d22\u4e86\u5229\u7528\u5173\u8282\u906e\u7f69[15]\u6216\u98ce\u683c\u63d0\u793a[6]\u751f\u6210\u53ef\u63a7\u7684\u4eba\u4f53\u52a8\u4f5c\u3002\u6211\u4eec\u8ba4\u4e3a\uff0c\u672a\u6765\u7684\u5de5\u4f5c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63a2\u7d22\u53ef\u63a7\u6027\uff0c\u4ee5\u521b\u9020\u66f4\u52a0\u53cb\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u4f8b\u5982\uff0c\u4ea4\u4e92\u5f0f\u548c\u7ec6\u7c92\u5ea6\u7f16\u8f91[222]\u3002</p> <p>\u4ea4\u4e92\u6027\u3002\u4eba\u4f53\u8fd0\u52a8\u7684\u4ea4\u4e92\u6027\u975e\u5e38\u91cd\u8981\uff0c\u4f46\u5c1a\u672a\u5f97\u5230\u5145\u5206\u63a2\u7d22\u3002\u76ee\u524d\u7684\u5927\u591a\u6570\u7814\u7a76\u4e3b\u8981\u4fa7\u91cd\u4e8e\u5728\u9759\u6001\u73af\u5883\u4e2d\u751f\u6210\u5355\u4eba\u52a8\u4f5c\u3002\u672a\u6765\u7684\u7814\u7a76\u53ef\u4ee5\u6df1\u5165\u63a2\u8ba8\u5728\u4eba\u4e0e\u4eba\u4ee5\u53ca\u4eba\u4e0e\u73af\u5883\u4e92\u52a8\u7684\u80cc\u666f\u4e0b\u751f\u6210\u4eba\u4f53\u8fd0\u52a8\u3002\u6f5c\u5728\u7684\u63a2\u7d22\u9886\u57df\u5305\u62ec\u4e3a\u5bc6\u5207\u4e92\u52a8\u7684\u793e\u4f1a\u7fa4\u4f53\uff08\u5982\u5bf9\u8bdd\u3001\u96c6\u4f53\u821e\u7b49\uff09\u751f\u6210\u52a8\u4f5c\uff0c\u4ee5\u53ca\u5728\u52a8\u6001\u3001\u53ef\u64cd\u4f5c\u573a\u666f\u4e2d\u751f\u6210\u52a8\u4f5c [223]\u3001[224]\u3001[225]\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/reconstruction/Depth-Gaussian/","title":"Depth-Gaussian","text":""},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/reconstruction/NeRF/","title":"NeRF","text":"<p>\u7b2c\u4e00\u6b21\u9605\u8bfb\u8ba1\u7b97\u673a\u89c6\u89c9\u76f8\u5173\u9886\u57df\u8bba\u6587\u3002</p> <p>\u539f\u6587\u94fe\u63a5\uff1aNeRF: Representing Scenes as Neural Radiance Fields for View Synthesis</p> <p>NeRF\u6846\u67b6\u603b\u4f53\u4ecb\u7ecd\u3001\u539f\u7406\u8be6\u89e3\u53ca\u76f8\u5173\u6280\u672f(\u6709\u4e00\u4e9b\u524d\u7f6e\u77e5\u8bc6\u4ecb\u7ecd)\uff1a</p> <p>\u5176\u4ed6\u76f8\u5173\u4ecb\u7ecd\u89c6\u9891\uff08\u672c\u4eba\u5e76\u672a\u89c2\u770b\uff09:</p> <p>NeRF\u6e90\u7801\u89e3\u6790</p> <p>NeRF\u7cfb\u5217\u516c\u5f00\u8bfe</p> <p>\u4e0b\u9762\u5f00\u59cb\u6b63\u5f0f\u8bba\u6587\u9605\u8bfb\u8bb0\u5f55\uff1a</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/reconstruction/NeRF/#0-abstract","title":"0 Abstract","text":"<p>\u8fd9\u4e2a\u7b97\u6cd5\u7528\u5168\u8fde\u63a5\u6df1\u5ea6\u7f51\u7edc\u6765\u8868\u793a\u573a\u666f\u3002</p> <ul> <li>\u8f93\u5165\uff1a5D\u5750\u6807\uff08\u7a7a\u95f4\u4f4d\u7f6e\\(x,y,z\\)\u548c\u89c2\u5bdf\u65b9\u5411\\(\u03b8\uff0c\u03c6\\)\uff09</li> </ul> <p></p> <ul> <li>\u8f93\u51fa\uff1a\u6bcf\u4e2a\u7a7a\u95f4\u4f4d\u7f6e\u7684\u4f53\u79ef\u5bc6\u5ea6(volume density)\u548c\u89c6\u666f\u53d1\u5c04\u8f90\u5c04\u5ea6(view-dependent emitted radiance)</li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/reconstruction/NeRF/#1-introduction","title":"1 Introduction","text":"<p>\u5c06\u9759\u6001\u573a\u666f\u8868\u793a\u4e3a\u4e00\u4e2a\u8fde\u7eed\u76845D\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u8f93\u51fa\u7a7a\u95f4\u4e2d\u6bcf\u4e2a\u70b9\u7684\u989c\u8272(radiance)\u548c\u5bc6\u5ea6(\u53ef\u7406\u89e3\u4e3a\u4e0d\u900f\u660e\u5ea6)\u3002</p> <p></p> <p>\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u5373\u5148\u5c06\u8f93\u5165\u7684100\u5f20\u56fe\u7247\u53d8\u6210\u7b2c\u4e8c\u5f20\u56fe\u7684\u6837\u5b50\uff0c\u627e\u5230\u6bcf\u4e2a\u76f8\u673a\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u7528\u4f53\u6e32\u67d3\u6280\u672f\u6cbf\u5149\u7ebf\u7d2f\u79ef\u8fd9\u4e2a\u573a\u666f\u8868\u793a\u7684\u91c7\u6837\u70b9\u4fe1\u606f\uff0c\u6700\u540e\u4ece\u65b0\u7684\u89c6\u89d2\u6e32\u67d3\u56fe\u50cf\u3002</p> <p>\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u8fd0\u884c\u6d41\u7a0b\u662f\uff1a</p> <ol> <li>\u6cbf\u76f8\u673a\u5149\u7ebf\u67e5\u8be25D\u5750\u6807</li> <li>\u5229\u7528\u795e\u7ecf\u7f51\u7edc\u5408\u6210\u89c6\u56fe</li> <li>\u7528\u4f53\u6e32\u67d3\u6280\u672f\u8f93\u51fa\u989c\u8272\u548c\u5bc6\u5ea6\uff0c\u6295\u5f71\u5230\u56fe\u50cf\u4e2d</li> </ol> <p>\u6b64\u7b97\u6cd5\u8fd8\u4f18\u5316\u4e86\u795e\u7ecf\u8f90\u5c04\u573a\uff1a</p> <p>\u200b   \u5bf9\u4e8e\u590d\u6742\u573a\u666f\uff0c\u4f18\u5316\u795e\u7ecf\u8f90\u5c04\u573a\u7684\u8868\u793a\u5e76\u6ca1\u6709\u6536\u655b\u5230\u8db3\u591f\u9ad8\u7684\u6e05\u6670\u5ea6\uff0c\u5e76\u4e14\u5728\u6bcf\u4e2a\u6444\u50cf\u673a\u5149\u7ebf\u6240\u9700\u8981\u7684\u91c7\u6837\u6570\u65b9\u9762\u6548\u7387\u4f4e\u4e0b\u3002\u6240\u4ee5\u4f5c\u8005\u8fd8\u4f7f\u7528\u4e86\u4f4d\u7f6e\u7f16\u7801\u8f93\u5165\u7684\u5750\u6807\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002</p> <p>\u200b   \u4f4d\u7f6e\u7f16\u7801\u80fd\u4f7fMLP\u8868\u793a\u9891\u7387\u66f4\u9ad8\u7684\u51fd\u6570\u3002\u4f5c\u8005\u8fd8\u63d0\u51fa\u4e86\u5206\u5c42\u91c7\u6837\u8fc7\u7a0b\uff0c\u7528\u6765\u51cf\u5c11\u9700\u8981\u7684\u8f93\u5165\u89c6\u56fe\u7684\u4e2a\u6570\u3002</p> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u7684\u6280\u672f\u8d21\u732e\u6709\uff1a</p> <ul> <li>\u5c06\u5177\u6709\u590d\u6742\u51e0\u4f55\u548c\u6750\u8d28\u7684\u8fde\u7eed\u573a\u666f\u8868\u73b0\u4e3a5D\u795e\u7ecf\u8f90\u5c04\u573a\uff0c\u53c2\u6570\u5316\u4e3a\u57fa\u672cMLP\u7f51\u7edc\u3002</li> <li>\u57fa\u4e8e\u7ecf\u5178\u4f53\u6e32\u67d3\u6280\u672f\u7684\u53ef\u5fae\u5206\u6e32\u67d3\u8fc7\u7a0b\uff0c\u5305\u62ec\u5206\u5c42\u91c7\u6837\u7b56\u7565\uff0c\u7528\u4e8e\u5c06MLP\u7684\u5bb9\u91cf\u5206\u914d\u7ed9\u573a\u666f\u4e2d\u7684\u53ef\u89c1\u5185\u5bb9\u3002</li> <li>\u5c06\u6bcf\u4e2a5D\u7a7a\u95f4\u5750\u6807\u6620\u5c04\u5230\u66f4\u9ad8\u7ef4\u5ea6\u7a7a\u95f4\u7684\u4f4d\u7f6e\u7f16\u7801\uff0c\u6210\u529f\u4f18\u5316\u795e\u7ecf\u8f90\u5c04\u573a\u4ece\u800c\u8868\u793a\u9ad8\u9891\u5185\u5bb9\u3002</li> </ul> <p></p> <p>\u200b   \u6cbf\u7740\u76f8\u673a\u7684\u5149\u7ebf\u91c7\u68375D\u5750\u6807(\u56fea)\uff0c\u5c06\u8fd9\u4e9b\u4fe1\u606f\u8f93\u5165\\(F_\u03b8\\)\u751f\u6210\u989c\u8272\u548c\u5bc6\u5ea6(\u56feb)\uff0c\u7528\u4f53\u6e32\u67d3\u6280\u672f\u5408\u62102D\u56fe\u50cf(\u56fec)\u3002\u8be5\u6e32\u67d3\u51fd\u6570\u662f\u53ef\u5fae\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6700\u5c0f\u5316\u5408\u6210\u56fe\u50cf\u548cGT\u89c2\u6d4b\u56fe\u50cf\u4e4b\u95f4\u7684error\u6765\u4f18\u5316\u573a\u666f\u8868\u793a(\u56fed)\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/reconstruction/NeRF/#2-related-work","title":"2 Related Work","text":"<p>\u200b   \u56de\u987e\u4e86\u4e00\u4e9b\u8fd9\u9879\u5de5\u4f5c\u6240\u7528\u5230\u7684\u6280\u672f\u548c\u524d\u4eba\u6240\u505a\u7684\u52aa\u529b\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/reconstruction/NeRF/#21-neural-3d-shape-representations","title":"2.1 Neural 3D shape representations","text":"<p>\u200b   \u901a\u8fc7\u4f18\u5316\u5c06\\(xyz\\)\u5750\u6807\u6620\u5c04\u5230\u6709\u7b26\u53f7\u8ddd\u79bb\u51fd\u6570\u7684\u6df1\u5c42\u7f51\u7edc\u3002\u4f46\u662f\u8be5\u51fd\u6570\u4ec5\u5141\u8bb8\u4f7f\u75282D\u56fe\u50cf\u4f18\u5316\u795e\u7ecf\u9690\u5f0f\u5f62\u72b6\u8868\u793a\uff0c\u53ea\u80fd\u8868\u793a\u51e0\u4f55\u590d\u6742\u5ea6\u8f83\u4f4e\u7684\u7b80\u5355\u5f62\u72b6\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/reconstruction/NeRF/#22-view-synthesis-and-image-based-rendering","title":"2.2 View synthesis and image-based rendering","text":"<ul> <li>mesh\u65b9\u6cd5\uff1a\u57fa\u4e8e\u56fe\u50cf\u91cd\u6295\u5f71\u7684\u57fa\u4e8e\u68af\u5ea6\u7684mesh\u4f18\u5316\u901a\u5e38\u975e\u5e38\u56f0\u96be\uff0c\u5728\u4f18\u5316\u524d\u9700\u8981\u63d0\u4f9b\u5177\u6709\u56fa\u5b9a\u62d3\u6251\u7684\u672b\u73ed\u7f51\u7edc\u4f5c\u4e3a\u521d\u59cb\u5316\u3002\u8fd9\u4e0d\u9002\u7528\u4e8e\u65e0\u7ea6\u675f\u7684\u73b0\u5b9e\u4e16\u754c\u573a\u666f\u3002</li> <li>\u4f53\u79ef\u65b9\u6cd5\uff1a\u80fd\u8868\u793a\u66f4\u590d\u6742\u7684\u6750\u6599\u548c\u5f62\u72b6\u5e76\u4e14\u9002\u5408\u57fa\u4e8e\u68af\u5ea6\u7684\u4f18\u5316\uff0c\u89c6\u89c9\u5e72\u6270\u4e5f\u66f4\u5c11\uff0c\u73b0\u6709\u7684\u65b9\u6cd5\u65f6\u95f4\u7a7a\u95f4\u590d\u6742\u5ea6\u66f4\u9ad8\u3002\u672c\u6587\u63d0\u51fa\u5728MLP\u7684\u53c2\u6570\u4e2d\u7f16\u7801\u8fde\u7eedvolume\u6765\u89c4\u907f\u8fd9\u4e2a\u95ee\u9898\uff0c\u6e32\u67d3\u8d28\u91cf\u66f4\u9ad8\uff0c\u5b58\u50a8\u6210\u672c\u66f4\u5c0f\u3002</li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/reconstruction/NeRF/#3-neural-radiance-field-scene-representation","title":"3 Neural Radiance Field Scene Representation","text":"<p>\u200b   \u672c\u6587\u5c06\u8fde\u7eed\u573a\u666f\u8868\u73b0\u4e3a5D\u5411\u91cf\u503c\u51fd\u6570\u3002\u8f93\u5165\u4e3a5D\u5750\u6807\uff0c\u8f93\u51fa\u4e3a\u6bcf\u4e2a\u70b9\u7684\u989c\u8272\\(c=(r,g,b)\\)\u548c\u7a7a\u95f4\u5bc6\u5ea6\\(\u03c3\\)\u3002</p> <p>\u200b   \u5728\u5b9e\u9645\u8868\u73b0\u4e2d\uff0c\u6211\u4eec\u5c06\u89c6\u89d2\u65b9\u5411\u8868\u793a\u4e3a3D\u5411\u91cf\\(d\\)\uff0c\u7528MLP\u7f51\u7edc\u8fd1\u4f3c\u8fd9\u79cd\u8fde\u7eed\u76845D\u573a\u666f\u8868\u793a\u3002</p> <p>\u200b   \u6211\u4eec\u901a\u8fc7\u8ba9\u7f51\u7edc\u628a\u4f53\u79ef\u5bc6\u5ea6\u9884\u6d4b\u4e3a\u4ec5\u4e0e\u4f4d\u7f6e\\(x\\)\u6709\u5173\uff0c\u6765\u4fdd\u8bc1\u8fd9\u79cd\u65b9\u6cd5\u5728\u4e0d\u540c\u89c6\u56fe\u4e0b\u662f\u4e00\u81f4\u7684\u3002</p> <p>\u200b   \u540c\u65f6RGB\u989c\u8272\\(c\\)\u9884\u6d4b\u4e3a\u4f4d\u7f6e\u548c\u89c2\u5bdf\u65b9\u5411\u7684\u51fd\u6570\uff1a</p> <ul> <li>MLP\u9996\u5148\u628a3D\u5750\u6807\\(x\\)\u901a\u8fc78\u5c42\u5168\u8fde\u63a5\u5c42(\u6fc0\u6d3b\u51fd\u6570\u4e3aReLU\uff0c\u6bcf\u5c42256\u901a\u9053)\uff0c\u8f93\u51fa\u4f53\u79ef\u5bc6\u5ea6\\(\u03c3\\)\u548c\u4e00\u4e2a256\u7ef4\u7684\u7279\u5f81\u5411\u91cf\u3002</li> <li>\u5c06\u7279\u5f81\u5411\u91cf\u4e0e\u76f8\u673a\u5149\u7ebf\u7684\u89c2\u5bdf\u65b9\u5411\u8fde\u63a5\u8d77\u6765\uff0c\u4f20\u9012\u5230\u989d\u5916\u7684\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42(\u6fc0\u6d3b\u51fd\u6570\u4e3aReLU\uff0c\u6bcf\u5c42128\u901a\u9053)\uff0c\u8be5\u5c42\u8f93\u51fa\u4e0e\u89c6\u56fe\u76f8\u5173\u7684RGB\u989c\u8272\u3002</li> </ul> <p></p> <p>\u200b   \u663e\u793a\u6765\u81ea\u4e24\u4e2a\u76f8\u673a\u4f4d\u7f6e\u7684\u4e24\u4e2a\u56fa\u5b9a3D\u70b9\u7684\u5916\u89c2\uff0c\u9884\u6d4b\u8fd9\u4e24\u4e2a3D\u70b9\u955c\u9762\u53cd\u5c04\u5916\u89c2\u7684\u53d8\u5316\u5e76\u6301\u7eed\u63a8\u5e7f\u3002</p> <p></p> <p>\u200b   \u6ca1\u6709\u89c6\u56fe\u4f9d\u8d56\u6027(\u53ea\u6709x\u8f93\u5165)\u8bad\u7ec3\u7684\u6a21\u578b\u96be\u4ee5\u8868\u793a\u955c\u9762\u53cd\u5c04\uff0c\u4f1a\u5bfc\u81f4\u8fc7\u5ea6\u5e73\u6ed1\u7684\u5916\u89c2\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/reconstruction/NeRF/#4-volume-rendering-with-radiance-fields","title":"4 Volume Rendering with Radiance Fields","text":"<p>\u4f53\u6e32\u67d3\uff1a\u4f53\u6e32\u67d3(Volume Rendering)\u4e0e\u5149\u7ebf\u6295\u5c04(Ray Casting)\u7b97\u6cd5\u8be6\u89e3</p> <p>alpha\u5408\u6210\uff1a\u56fe\u50cf\u4e0e\u80cc\u666f\u7ed3\u5408\uff0c\u53ef\u4ee5\u4ea7\u751f\u90e8\u5206\u900f\u660e\u6216\u5168\u900f\u660e\u7684\u89c6\u89c9\u6548\u679c\uff0c\u900f\u660e\u5ea6\u7528(0,1)\u8868\u793a</p> <p>alpha\u6df7\u5408\uff1a\u534a\u900f\u660e\u7684\u524d\u666f\u8272\u548c\u80cc\u666f\u7ed3\u5408\u7684\u8fc7\u7a0b\uff0c\u52a0\u6743\u8ba1\u7b97\u3002 $ \\left{ \\begin{array}{**l} out_A &amp; = &amp; src_A + dst_A(1-src_A) \\ out_{RGB} &amp; = &amp; \\frac {(src_{RGB}src_A+dst_{RGB}dst_A(1-src_A))}{out_A} \\ out_A=0 &amp; =&gt; &amp; out_{RGB}=0 \\end{array} \\right. $</p> <p>\u4f53\u5bc6\u5ea6\u5373\u4e3a\u5149\u7ebf\u5728x\u5904\u7ec8\u6b62\u7684\u6982\u7387\uff0c\u76f8\u673a\u5149\u7ebf\\(r_{(t)}=o+td\\)\u7684\u9884\u671f\u989c\u8272\u4e3a\uff1a</p> <p>\\(C_{(r)}\\int_{t_n}^{t_f} T_{(t)}\u03c3(r_{(t)}c(r_{(t)})\uff0cd) dt, where: T_{(t)}=exp(-\\int_{t_n}^{t} \u03c3(r_{(s)}) ds)\\)</p> <p>\\(T_{(t)}\\)\u8868\u793a\u6cbf\u5149\u7ebf\u4ece\\(t_n\\)\u5230\\(t\\)\u4f20\u64ad\u800c\u4e0d\u649e\u51fb\u4efb\u4f55\u5176\u4ed6\u7c92\u5b50\u7684\u6982\u7387\uff0c\u8fd9\u4e2a\\(T\\)\u53ef\u4ee5\u907f\u514d\u6e32\u67d3\u65f6\u8fc7\u5ea6\u5f15\u5165\u5bf9\u8c61\u80cc\u9762\u7684\u4fe1\u606f\u3002</p> <p>\u6211\u4eec\u4f7f\u7528\u6570\u503c\u4f30\u8ba1\u8fd9\u4e2a\u8fde\u7eed\u79ef\u5206\u3002\u6211\u4eec\u5c06\\([t_n,t_f]\\)\u5212\u5206\u4e3a\\(N\\)\u4e2a\u5747\u5300\u95f4\u9694\u7684\u533a\u57df\uff0c\u7136\u540e\u4ece\u6bcf\u4e2a\u533a\u57df\u5185\u5747\u5300\u968f\u673a\u62bd\u53d6\u4e00\u4e2a\u91c7\u6837\u70b9\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/reconstruction/NeRF/#5-optimizing-a-neural-radiance-field","title":"5 Optimizing a Neural Radiance Field","text":"<p>\u200b   \u4e0a\u4e00\u8282\u4e2d\u5df2\u7ecf\u63cf\u8ff0\u4e86\u5c06\u573a\u666f\u5efa\u6a21\u4e3a\u795e\u7ecf\u8f90\u5c04\u573a\u548c\u4ece\u8be5\u8868\u793a\u4e2d\u6e32\u67d3\u65b0\u89c6\u56fe\u6240\u9700\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u4f46\u662f\u4ecd\u7136\u4e0d\u80fd\u8fbe\u5230\u6700\u9ad8\u7684\u8d28\u91cf\u3002\u56e0\u6b64\uff0c\u9700\u8981\u5f15\u5165\u4e24\u9879\u6539\u8fdb\uff1a</p> <ul> <li>\u8f93\u5165\u5750\u6807\u7684\u4f4d\u7f6e\u7f16\u7801\uff0c\u6709\u52a9\u4e8eMLP\u8868\u793a\u9ad8\u9891\u51fd\u6570</li> <li>\u5206\u5c42\u91c7\u6837\u8fc7\u7a0b\uff0c\u6709\u6548\u5730\u5bf9\u9ad8\u9891\u8fdb\u884c\u91c7\u6837</li> </ul>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/reconstruction/NeRF/#51-\u4f4d\u7f6e\u7f16\u7801positional-encoding","title":"5.1 \u4f4d\u7f6e\u7f16\u7801(Positional encoding)","text":"<p>\u200b   \u5c06F<sub>\u03b8</sub>\u91cd\u65b0\u8868\u793a\u4e3a\u4e24\u4e2a\u51fd\u6570\u7684\u7ec4\u5408\\(F_\u03b8=F_{\u03b8}^{'}\u25cb\u03b3\\)\uff0c\u03b3\u662f\u4ece\\(R\\)\u7a7a\u95f4\u5230\\(R^{2L}\\)\u7a7a\u95f4\u7684\u51fd\u6570\uff0c\u5b9e\u9645\u4e0a\\(F_{\u03b8}^{'}\\)\u8fd8\u662f\u4e00\u4e2aMLP\u3002</p> <p>\u200b   \u5728\u6d41\u884c\u7684Transformer\u67b6\u6784\u4e2d\u4e5f\u4f7f\u7528\u4e86\u7c7b\u4f3c\u7684\u6620\u5c04\uff0c\u5728\u8fd9\u91cc\u5b83\u88ab\u79f0\u4e3a\u4f4d\u7f6e\u7f16\u7801\u3002\u7136\u800c\uff0cTransformers\u5c06\u5176\u7528\u4e8e\u4e00\u4e2a\u4e0d\u540c\u7684\u76ee\u6807\uff0c\u5373\u63d0\u4f9b\u5e8f\u5217\u4e2dtoken\u7684\u79bb\u6563\u4f4d\u7f6e\uff0c\u4f5c\u4e3a\u4e0d\u5305\u542b\u4efb\u4f55\u987a\u5e8f\u6982\u5ff5\u7684\u67b6\u6784\u7684\u8f93\u5165\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\u5c06\u8fde\u7eed\u8f93\u5165\u5750\u6807\u6620\u5c04\u5230\u66f4\u9ad8\u7ef4\u7a7a\u95f4\uff0c\u4ee5\u4f7f\u6211\u4eec\u7684MLP\u66f4\u5bb9\u6613\u903c\u8fd1\u66f4\u9ad8\u9891\u7684\u51fd\u6570\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/reconstruction/NeRF/#52-\u5206\u5c42\u4f53\u79ef\u91c7\u6837hierarchical-volume-sampling","title":"5.2 \u5206\u5c42\u4f53\u79ef\u91c7\u6837(Hierarchical volume sampling)","text":"<p>\u200b   \u6e32\u67d3\u7b56\u7565\u662f\u5728\u6bcf\u4e2a\u76f8\u673a\u5149\u7ebf\u7684N\u4e2a\u67e5\u8be2\u70b9\u5904\u5bc6\u96c6\u8bc4\u4f30\u795e\u5c06\u8f90\u5c04\u573a\u7f51\u7edc\uff0c\u8fd9\u79cd\u7b56\u7565\u6548\u7387\u4f4e\u4e0b\uff0c\u6240\u4ee5\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u4e2d\u5206\u5c42\u8868\u793a\u6cd5\uff0c\u901a\u8fc7\u6309\u6700\u7ec8\u6e32\u67d3\u7684\u9884\u671f\u6548\u679c\u6309\u6bd4\u4f8b\u5206\u914d\u91c7\u6837\u70b9\u63d0\u9ad8\u6e32\u67d3\u6548\u7387\u3002</p> <p>\u200b   \u4e0d\u4f7f\u7528\u5355\u4e2a\u795e\u7ecf\u7f51\u7edc\u6765\u8868\u793a\u573a\u666f\uff0c\u800c\u540c\u65f6\u4f18\u5316\u4e24\u4e2a\u795e\u7ecf\u7f51\u7edc\uff1a\"course\"\u548c\"fine\"</p> <ol> <li>\u9996\u5148\uff0c\u4f7f\u7528\u57fa\u672c\u7684\u5206\u5c42\u91c7\u6837\u5bf9\u4e00\u7ec4N<sub>c</sub>\u4e2a\u4f4d\u7f6e\u8fdb\u884c\u91c7\u6837\uff0c\u8bc4\u4f30\u8fd9\u4e9b\u4f4d\u7f6e\u5bf9\u5e94\u7684course\u7f51\u7edc\u3002</li> <li>\u7136\u540e\u6cbf\u7740\u6bcf\u4e00\u6761\u5149\u7ebf\u751f\u6210\u4e00\u4e2a\u66f4\u5408\u7406\u7684\u70b9\u91c7\u6837\uff0c\u5176\u4e2d\u91c7\u6837\u70b9\u504f\u5411\u4e8e\u4f53\u79ef\u5b58\u5728\u7684\u76f8\u5173\u90e8\u5206\u3002</li> <li>\u4e3a\u6b64\uff0c\u6211\u4eec\u9996\u5148\u4ececourse\u7f51\u7edc\u751f\u6210\u5408\u6210\u989c\u8272\uff0c\u7136\u540e\u5728\u5149\u7ebf\u4e0a\u91c7\u6837\u4f53\u5bc6\u5ea6\u5927\u7684\u70b9\uff0c\u91c7\u6837N<sub>f</sub>\u4e2a\u4f5c\u4e3a\u7b2c\u4e8c\u7ec4\u91c7\u6837\u70b9\uff0c\u5728\u7b2c\u4e00\u7ec4\u548c\u7b2c\u4e8c\u7ec4\u91c7\u6837\u7684\u5e76\u96c6\u4e0a\u8ba1\u7b97\"fine\"\u7f51\u7edc\uff0c\u5e76\u8ba1\u7b97\u6700\u7ec8\u7684\u6e32\u67d3\u989c\u8272\u3002</li> </ol>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/reconstruction/NeRF/#53-\u5b9e\u73b0\u7ec6\u8282","title":"5.3 \u5b9e\u73b0\u7ec6\u8282","text":"<p>\u200b   \u6211\u4eec\u4e3a\u6bcf\u4e2a\u573a\u666f\u4f18\u5316\u4e00\u4e2a\u5355\u72ec\u7684\u795e\u7ecf\u8fde\u7eed\u4f53\u79ef\u8868\u793a\u7f51\u7edc\u3002\u9700\u8981\u7684\u53c2\u6570\u6709\uff1aRGB\u56fe\u50cf\u6570\u636e\u96c6\u3001\u76f8\u5e94\u7684\u76f8\u673a\u5916\u53c2\u548c\u5185\u53c2\u4ee5\u53ca\u573a\u666f\u8fb9\u754c\u3002\u5728\u6bcf\u6b21\u4f18\u5316\u8fed\u4ee3\u4e2d\uff0c\u6211\u4eec\u4ece\u6570\u636e\u96c6\u4e2d\u7684\u6240\u6709\u50cf\u7d20\u96c6\u5408\u4e2d\u968f\u673a\u91c7\u6837\u4e00\u6279\u76f8\u673a\u5149\u7ebf\uff0c\u7136\u540e\u6309\u7167\\(5.2\\)\u4e2d\u7684\u5206\u5c42\u91c7\u6837\u3002\u6700\u540e\u7684\u635f\u5931\u53ea\u662fcourse\u548cfine\u7684\u6e32\u67d3\u50cf\u7d20\u548c\u771f\u5b9e\u50cf\u7d20\u989c\u8272\u4e4b\u95f4\u7684\u5e73\u65b9\u8bef\u5dee\u3002</p> <p></p> <p>\u200b   \u5176\u4e2d\uff0c\\(R\\)\u4e3abatch\u4e2d\u7684\u5149\u7ebf\u96c6\uff0c\\(C(r),C_{c}(r),C_{f}(r)\\)\u4e3aGT\uff0ccourse\u7f51\u7edc\u9884\u6d4b\uff0cfine\u7f51\u7edc\u9884\u6d4b\u7684RGB\u989c\u8272\u3002</p>"},{"location":"%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/reconstruction/NeRF/#6-results","title":"6 Results","text":"<p>\u4e24\u79cd\u6570\u636e\u96c6\uff1a</p> <ul> <li>Synthetic renderings of objects</li> <li>Real images of complex scenes</li> </ul> <p>nerf-pytorch\u4ee3\u7801\u9605\u8bfb\u7b14\u8bb0\uff1anerf-notes</p> <p>\u4e0a\u624bpytorch\uff1a60\u5206\u949f\u6559\u4f60\u4e0a\u624bPyTorch + \u8fc1\u79fb\u5b66\u4e60</p>"}]}